{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1","program":"/home/mcrae/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","stm32f3xx_hal","--edition=2018","/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"device-selected\"","--cfg","feature=\"direct-call-deprecated\"","--cfg","feature=\"gpio-f303\"","--cfg","feature=\"stm32-usbd\"","--cfg","feature=\"stm32f303\"","--cfg","feature=\"stm32f303xc\"","--cfg","feature=\"unproven\"","-C","metadata=368f49a504b32acc","-C","extra-filename=-368f49a504b32acc","--out-dir","/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/mcrae/Code/hermes/target/rls/debug/deps","--extern","bare_metal=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libbare_metal-82ec2b472a5005e0.rmeta","--extern","cfg_if=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libcfg_if-42dd4a76eb3ec711.rmeta","--extern","cortex_m=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m-75ec4e1246590125.rmeta","--extern","cortex_m_rt=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m_rt-f96e512bee236227.rmeta","--extern","embedded_dma=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_dma-90e62ab1da4257a0.rmeta","--extern","embedded_hal=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_hal-1a9096836ed8a33b.rmeta","--extern","nb=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libnb-f025830ab97efee9.rmeta","--extern","paste=/home/mcrae/Code/hermes/target/rls/debug/deps/libpaste-e4fd5d02d2475dc8.so","--extern","rtcc=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/librtcc-46fd711e9578c276.rmeta","--extern","stm32_usbd=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libstm32_usbd-4803e0948b2347c9.rmeta","--extern","stm32f3=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libstm32f3-9b03dfb984327f22.rmeta","--extern","void=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libvoid-40c26dfb8189291a.rmeta","--cap-lints","allow","-L","/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-666e4cf709e45b81/out","-L","/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-rt-96d853676cce9bea/out","--error-format=json","--sysroot","/home/mcrae/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libstm32f3xx_hal-368f49a504b32acc.rmeta"},"prelude":{"crate_id":{"name":"stm32f3xx_hal","disambiguator":[17329788440228398372,1631475345854006102]},"crate_root":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src","external_crates":[{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2184632775997829466,18026496178680965583]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3726307931522043477,4911878782996857177]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8506066526834043935,2338947288633172727]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","num":4,"id":{"name":"embedded_hal","disambiguator":[4395611530972436292,17551568692586388236]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":5,"id":{"name":"nb","disambiguator":[15401273450865999483,13772608842728756265]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":6,"id":{"name":"nb","disambiguator":[15010377001352867217,15689185407496902103]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","num":7,"id":{"name":"void","disambiguator":[13969028487453651476,12471677446926910835]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":8,"id":{"name":"stm32f3","disambiguator":[5345257032398627474,2904645227439982461]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","num":9,"id":{"name":"cortex_m","disambiguator":[12626187051027814012,16491162705167700869]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":10,"id":{"name":"aligned","disambiguator":[5958134965927947554,11150977462593942335]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":11,"id":{"name":"as_slice","disambiguator":[17268065031624189267,13044817067311901653]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":12,"id":{"name":"generic_array","disambiguator":[11162197228457538909,16109310679438559951]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":13,"id":{"name":"typenum","disambiguator":[2848240836844831227,8884150917098890013]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":14,"id":{"name":"generic_array","disambiguator":[13220144597453330005,8574045979898816905]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":15,"id":{"name":"generic_array","disambiguator":[17030001028011470717,16058156605002383023]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":16,"id":{"name":"stable_deref_trait","disambiguator":[2666301955834542947,8649774218890581719]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":17,"id":{"name":"bare_metal","disambiguator":[4564207712410018107,9487563642666486471]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":18,"id":{"name":"volatile_register","disambiguator":[3895265408538198920,17962273546913066849]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":19,"id":{"name":"vcell","disambiguator":[13115093308910904468,13284027448544462362]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","num":20,"id":{"name":"cortex_m","disambiguator":[16736174643873131162,13751410424463156830]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","num":21,"id":{"name":"embedded_dma","disambiguator":[1169727006816391080,11883246111035132504]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","num":22,"id":{"name":"stm32_usbd","disambiguator":[15296746627419457267,8575441622223714080]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","num":23,"id":{"name":"usb_device","disambiguator":[9987430504416234792,6040776924156541190]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","num":24,"id":{"name":"cfg_if","disambiguator":[8841120677341736999,365024902851535035]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","num":25,"id":{"name":"paste","disambiguator":[7806532454659616294,17889824386619199141]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","num":26,"id":{"name":"rtcc","disambiguator":[8594954915678852112,6036801780926301838]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","num":27,"id":{"name":"chrono","disambiguator":[15519957382535013717,10551311302204177973]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","num":28,"id":{"name":"num_integer","disambiguator":[12540189907850407377,7259722394390819361]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","num":29,"id":{"name":"num_traits","disambiguator":[15747110469652692637,13519712096748236156]}}],"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":0,"byte_end":5432,"line_start":1,"line_end":213,"column_start":1,"column_end":13}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":2757,"byte_end":2769,"line_start":99,"line_end":99,"column_start":9,"column_end":21},"alias_span":null,"name":"hal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":0},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":2787,"byte_end":2789,"line_start":101,"line_end":101,"column_start":9,"column_end":11},"alias_span":null,"name":"nb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":19},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":2803,"byte_end":2808,"line_start":102,"line_end":102,"column_start":13,"column_end":18},"alias_span":null,"name":"block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":73},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4047,"byte_end":4056,"line_start":155,"line_end":155,"column_start":18,"column_end":27},"alias_span":null,"name":"pac","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":8,"index":73},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4548,"byte_end":4551,"line_start":172,"line_end":172,"column_start":16,"column_end":19},"alias_span":null,"name":"stm32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":108},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10713603,"byte_end":10713609,"line_start":4,"line_end":4,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32f3xx_hal_dma_DmaExt","value":"","parent":{"krate":0,"index":472}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10713662,"byte_end":10713670,"line_start":5,"line_end":5,"column_start":23,"column_end":31},"alias_span":null,"name":"_stm32f3xx_hal_flash_FlashExt","value":"","parent":{"krate":0,"index":472}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10713726,"byte_end":10713733,"line_start":6,"line_end":6,"column_start":22,"column_end":29},"alias_span":null,"name":"_stm32f3xx_hal_gpio_GpioExt","value":"","parent":{"krate":0,"index":472}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10713795,"byte_end":10713796,"line_start":7,"line_end":7,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":472}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10713818,"byte_end":10713824,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"alias_span":null,"name":"_stm32f3xx_hal_rcc_RccExt","value":"","parent":{"krate":0,"index":472}},{"kind":"Use","ref_id":{"krate":0,"index":849},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10713876,"byte_end":10713882,"line_start":9,"line_end":9,"column_start":22,"column_end":28},"alias_span":null,"name":"_stm32f3xx_hal_time_U32Ext","value":"","parent":{"krate":0,"index":472}},{"kind":"Use","ref_id":{"krate":4,"index":147},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10713982,"byte_end":10713990,"line_start":12,"line_end":12,"column_start":23,"column_end":31},"alias_span":null,"name":"_embedded_hal_digital_InputPin","value":"","parent":{"krate":0,"index":472}},{"kind":"Use","ref_id":{"krate":4,"index":127},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10714048,"byte_end":10714057,"line_start":13,"line_end":13,"column_start":23,"column_end":32},"alias_span":null,"name":"_embedded_hal_digital_OutputPin","value":"","parent":{"krate":0,"index":472}},{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10714116,"byte_end":10714133,"line_start":14,"line_end":14,"column_start":23,"column_end":40},"alias_span":null,"name":"_embedded_hal_digital_StatefulOutputPin","value":"","parent":{"krate":0,"index":472}},{"kind":"Use","ref_id":{"krate":4,"index":134},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10714200,"byte_end":10714219,"line_start":15,"line_end":15,"column_start":23,"column_end":42},"alias_span":null,"name":"_embedded_hal_digital_ToggleableOutputPin","value":"","parent":{"krate":0,"index":472}},{"kind":"Use","ref_id":{"krate":4,"index":352},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10814906,"byte_end":10814910,"line_start":10,"line_end":10,"column_start":27,"column_end":31},"alias_span":null,"name":"Mode","value":"","parent":{"krate":0,"index":769}},{"kind":"Use","ref_id":{"krate":4,"index":338},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10814912,"byte_end":10814917,"line_start":10,"line_end":10,"column_start":33,"column_end":38},"alias_span":null,"name":"Phase","value":"","parent":{"krate":0,"index":769}},{"kind":"Use","ref_id":{"krate":4,"index":324},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10814919,"byte_end":10814927,"line_start":10,"line_end":10,"column_start":40,"column_end":48},"alias_span":null,"name":"Polarity","value":"","parent":{"krate":0,"index":769}},{"kind":"Use","ref_id":{"krate":21,"index":12},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":23804,"byte_end":23814,"line_start":12,"line_end":12,"column_start":24,"column_end":34},"alias_span":null,"name":"ReadBuffer","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":21,"index":15},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":23816,"byte_end":23827,"line_start":12,"line_end":12,"column_start":36,"column_end":47},"alias_span":null,"name":"WriteBuffer","value":"","parent":{"krate":0,"index":92}},{"kind":"Use","ref_id":{"krate":22,"index":29},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40834,"byte_end":40840,"line_start":14,"line_end":14,"column_start":21,"column_end":27},"alias_span":null,"name":"UsbBus","value":"","parent":{"krate":0,"index":225}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":0,"byte_end":5432,"line_start":1,"line_end":213,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":9862},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":289},{"krate":0,"index":315},{"krate":0,"index":329},{"krate":0,"index":391},{"krate":0,"index":472},{"krate":0,"index":484},{"krate":0,"index":543},{"krate":0,"index":628},{"krate":0,"index":711},{"krate":0,"index":769},{"krate":0,"index":846},{"krate":0,"index":873},{"krate":0,"index":16},{"krate":0,"index":92},{"krate":0,"index":225},{"krate":0,"index":252}],"decl_id":null,"docs":" # stm32f3xx-hal","sig":null,"attributes":[{"value":"*\n # stm32f3xx-hal\n\n `stm32f3xx-hal` contains a multi device hardware abstraction on top of the\n peripheral access API for the STMicro [STM32F3][stm] series microcontrollers. The\n selection of the MCU is done by [feature][f] gates\n\n [f]: #selecting-the-right-chip\n [stm]: https://www.st.com/en/microcontrollers-microprocessors/stm32f3-series.html\n\n # Selecting the right chip\n\n   This crate requires you to specify your target chip as a feature.\n\n   Please select one of the following\n\n   (Note: `x` denotes any character in [a-z])\n   *   stm32f301\n   *   stm32f318\n   *   stm32f302xb\n   *   stm32f302xc\n   *   stm32f302xd\n   *   stm32f302xe\n   *   stm32f302x6\n   *   stm32f302x8\n   *   stm32f303xb\n   *   stm32f303xc\n   *   stm32f303xd\n   *   stm32f303xe\n   *   stm32f303x6\n   *   stm32f303x8\n   *   stm32f373\n   *   stm32f378\n   *   stm32f334\n   *   stm32f328\n   *   stm32f358\n   *   stm32f398\n\n   Example: The STM32F3Discovery board has a STM32F303VCT6 chip.\n   So you want to expand your call to `cargo` with `--features stm32f303xc`.\n\n   For more information, see the [README](https://github.com/stm32-rs/stm32f3xx-hal/blob/master/README.md#selecting-the-right-chip)\n*/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":0,"byte_end":1176,"line_start":1,"line_end":43,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":1177,"byte_end":1187,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":1188,"byte_end":1219,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"warn(missing_docs)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":1220,"byte_end":1242,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"deny(macro_use_extern_crate)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":1243,"byte_end":1275,"line_start":47,"line_end":47,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":289},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay","qualname":"::delay","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313}],"decl_id":null,"docs":" Delays\n","sig":null,"attributes":[{"value":"/ Delays","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638059,"byte_end":10638069,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638313,"byte_end":10638318,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"Delay","qualname":"::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"decl_id":null,"docs":" System timer (SysTick) as a delay provider\n","sig":null,"attributes":[{"value":"/ System timer (SysTick) as a delay provider","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638255,"byte_end":10638301,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638450,"byte_end":10638453,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Delay>::new","value":"pub fn new(SYST, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the system timer (SysTick) as a delay provider\n","sig":null,"attributes":[{"value":"/ Configures the system timer (SysTick) as a delay provider","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638377,"byte_end":10638438,"line_start":18,"line_end":18,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638651,"byte_end":10638655,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"free","qualname":"<Delay>::free","value":"pub fn free(Self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":" Releases the system timer (SysTick) resource\n","sig":null,"attributes":[{"value":"/ Releases the system timer (SysTick) resource","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638591,"byte_end":10638639,"line_start":25,"line_end":25,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":315},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flash","qualname":"::flash","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327}],"decl_id":null,"docs":" Flash memory\n","sig":null,"attributes":[{"value":"/ Flash memory","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10639633,"byte_end":10639649,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":319},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10639748,"byte_end":10639756,"line_start":6,"line_end":6,"column_start":11,"column_end":19},"name":"FlashExt","qualname":"::flash::FlashExt","value":"FlashExt","parent":null,"children":[{"krate":0,"index":320}],"decl_id":null,"docs":" Extension trait to constrain the FLASH peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait to constrain the FLASH peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10639684,"byte_end":10639737,"line_start":5,"line_end":5,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10639849,"byte_end":10639858,"line_start":8,"line_end":8,"column_start":8,"column_end":17},"name":"constrain","qualname":"::flash::FlashExt::constrain","value":"pub fn constrain(Self) -> Parts","parent":{"krate":0,"index":319},"children":[],"decl_id":null,"docs":" Constrains the FLASH peripheral to play nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the FLASH peripheral to play nicely with the other abstractions","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10639763,"byte_end":10639841,"line_start":7,"line_end":7,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":323},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10640050,"byte_end":10640055,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Parts","qualname":"::flash::Parts","value":"Parts { acr }","parent":null,"children":[{"krate":0,"index":324}],"decl_id":null,"docs":" Constrained FLASH peripheral\n","sig":null,"attributes":[{"value":"/ Constrained FLASH peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10640006,"byte_end":10640038,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":324},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10640094,"byte_end":10640097,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"acr","qualname":"::flash::Parts::acr","value":"flash::ACR","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Opaque ACR register\n","sig":null,"attributes":[{"value":"/ Opaque ACR register","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10640062,"byte_end":10640085,"line_start":21,"line_end":21,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":325},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10640142,"byte_end":10640145,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"ACR","qualname":"::flash::ACR","value":"ACR {  }","parent":null,"children":[{"krate":0,"index":326}],"decl_id":null,"docs":" Opaque ACR register\n","sig":null,"attributes":[{"value":"/ Opaque ACR register","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10640107,"byte_end":10640130,"line_start":25,"line_end":25,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":329},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gpio","qualname":"::gpio","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":9888},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":928},{"krate":0,"index":933},{"krate":0,"index":950},{"krate":0,"index":955},{"krate":0,"index":959},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":2315},{"krate":0,"index":3634},{"krate":0,"index":4770},{"krate":0,"index":5906},{"krate":0,"index":7039}],"decl_id":null,"docs":" General Purpose Input / Output","sig":null,"attributes":[{"value":"/ General Purpose Input / Output","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640349,"byte_end":10640383,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640384,"byte_end":10640387,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ To use the GPIO pins, you first need to configure the GPIO bank (GPIOA, GPIOB, ...) that you","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640388,"byte_end":10640484,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ are interested in. This is done using the [`GpioExt::split`] function.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640485,"byte_end":10640559,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640560,"byte_end":10640563,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640564,"byte_end":10640571,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640572,"byte_end":10640619,"line_start":7,"line_end":7,"column_start":1,"column_end":48}},{"value":"/ let rcc = dp.RCC.constrain();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640620,"byte_end":10640653,"line_start":8,"line_end":8,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640654,"byte_end":10640657,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ let mut gpioa = dp.GPIOA.split(&mut rcc.ahb);","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640658,"byte_end":10640707,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640708,"byte_end":10640715,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640716,"byte_end":10640719,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The resulting [Parts](gpioa::Parts) struct contains one field for each","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640720,"byte_end":10640794,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ pin, as well as some shared registers.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640795,"byte_end":10640837,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640838,"byte_end":10640841,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ To use a pin, first use the relevant `into_...` method of the [pin](gpioa::PA0).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640842,"byte_end":10640926,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640927,"byte_end":10640930,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640931,"byte_end":10640942,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ let pa0 = gpioa.pa0.into_push_pull_output(&mut gpioa.moder, &mut gpioa.otyper);","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10640943,"byte_end":10641026,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641027,"byte_end":10641034,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641035,"byte_end":10641038,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ And finally, you can use the functions from the [InputPin] or [OutputPin] traits in","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641039,"byte_end":10641126,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"/ `embedded_hal`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641127,"byte_end":10641145,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641146,"byte_end":10641149,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For a complete example, see [examples/toggle.rs]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641150,"byte_end":10641202,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641203,"byte_end":10641206,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [InputPin]: embedded_hal::digital::v2::InputPin","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641207,"byte_end":10641258,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/ [OutputPin]: embedded_hal::digital::v2::OutputPin","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641259,"byte_end":10641312,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ [examples/toggle.rs]: https://github.com/stm32-rs/stm32f3xx-hal/blob/v0.6.0/examples/toggle.rs","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641313,"byte_end":10641411,"line_start":29,"line_end":29,"column_start":1,"column_end":99}}]},{"kind":"Trait","id":{"krate":0,"index":337},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641873,"byte_end":10641880,"line_start":45,"line_end":45,"column_start":11,"column_end":18},"name":"GpioExt","qualname":"::gpio::GpioExt","value":"GpioExt","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":" Extension trait to split a GPIO peripheral in independent pins and registers\n","sig":null,"attributes":[{"value":"/ Extension trait to split a GPIO peripheral in independent pins and registers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641782,"byte_end":10641862,"line_start":44,"line_end":44,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":338},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641944,"byte_end":10641949,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"Parts","qualname":"::gpio::GpioExt::Parts","value":"type Parts;","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" The Parts to split the GPIO peripheral into\n","sig":null,"attributes":[{"value":"/ The Parts to split the GPIO peripheral into","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641887,"byte_end":10641934,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642025,"byte_end":10642030,"line_start":50,"line_end":50,"column_start":8,"column_end":13},"name":"split","qualname":"::gpio::GpioExt::split","value":"pub fn split(Self, &mut AHB) -> Self::Parts","parent":{"krate":0,"index":337},"children":[],"decl_id":null,"docs":" Splits the GPIO block into independent pins and registers\n","sig":null,"attributes":[{"value":"/ Splits the GPIO block into independent pins and registers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10641956,"byte_end":10642017,"line_start":49,"line_end":49,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642110,"byte_end":10642115,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"Input","qualname":"::gpio::Input","value":"Input {  }","parent":null,"children":[{"krate":0,"index":342}],"decl_id":null,"docs":" Input mode (type state)\n","sig":null,"attributes":[{"value":"/ Input mode (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642071,"byte_end":10642098,"line_start":53,"line_end":53,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642200,"byte_end":10642208,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"Floating","qualname":"::gpio::Floating","value":"","parent":null,"children":[],"decl_id":null,"docs":" Floating input (type state)\n","sig":null,"attributes":[{"value":"/ Floating input (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642157,"byte_end":10642188,"line_start":58,"line_end":58,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":345},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642256,"byte_end":10642264,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"PullDown","qualname":"::gpio::PullDown","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled down input (type state)\n","sig":null,"attributes":[{"value":"/ Pulled down input (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642210,"byte_end":10642244,"line_start":60,"line_end":60,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642310,"byte_end":10642316,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"PullUp","qualname":"::gpio::PullUp","value":"","parent":null,"children":[],"decl_id":null,"docs":" Pulled up input (type state)\n","sig":null,"attributes":[{"value":"/ Pulled up input (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642266,"byte_end":10642298,"line_start":62,"line_end":62,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":349},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642359,"byte_end":10642365,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"Output","qualname":"::gpio::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":351}],"decl_id":null,"docs":" Output mode (type state)\n","sig":null,"attributes":[{"value":"/ Output mode (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642319,"byte_end":10642347,"line_start":65,"line_end":65,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":352},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642452,"byte_end":10642460,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"PushPull","qualname":"::gpio::PushPull","value":"","parent":null,"children":[],"decl_id":null,"docs":" Push pull output (type state)\n","sig":null,"attributes":[{"value":"/ Push pull output (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642407,"byte_end":10642440,"line_start":70,"line_end":70,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642508,"byte_end":10642517,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"OpenDrain","qualname":"::gpio::OpenDrain","value":"","parent":null,"children":[],"decl_id":null,"docs":" Open drain output (type state)\n","sig":null,"attributes":[{"value":"/ Open drain output (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642462,"byte_end":10642496,"line_start":72,"line_end":72,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642560,"byte_end":10642566,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"Analog","qualname":"::gpio::Analog","value":"","parent":null,"children":[],"decl_id":null,"docs":" Analog mode (type state)\n","sig":null,"attributes":[{"value":"/ Analog mode (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642520,"byte_end":10642548,"line_start":75,"line_end":75,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642618,"byte_end":10642621,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"AF0","qualname":"::gpio::AF0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 0 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 0 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642569,"byte_end":10642606,"line_start":78,"line_end":78,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642673,"byte_end":10642676,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"AF1","qualname":"::gpio::AF1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 1 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 1 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642624,"byte_end":10642661,"line_start":81,"line_end":81,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642728,"byte_end":10642731,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"AF2","qualname":"::gpio::AF2","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 2 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 2 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642679,"byte_end":10642716,"line_start":84,"line_end":84,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642783,"byte_end":10642786,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"AF3","qualname":"::gpio::AF3","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 3 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 3 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642734,"byte_end":10642771,"line_start":87,"line_end":87,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":366},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642838,"byte_end":10642841,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"AF4","qualname":"::gpio::AF4","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 4 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 4 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642789,"byte_end":10642826,"line_start":90,"line_end":90,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":368},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642893,"byte_end":10642896,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"AF5","qualname":"::gpio::AF5","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 5 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 5 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642844,"byte_end":10642881,"line_start":93,"line_end":93,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642948,"byte_end":10642951,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"AF6","qualname":"::gpio::AF6","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 6 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 6 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642899,"byte_end":10642936,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":372},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643003,"byte_end":10643006,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"AF7","qualname":"::gpio::AF7","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 7 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 7 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10642954,"byte_end":10642991,"line_start":99,"line_end":99,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643058,"byte_end":10643061,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"AF8","qualname":"::gpio::AF8","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 8 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 8 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643009,"byte_end":10643046,"line_start":102,"line_end":102,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643113,"byte_end":10643116,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"AF9","qualname":"::gpio::AF9","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 9 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 9 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643064,"byte_end":10643101,"line_start":105,"line_end":105,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":378},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643169,"byte_end":10643173,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"AF10","qualname":"::gpio::AF10","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 10 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 10 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643119,"byte_end":10643157,"line_start":108,"line_end":108,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":380},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643226,"byte_end":10643230,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"AF11","qualname":"::gpio::AF11","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 11 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 11 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643176,"byte_end":10643214,"line_start":111,"line_end":111,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643283,"byte_end":10643287,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"AF12","qualname":"::gpio::AF12","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 12 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 12 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643233,"byte_end":10643271,"line_start":114,"line_end":114,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643340,"byte_end":10643344,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"AF13","qualname":"::gpio::AF13","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 13 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 13 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643290,"byte_end":10643328,"line_start":117,"line_end":117,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643397,"byte_end":10643401,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"AF14","qualname":"::gpio::AF14","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 14 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 14 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643347,"byte_end":10643385,"line_start":120,"line_end":120,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643454,"byte_end":10643458,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"name":"AF15","qualname":"::gpio::AF15","value":"","parent":null,"children":[],"decl_id":null,"docs":" Alternate function 15 (type state)\n","sig":null,"attributes":[{"value":"/ Alternate function 15 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/gpio.rs","byte_start":10643404,"byte_end":10643442,"line_start":123,"line_end":123,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":391},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i2c","qualname":"::i2c","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":10352},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":10372},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":7581},{"krate":0,"index":7590},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":9849},{"krate":0,"index":9850},{"krate":0,"index":9851},{"krate":0,"index":9852},{"krate":0,"index":9853},{"krate":0,"index":428},{"krate":0,"index":434},{"krate":0,"index":443},{"krate":0,"index":450},{"krate":0,"index":459},{"krate":0,"index":468},{"krate":0,"index":7640},{"krate":0,"index":7646}],"decl_id":null,"docs":" Inter-Integrated Circuit (I2C) bus","sig":null,"attributes":[{"value":"/ Inter-Integrated Circuit (I2C) bus","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10698881,"byte_end":10698919,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10698920,"byte_end":10698923,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A usage example of the i2c peripheral can be found at [examples/i2c_scanner.rs]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10698924,"byte_end":10699007,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699008,"byte_end":10699011,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [examples/i2c_scanner.rs]: https://github.com/stm32-rs/stm32f3xx-hal/blob/v0.6.0/examples/i2c_scanner.rs","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699012,"byte_end":10699120,"line_start":5,"line_end":5,"column_start":1,"column_end":109}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7582},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699697,"byte_end":10699708,"line_start":34,"line_end":34,"column_start":5,"column_end":16},"name":"Arbitration","qualname":"::i2c::Error::Arbitration","value":"Error::Arbitration","parent":{"krate":0,"index":7581},"children":[],"decl_id":null,"docs":" Arbitration loss\n","sig":null,"attributes":[{"value":"/ Arbitration loss","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699672,"byte_end":10699692,"line_start":33,"line_end":33,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7584},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699732,"byte_end":10699735,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"Bus","qualname":"::i2c::Error::Bus","value":"Error::Bus","parent":{"krate":0,"index":7581},"children":[],"decl_id":null,"docs":" Bus error\n","sig":null,"attributes":[{"value":"/ Bus error","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699714,"byte_end":10699727,"line_start":35,"line_end":35,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7586},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699758,"byte_end":10699762,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Busy","qualname":"::i2c::Error::Busy","value":"Error::Busy","parent":{"krate":0,"index":7581},"children":[],"decl_id":null,"docs":" Bus busy\n","sig":null,"attributes":[{"value":"/ Bus busy","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699741,"byte_end":10699753,"line_start":37,"line_end":37,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7588},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699801,"byte_end":10699805,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Nack","qualname":"::i2c::Error::Nack","value":"Error::Nack","parent":{"krate":0,"index":7581},"children":[],"decl_id":null,"docs":" Not Acknowledge received\n","sig":null,"attributes":[{"value":"/ Not Acknowledge received","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699768,"byte_end":10699796,"line_start":39,"line_end":39,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":7581},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699660,"byte_end":10699665,"line_start":32,"line_end":32,"column_start":10,"column_end":15},"name":"Error","qualname":"::i2c::Error","value":"pub enum Error {\n\n    /// Arbitration loss\n    Arbitration,\n\n    /// Bus error\n    Bus,\n\n    /// Bus busy\n    Busy,\n\n    /// Not Acknowledge received\n    Nack,\n}","parent":null,"children":[{"krate":0,"index":7582},{"krate":0,"index":7584},{"krate":0,"index":7586},{"krate":0,"index":7588}],"decl_id":null,"docs":" I2C error\n","sig":null,"attributes":[{"value":"/ I2C error","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699602,"byte_end":10699615,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"non_exhaustive","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699633,"byte_end":10699650,"line_start":31,"line_end":31,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":418},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700045,"byte_end":10700051,"line_start":49,"line_end":49,"column_start":18,"column_end":24},"name":"SclPin","qualname":"::i2c::SclPin","value":"SclPin<I2C>","parent":null,"children":[],"decl_id":null,"docs":" SCL pin -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ SCL pin -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10699985,"byte_end":10700027,"line_start":48,"line_end":48,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":420},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700121,"byte_end":10700127,"line_start":52,"line_end":52,"column_start":18,"column_end":24},"name":"SdaPin","qualname":"::i2c::SdaPin","value":"SdaPin<I2C>","parent":null,"children":[],"decl_id":null,"docs":" SDA pin -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ SDA pin -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700061,"byte_end":10700103,"line_start":51,"line_end":51,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":428},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10701266,"byte_end":10701269,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"I2c","qualname":"::i2c::I2c","value":"I2c {  }","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"decl_id":null,"docs":" I2C peripheral operating in master mode\n","sig":null,"attributes":[{"value":"/ I2C peripheral operating in master mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10701211,"byte_end":10701254,"line_start":82,"line_end":82,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10702223,"byte_end":10702226,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<I2c<I2C, (SCL, SDA)>>::new","value":"pub fn new<F>(I2C, (SCL, SDA), F, Clocks, &mut APB1) -> Self where\nI2C: Instance, SCL: SclPin<I2C>, SDA: SdaPin<I2C>, F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures the I2C peripheral to work in master mode\n","sig":null,"attributes":[{"value":"/ Configures the I2C peripheral to work in master mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10702155,"byte_end":10702211,"line_start":113,"line_end":113,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10705006,"byte_end":10705010,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"free","qualname":"<I2c<I2C, (SCL, SDA)>>::free","value":"pub fn free(Self) -> (I2C, (SCL, SDA))","parent":null,"children":[],"decl_id":null,"docs":" Releases the I2C peripheral and associated pins\n","sig":null,"attributes":[{"value":"/ Releases the I2C peripheral and associated pins","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10704943,"byte_end":10704994,"line_start":201,"line_end":201,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":468},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10712140,"byte_end":10712148,"line_start":434,"line_end":434,"column_start":18,"column_end":26},"name":"Instance","qualname":"::i2c::Instance","value":"Instance: Deref<Target = RegisterBlock>","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470}],"decl_id":null,"docs":" I2C instance -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ I2C instance -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10712075,"byte_end":10712122,"line_start":433,"line_end":433,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10712208,"byte_end":10712220,"line_start":436,"line_end":436,"column_start":8,"column_end":20},"name":"enable_clock","qualname":"::i2c::Instance::enable_clock","value":"pub fn enable_clock(&mut APB1)","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10712265,"byte_end":10712270,"line_start":438,"line_end":438,"column_start":8,"column_end":13},"name":"clock","qualname":"::i2c::Instance::clock","value":"pub fn clock(&Clocks) -> Hertz","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":472},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"decl_id":null,"docs":" Prelude\n","sig":null,"attributes":[{"value":"/ Prelude","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/prelude.rs","byte_start":10713512,"byte_end":10713523,"line_start":1,"line_end":1,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":484},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pwm","qualname":"::pwm","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":10420},{"krate":0,"index":499},{"krate":0,"index":10422},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":7652},{"krate":0,"index":7653},{"krate":0,"index":7654},{"krate":0,"index":7655},{"krate":0,"index":7656},{"krate":0,"index":7657},{"krate":0,"index":7668},{"krate":0,"index":7678},{"krate":0,"index":7688},{"krate":0,"index":7698},{"krate":0,"index":7708},{"krate":0,"index":7718},{"krate":0,"index":7728},{"krate":0,"index":7738},{"krate":0,"index":7741},{"krate":0,"index":7743},{"krate":0,"index":7746},{"krate":0,"index":7748},{"krate":0,"index":7751},{"krate":0,"index":7753},{"krate":0,"index":7756},{"krate":0,"index":7758},{"krate":0,"index":7761},{"krate":0,"index":7763},{"krate":0,"index":7766},{"krate":0,"index":7768},{"krate":0,"index":7771},{"krate":0,"index":7773},{"krate":0,"index":7776},{"krate":0,"index":7778},{"krate":0,"index":7781},{"krate":0,"index":7783},{"krate":0,"index":7786},{"krate":0,"index":7788},{"krate":0,"index":7791},{"krate":0,"index":7793},{"krate":0,"index":7796},{"krate":0,"index":7798},{"krate":0,"index":7801},{"krate":0,"index":7803},{"krate":0,"index":7806},{"krate":0,"index":7808},{"krate":0,"index":7811},{"krate":0,"index":7813},{"krate":0,"index":7816},{"krate":0,"index":7818},{"krate":0,"index":7821},{"krate":0,"index":7823},{"krate":0,"index":7826},{"krate":0,"index":7828},{"krate":0,"index":7831},{"krate":0,"index":7833},{"krate":0,"index":7836},{"krate":0,"index":7838},{"krate":0,"index":7841},{"krate":0,"index":7843},{"krate":0,"index":7853},{"krate":0,"index":7863},{"krate":0,"index":7873},{"krate":0,"index":7883},{"krate":0,"index":7893},{"krate":0,"index":7896},{"krate":0,"index":7898},{"krate":0,"index":7901},{"krate":0,"index":7903},{"krate":0,"index":7906},{"krate":0,"index":7908},{"krate":0,"index":7911},{"krate":0,"index":7913},{"krate":0,"index":7916},{"krate":0,"index":7918},{"krate":0,"index":7921},{"krate":0,"index":7923},{"krate":0,"index":7926},{"krate":0,"index":7928},{"krate":0,"index":7931},{"krate":0,"index":7933},{"krate":0,"index":7936},{"krate":0,"index":7938},{"krate":0,"index":7941},{"krate":0,"index":7943},{"krate":0,"index":7946},{"krate":0,"index":7948},{"krate":0,"index":7951},{"krate":0,"index":7953},{"krate":0,"index":7956},{"krate":0,"index":7958},{"krate":0,"index":7961},{"krate":0,"index":7963},{"krate":0,"index":7966},{"krate":0,"index":7968},{"krate":0,"index":7969},{"krate":0,"index":7970},{"krate":0,"index":7971},{"krate":0,"index":7972},{"krate":0,"index":7973},{"krate":0,"index":7983},{"krate":0,"index":7993},{"krate":0,"index":8003},{"krate":0,"index":8013},{"krate":0,"index":8023},{"krate":0,"index":8026},{"krate":0,"index":8028},{"krate":0,"index":8031},{"krate":0,"index":8033},{"krate":0,"index":8036},{"krate":0,"index":8038},{"krate":0,"index":8041},{"krate":0,"index":8043},{"krate":0,"index":8046},{"krate":0,"index":8048},{"krate":0,"index":8051},{"krate":0,"index":8053},{"krate":0,"index":8056},{"krate":0,"index":8058},{"krate":0,"index":8061},{"krate":0,"index":8063},{"krate":0,"index":8066},{"krate":0,"index":8068},{"krate":0,"index":8071},{"krate":0,"index":8073},{"krate":0,"index":8076},{"krate":0,"index":8078},{"krate":0,"index":8081},{"krate":0,"index":8083},{"krate":0,"index":8086},{"krate":0,"index":8088},{"krate":0,"index":8091},{"krate":0,"index":8093},{"krate":0,"index":8096},{"krate":0,"index":8098},{"krate":0,"index":8101},{"krate":0,"index":8103},{"krate":0,"index":8104},{"krate":0,"index":8105},{"krate":0,"index":8106},{"krate":0,"index":8107},{"krate":0,"index":8108},{"krate":0,"index":8118},{"krate":0,"index":8128},{"krate":0,"index":8138},{"krate":0,"index":8148},{"krate":0,"index":8158},{"krate":0,"index":8161},{"krate":0,"index":8163},{"krate":0,"index":8166},{"krate":0,"index":8168},{"krate":0,"index":8171},{"krate":0,"index":8173},{"krate":0,"index":8176},{"krate":0,"index":8178},{"krate":0,"index":8181},{"krate":0,"index":8183},{"krate":0,"index":8186},{"krate":0,"index":8188},{"krate":0,"index":8191},{"krate":0,"index":8193},{"krate":0,"index":8196},{"krate":0,"index":8198},{"krate":0,"index":8201},{"krate":0,"index":8203},{"krate":0,"index":8206},{"krate":0,"index":8208},{"krate":0,"index":8211},{"krate":0,"index":8213},{"krate":0,"index":8216},{"krate":0,"index":8218},{"krate":0,"index":8219},{"krate":0,"index":8220},{"krate":0,"index":8221},{"krate":0,"index":8222},{"krate":0,"index":8223},{"krate":0,"index":8234},{"krate":0,"index":8244},{"krate":0,"index":8254},{"krate":0,"index":8264},{"krate":0,"index":8274},{"krate":0,"index":8284},{"krate":0,"index":8294},{"krate":0,"index":8304},{"krate":0,"index":8307},{"krate":0,"index":8309},{"krate":0,"index":8312},{"krate":0,"index":8314},{"krate":0,"index":8317},{"krate":0,"index":8319},{"krate":0,"index":8322},{"krate":0,"index":8324},{"krate":0,"index":8327},{"krate":0,"index":8329},{"krate":0,"index":8332},{"krate":0,"index":8334},{"krate":0,"index":8337},{"krate":0,"index":8339},{"krate":0,"index":8342},{"krate":0,"index":8344},{"krate":0,"index":8347},{"krate":0,"index":8349},{"krate":0,"index":8352},{"krate":0,"index":8354},{"krate":0,"index":8357},{"krate":0,"index":8359},{"krate":0,"index":8362},{"krate":0,"index":8364},{"krate":0,"index":8367},{"krate":0,"index":8369},{"krate":0,"index":8372},{"krate":0,"index":8374},{"krate":0,"index":8377},{"krate":0,"index":8379},{"krate":0,"index":8382},{"krate":0,"index":8384},{"krate":0,"index":8387},{"krate":0,"index":8389},{"krate":0,"index":8392},{"krate":0,"index":8394},{"krate":0,"index":8397},{"krate":0,"index":8399},{"krate":0,"index":8410},{"krate":0,"index":8420},{"krate":0,"index":8430},{"krate":0,"index":8440},{"krate":0,"index":8443},{"krate":0,"index":8445},{"krate":0,"index":8448},{"krate":0,"index":8450},{"krate":0,"index":8453},{"krate":0,"index":8455},{"krate":0,"index":8458},{"krate":0,"index":8460},{"krate":0,"index":8463},{"krate":0,"index":8465},{"krate":0,"index":8468},{"krate":0,"index":8470},{"krate":0,"index":8473},{"krate":0,"index":8475},{"krate":0,"index":8478},{"krate":0,"index":8480},{"krate":0,"index":8491},{"krate":0,"index":8501},{"krate":0,"index":8511},{"krate":0,"index":8514},{"krate":0,"index":8516},{"krate":0,"index":8519},{"krate":0,"index":8521},{"krate":0,"index":8524},{"krate":0,"index":8526},{"krate":0,"index":8529},{"krate":0,"index":8531},{"krate":0,"index":8534},{"krate":0,"index":8536},{"krate":0,"index":8539},{"krate":0,"index":8541},{"krate":0,"index":8544},{"krate":0,"index":8546},{"krate":0,"index":8557},{"krate":0,"index":8567},{"krate":0,"index":8577},{"krate":0,"index":8580},{"krate":0,"index":8582},{"krate":0,"index":8585},{"krate":0,"index":8587},{"krate":0,"index":8590},{"krate":0,"index":8592},{"krate":0,"index":8595},{"krate":0,"index":8597},{"krate":0,"index":8600}],"decl_id":null,"docs":"  # Pulse width modulation","sig":null,"attributes":[{"value":"*\n  # Pulse width modulation\n\n  Numerous stm32 timers can be used to output pulse width modulated\n  signals on a variety of pins.  The timers support up to 4\n  simultaneous pwm outputs in separate `Channels`.  These channels\n  share a period and resolution, but can have a different duty cycle.\n  All pins on a shared channel have the exact same output.\n\n  ## Creating the (unconfigured) channels\n\n  Before we connect any pins, we need to convert our timer peripheral\n  into a set of channels.  We may only be interested in using one or\n  two of these channels, so we can simply ignore them with `_` when we\n  destructure.\n\n  ```\n    // (Other imports omitted)\n    use stm32f3xx-hal::pwm::tim3;\n\n    let dp = stm32f303::Peripherals::take().unwrap();\n\n    let mut flash = dp.FLASH.constrain();\n    let mut rcc = dp.RCC.constrain();\n    let clocks = rcc.cfgr.freeze(&mut flash.acr);\n\n    // Set the resolution of our duty cycle to 9000 and our period to\n    // 50hz.\n    let mut (c1_no_pins, _, _, c4_no_pins) =\n        tim3(device.TIM3, 9000, 50.hz(), clocks);\n  ```\n\n  In this case, we're only going to use channel 1 and channel 4.\n  Currently we can't enable these timers, because they don't have any\n  pins, so the following wouldn't compile.\n\n\n  ```\n    // DOES NOT COMPILE\n    c1_no_pins.enable();\n    c4_no_pins.enable();\n  ```\n\n  ## Connecting our pins and enabling the channels\n\n  From here we can connect as many compatible pins as we like.  Once\n  the channels have pins connected they can be enabled.\n\n  ```\n    let mut gpioa = dp.GPIOB.split(&mut rcc.ahb);\n    let pa6 = gpioa.pa6.into_af2(&mut gpioa.moder, &mut gpioa.afrl);\n\n    let mut gpiob = dp.GPIOB.split(&mut rcc.ahb);\n    let pb1 = gpiob.pb1.into_af2(&mut gpiob.moder, &mut gpiob.afrl);\n    let pb4 = gpiob.pb4.into_af2(&mut gpiob.moder, &mut gpiob.afrl);\n\n    let mut ch1 = ch1_no_pins\n        .output_to_pa6(pa6)\n        .output_to_pb4(pb4);\n\n    let mut ch4 = ch4_no_pins\n        .output_to_pb1(pb1);\n\n    ch1.enable();\n    ch4.enable();\n  ```\n\n  All three pins will output a 50hz period. PA6 and PB4 will share a\n  duty cycle, but the duty cycle for PB1 can be controlled\n  independently.\n\n  ```\n    // Affect PA6 and PB4\n    ch1.set_duty_cycle(1000);\n\n    // Affect only PB1\n    ch4.set_duty_cycle(2000);\n  ```\n\n  ## Single channel timers\n\n  Timers that only have only one channel do not return a tuple, and\n  instead return the (unconfigured) channel directly.\n\n  ```\n    // (Other imports omitted)\n    use stm32f3xx-hal::pwm::tim16;\n\n    let dp = stm32f303::Peripherals::take().unwrap();\n\n    let mut flash = dp.FLASH.constrain();\n    let mut rcc = dp.RCC.constrain();\n    let clocks = rcc.cfgr.freeze(&mut flash.acr);\n\n    // Set the resolution of our duty cycle to 9000 and our period to\n    // 50hz.\n    let mut c1_no_pins = tim16(device.TIM3, 9000, 50.hz(), clocks);\n  ```\n\n  ## Complementary timers\n\n  Certain timers have complementary outputs.  Currently, channels can\n  output to _either_ pins used for standard or complementary pins (and\n  do not exhibit complementary behaviors).  Most of the time this will\n  be totally invisible.\n\n  In this example, we use a complementary pin in the same way we'd use\n  any other pwm channel.\n\n  ```\n    // (Other imports omitted)\n    use stm32f3xx-hal::pwm::tim1;\n\n    let dp = stm32f303::Peripherals::take().unwrap();\n\n    let mut flash = dp.FLASH.constrain();\n    let mut rcc = dp.RCC.constrain();\n    let clocks = rcc.cfgr.freeze(&mut flash.acr);\n\n    // Set the resolution of our duty cycle to 9000 and our period to\n    // 50hz.\n    let mut (ch1_no_pins, _, _, _) = tim1(device.TIM3, 9000, 50.hz(), clocks);\n\n    let mut gpioa = dp.GPIOB.split(&mut rcc.ahb);\n    let pa7 = gpioa.pa7.into_af6(&mut gpioa.moder, &mut gpioa.afrl);\n\n    let mut ch1 = ch1_no_pins.output_to(pa7);\n    ch1.enable();\n  ```\n\n  We used this channel/pin exactly like any previous example.\n\n  However, we cannot use standard and complementary pins\n  simultaneously.  Luckily, typestates enforce this for us.\n\n  ```\n    ...\n\n    let mut gpioa = dp.GPIOB.split(&mut rcc.ahb);\n    let pa7 = gpioa.pa7.into_af6(&mut gpioa.moder, &mut gpioa.afrl);\n    let pa8 = gpioa.pa8.into_af6(&mut gpioa.moder, &mut gpioa.afrl);\n\n    let mut ch1 = ch1_no_pins\n        .output_to(pa7)\n        // DOES NOT COMPILE\n        .output_to(pa8);\n  ```\n\n  Once we've connected a complementary pin (PA7) we are now _only_\n  allowed to use other complementary pins.  PA8 is a valid choice if\n  we have no pins in use, but it cannot be used once we've used PA7.\n\n  A usage example can be found at [examples/pwm.rs]\n\n  [examples/pwm.rs]: https://github.com/stm32-rs/stm32f3xx-hal/blob/v0.6.0/examples/pwm.rs\n*/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10714270,"byte_end":10718951,"line_start":1,"line_end":156,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720160,"byte_end":10720168,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"TIM2_CH1","qualname":"::pwm::TIM2_CH1","value":"TIM2_CH1 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 1 of Timer 1 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 1 of Timer 1 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720096,"byte_end":10720148,"line_start":207,"line_end":207,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":506},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720236,"byte_end":10720244,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"TIM2_CH2","qualname":"::pwm::TIM2_CH2","value":"TIM2_CH2 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 2 of Timer 1 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 2 of Timer 1 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720172,"byte_end":10720224,"line_start":209,"line_end":209,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":507},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720312,"byte_end":10720320,"line_start":212,"line_end":212,"column_start":12,"column_end":20},"name":"TIM2_CH3","qualname":"::pwm::TIM2_CH3","value":"TIM2_CH3 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 3 of Timer 1 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 3 of Timer 1 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720248,"byte_end":10720300,"line_start":211,"line_end":211,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":508},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720388,"byte_end":10720396,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"TIM2_CH4","qualname":"::pwm::TIM2_CH4","value":"TIM2_CH4 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 4 of Timer 1 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 4 of Timer 1 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720324,"byte_end":10720376,"line_start":213,"line_end":213,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720466,"byte_end":10720475,"line_start":217,"line_end":217,"column_start":12,"column_end":21},"name":"TIM15_CH1","qualname":"::pwm::TIM15_CH1","value":"TIM15_CH1 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 1 of Timer 15 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 1 of Timer 15 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720401,"byte_end":10720454,"line_start":216,"line_end":216,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720544,"byte_end":10720553,"line_start":219,"line_end":219,"column_start":12,"column_end":21},"name":"TIM15_CH2","qualname":"::pwm::TIM15_CH2","value":"TIM15_CH2 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 2 of Timer 15 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 2 of Timer 15 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720479,"byte_end":10720532,"line_start":218,"line_end":218,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720623,"byte_end":10720632,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"TIM16_CH1","qualname":"::pwm::TIM16_CH1","value":"TIM16_CH1 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 1 of Timer 16 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 1 of Timer 16 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720558,"byte_end":10720611,"line_start":221,"line_end":221,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":512},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720702,"byte_end":10720711,"line_start":225,"line_end":225,"column_start":12,"column_end":21},"name":"TIM17_CH1","qualname":"::pwm::TIM17_CH1","value":"TIM17_CH1 {  }","parent":null,"children":[],"decl_id":null,"docs":" Output Compare Channel 1 of Timer 17 (type state)\n","sig":null,"attributes":[{"value":"/ Output Compare Channel 1 of Timer 17 (type state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720637,"byte_end":10720690,"line_start":224,"line_end":224,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":513},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720791,"byte_end":10720797,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"NoPins","qualname":"::pwm::NoPins","value":"NoPins {  }","parent":null,"children":[],"decl_id":null,"docs":" Type state used to represent a channel that has no pins yet\n","sig":null,"attributes":[{"value":"/ Type state used to represent a channel that has no pins yet","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720716,"byte_end":10720779,"line_start":227,"line_end":227,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":514},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720877,"byte_end":10720885,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"WithPins","qualname":"::pwm::WithPins","value":"WithPins {  }","parent":null,"children":[],"decl_id":null,"docs":" Type state used to represent a channel is using regular pins\n","sig":null,"attributes":[{"value":"/ Type state used to represent a channel is using regular pins","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720801,"byte_end":10720865,"line_start":229,"line_end":229,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":515},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720978,"byte_end":10720987,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"WithNPins","qualname":"::pwm::WithNPins","value":"WithNPins {  }","parent":null,"children":[],"decl_id":null,"docs":" Type state used to represent a channel is using (only) complementary pins\n","sig":null,"attributes":[{"value":"/ Type state used to represent a channel is using (only) complementary pins","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720889,"byte_end":10720966,"line_start":231,"line_end":231,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":516},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721219,"byte_end":10721229,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"PwmChannel","qualname":"::pwm::PwmChannel","value":"PwmChannel {  }","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"decl_id":null,"docs":" Representation of a Channel for an abritary timer channel,\n that also holds a type state for whether or not this channel\n is using any pins yet.","sig":null,"attributes":[{"value":"/ Representation of a Channel for an abritary timer channel,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10720992,"byte_end":10721054,"line_start":234,"line_end":234,"column_start":1,"column_end":63}},{"value":"/ that also holds a type state for whether or not this channel","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721055,"byte_end":10721119,"line_start":235,"line_end":235,"column_start":1,"column_end":65}},{"value":"/ is using any pins yet.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721120,"byte_end":10721146,"line_start":236,"line_end":236,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721147,"byte_end":10721150,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ If there are no pins supplied, it cannot be enabled.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721151,"byte_end":10721207,"line_start":238,"line_end":238,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":7843},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10736195,"byte_end":10736199,"line_start":697,"line_end":697,"column_start":5,"column_end":9},"name":"tim2","qualname":"::pwm::tim2","value":"pub fn tim2(TIM2, u32, Hertz, &Clocks)\n->\n    (PwmChannel<TIM2_CH1, NoPins>, PwmChannel<TIM2_CH2, NoPins>,\n     PwmChannel<TIM2_CH3, NoPins>, PwmChannel<TIM2_CH4, NoPins>)","parent":null,"children":[],"decl_id":null,"docs":" Create one or more output channels from a TIM Peripheral\n This function requires the maximum resolution of the duty cycle,\n the period of the PWM signal and the frozen clock configuration.","sig":null,"attributes":[{"value":"/ Create one or more output channels from a TIM Peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721531,"byte_end":10721591,"line_start":246,"line_end":246,"column_start":9,"column_end":69}},{"value":"/ This function requires the maximum resolution of the duty cycle,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721600,"byte_end":10721668,"line_start":247,"line_end":247,"column_start":9,"column_end":77}},{"value":"/ the period of the PWM signal and the frozen clock configuration.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721677,"byte_end":10721745,"line_start":248,"line_end":248,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721754,"byte_end":10721757,"line_start":249,"line_end":249,"column_start":9,"column_end":12}},{"value":"/ The resolution should be chosen to offer sufficient steps against","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721766,"byte_end":10721835,"line_start":250,"line_end":250,"column_start":9,"column_end":78}},{"value":"/ your target peripheral.  For example, a servo that can turn from","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721844,"byte_end":10721912,"line_start":251,"line_end":251,"column_start":9,"column_end":77}},{"value":"/ 0 degrees (2% duty cycle) to 180 degrees (4% duty cycle) might choose","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721921,"byte_end":10721994,"line_start":252,"line_end":252,"column_start":9,"column_end":82}},{"value":"/ a resolution of 9000.  This allows the servo to be set in increments","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722003,"byte_end":10722075,"line_start":253,"line_end":253,"column_start":9,"column_end":81}},{"value":"/ of exactly one degree.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722084,"byte_end":10722110,"line_start":254,"line_end":254,"column_start":9,"column_end":35}},{"value":"allow(unused_parens)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722119,"byte_end":10722142,"line_start":255,"line_end":255,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":7894},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10736697,"byte_end":10736710,"line_start":716,"line_end":716,"column_start":35,"column_end":48},"name":"output_to_pa0","qualname":"<PwmChannel<TIM2_CH1, NoPins>>::output_to_pa0","value":"pub fn output_to_pa0(Self, gpioa::PA0<gpio::AF1>)\n-> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7897},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10736697,"byte_end":10736710,"line_start":716,"line_end":716,"column_start":35,"column_end":48},"name":"output_to_pa0","qualname":"<PwmChannel<TIM2_CH1, WithPins>>::output_to_pa0","value":"pub fn output_to_pa0(Self, gpioa::PA0<gpio::AF1>)\n-> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7899},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10736770,"byte_end":10736783,"line_start":717,"line_end":717,"column_start":35,"column_end":48},"name":"output_to_pa5","qualname":"<PwmChannel<TIM2_CH1, NoPins>>::output_to_pa5","value":"pub fn output_to_pa5(Self, gpioa::PA5<gpio::AF1>)\n-> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7902},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10736770,"byte_end":10736783,"line_start":717,"line_end":717,"column_start":35,"column_end":48},"name":"output_to_pa5","qualname":"<PwmChannel<TIM2_CH1, WithPins>>::output_to_pa5","value":"pub fn output_to_pa5(Self, gpioa::PA5<gpio::AF1>)\n-> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7904},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10736843,"byte_end":10736857,"line_start":718,"line_end":718,"column_start":35,"column_end":49},"name":"output_to_pa15","qualname":"<PwmChannel<TIM2_CH1, NoPins>>::output_to_pa15","value":"pub fn output_to_pa15(Self, gpioa::PA15<gpio::AF1>)\n-> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7907},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10736843,"byte_end":10736857,"line_start":718,"line_end":718,"column_start":35,"column_end":49},"name":"output_to_pa15","qualname":"<PwmChannel<TIM2_CH1, WithPins>>::output_to_pa15","value":"pub fn output_to_pa15(Self, gpioa::PA15<gpio::AF1>)\n-> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7909},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737218,"byte_end":10737231,"line_start":731,"line_end":731,"column_start":35,"column_end":48},"name":"output_to_pd3","qualname":"<PwmChannel<TIM2_CH1, NoPins>>::output_to_pd3","value":"pub fn output_to_pd3(Self, gpiod::PD3<gpio::AF2>)\n-> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7912},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737218,"byte_end":10737231,"line_start":731,"line_end":731,"column_start":35,"column_end":48},"name":"output_to_pd3","qualname":"<PwmChannel<TIM2_CH1, WithPins>>::output_to_pd3","value":"pub fn output_to_pd3(Self, gpiod::PD3<gpio::AF2>)\n-> PwmChannel<TIM2_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7914},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737292,"byte_end":10737305,"line_start":733,"line_end":733,"column_start":35,"column_end":48},"name":"output_to_pa1","qualname":"<PwmChannel<TIM2_CH2, NoPins>>::output_to_pa1","value":"pub fn output_to_pa1(Self, gpioa::PA1<gpio::AF1>)\n-> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7917},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737292,"byte_end":10737305,"line_start":733,"line_end":733,"column_start":35,"column_end":48},"name":"output_to_pa1","qualname":"<PwmChannel<TIM2_CH2, WithPins>>::output_to_pa1","value":"pub fn output_to_pa1(Self, gpioa::PA1<gpio::AF1>)\n-> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7919},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737365,"byte_end":10737378,"line_start":734,"line_end":734,"column_start":35,"column_end":48},"name":"output_to_pb3","qualname":"<PwmChannel<TIM2_CH2, NoPins>>::output_to_pb3","value":"pub fn output_to_pb3(Self, gpiob::PB3<gpio::AF1>)\n-> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7922},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737365,"byte_end":10737378,"line_start":734,"line_end":734,"column_start":35,"column_end":48},"name":"output_to_pb3","qualname":"<PwmChannel<TIM2_CH2, WithPins>>::output_to_pb3","value":"pub fn output_to_pb3(Self, gpiob::PB3<gpio::AF1>)\n-> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7924},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737738,"byte_end":10737751,"line_start":747,"line_end":747,"column_start":35,"column_end":48},"name":"output_to_pd4","qualname":"<PwmChannel<TIM2_CH2, NoPins>>::output_to_pd4","value":"pub fn output_to_pd4(Self, gpiod::PD4<gpio::AF2>)\n-> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7927},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737738,"byte_end":10737751,"line_start":747,"line_end":747,"column_start":35,"column_end":48},"name":"output_to_pd4","qualname":"<PwmChannel<TIM2_CH2, WithPins>>::output_to_pd4","value":"pub fn output_to_pd4(Self, gpiod::PD4<gpio::AF2>)\n-> PwmChannel<TIM2_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7929},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737812,"byte_end":10737825,"line_start":749,"line_end":749,"column_start":35,"column_end":48},"name":"output_to_pa2","qualname":"<PwmChannel<TIM2_CH3, NoPins>>::output_to_pa2","value":"pub fn output_to_pa2(Self, gpioa::PA2<gpio::AF1>)\n-> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7932},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737812,"byte_end":10737825,"line_start":749,"line_end":749,"column_start":35,"column_end":48},"name":"output_to_pa2","qualname":"<PwmChannel<TIM2_CH3, WithPins>>::output_to_pa2","value":"pub fn output_to_pa2(Self, gpioa::PA2<gpio::AF1>)\n-> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7934},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737885,"byte_end":10737898,"line_start":750,"line_end":750,"column_start":35,"column_end":48},"name":"output_to_pa9","qualname":"<PwmChannel<TIM2_CH3, NoPins>>::output_to_pa9","value":"pub fn output_to_pa9(Self, gpioa::PA9<gpio::AF10>)\n-> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7937},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737885,"byte_end":10737898,"line_start":750,"line_end":750,"column_start":35,"column_end":48},"name":"output_to_pa9","qualname":"<PwmChannel<TIM2_CH3, WithPins>>::output_to_pa9","value":"pub fn output_to_pa9(Self, gpioa::PA9<gpio::AF10>)\n-> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7939},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737959,"byte_end":10737973,"line_start":751,"line_end":751,"column_start":35,"column_end":49},"name":"output_to_pb10","qualname":"<PwmChannel<TIM2_CH3, NoPins>>::output_to_pb10","value":"pub fn output_to_pb10(Self, gpiob::PB10<gpio::AF1>)\n-> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7942},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10737959,"byte_end":10737973,"line_start":751,"line_end":751,"column_start":35,"column_end":49},"name":"output_to_pb10","qualname":"<PwmChannel<TIM2_CH3, WithPins>>::output_to_pb10","value":"pub fn output_to_pb10(Self, gpiob::PB10<gpio::AF1>)\n-> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7944},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10738334,"byte_end":10738347,"line_start":764,"line_end":764,"column_start":35,"column_end":48},"name":"output_to_pd7","qualname":"<PwmChannel<TIM2_CH3, NoPins>>::output_to_pd7","value":"pub fn output_to_pd7(Self, gpiod::PD7<gpio::AF2>)\n-> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7947},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10738334,"byte_end":10738347,"line_start":764,"line_end":764,"column_start":35,"column_end":48},"name":"output_to_pd7","qualname":"<PwmChannel<TIM2_CH3, WithPins>>::output_to_pd7","value":"pub fn output_to_pd7(Self, gpiod::PD7<gpio::AF2>)\n-> PwmChannel<TIM2_CH3, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7949},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10738408,"byte_end":10738421,"line_start":766,"line_end":766,"column_start":35,"column_end":48},"name":"output_to_pa3","qualname":"<PwmChannel<TIM2_CH4, NoPins>>::output_to_pa3","value":"pub fn output_to_pa3(Self, gpioa::PA3<gpio::AF1>)\n-> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7952},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10738408,"byte_end":10738421,"line_start":766,"line_end":766,"column_start":35,"column_end":48},"name":"output_to_pa3","qualname":"<PwmChannel<TIM2_CH4, WithPins>>::output_to_pa3","value":"pub fn output_to_pa3(Self, gpioa::PA3<gpio::AF1>)\n-> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7954},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10738481,"byte_end":10738495,"line_start":767,"line_end":767,"column_start":35,"column_end":49},"name":"output_to_pa10","qualname":"<PwmChannel<TIM2_CH4, NoPins>>::output_to_pa10","value":"pub fn output_to_pa10(Self, gpioa::PA10<gpio::AF1>)\n-> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7957},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10738481,"byte_end":10738495,"line_start":767,"line_end":767,"column_start":35,"column_end":49},"name":"output_to_pa10","qualname":"<PwmChannel<TIM2_CH4, WithPins>>::output_to_pa10","value":"pub fn output_to_pa10(Self, gpioa::PA10<gpio::AF1>)\n-> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7959},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10738619,"byte_end":10738633,"line_start":769,"line_end":769,"column_start":35,"column_end":49},"name":"output_to_pb11","qualname":"<PwmChannel<TIM2_CH4, NoPins>>::output_to_pb11","value":"pub fn output_to_pb11(Self, gpiob::PB11<gpio::AF1>)\n-> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7962},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10738619,"byte_end":10738633,"line_start":769,"line_end":769,"column_start":35,"column_end":49},"name":"output_to_pb11","qualname":"<PwmChannel<TIM2_CH4, WithPins>>::output_to_pb11","value":"pub fn output_to_pb11(Self, gpiob::PB11<gpio::AF1>)\n-> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7964},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10738994,"byte_end":10739007,"line_start":782,"line_end":782,"column_start":35,"column_end":48},"name":"output_to_pd6","qualname":"<PwmChannel<TIM2_CH4, NoPins>>::output_to_pd6","value":"pub fn output_to_pd6(Self, gpiod::PD6<gpio::AF2>)\n-> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7967},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10738994,"byte_end":10739007,"line_start":782,"line_end":782,"column_start":35,"column_end":48},"name":"output_to_pd6","qualname":"<PwmChannel<TIM2_CH4, WithPins>>::output_to_pd6","value":"pub fn output_to_pd6(Self, gpiod::PD6<gpio::AF2>)\n-> PwmChannel<TIM2_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8395},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10751682,"byte_end":10751695,"line_start":1172,"line_end":1172,"column_start":35,"column_end":48},"name":"output_to_pd1","qualname":"<PwmChannel<TIM8_CH4, NoPins>>::output_to_pd1","value":"pub fn output_to_pd1(Self, gpiod::PD1<gpio::AF4>)\n-> PwmChannel<TIM8_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8398},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10751682,"byte_end":10751695,"line_start":1172,"line_end":1172,"column_start":35,"column_end":48},"name":"output_to_pd1","qualname":"<PwmChannel<TIM8_CH4, WithPins>>::output_to_pd1","value":"pub fn output_to_pd1(Self, gpiod::PD1<gpio::AF4>)\n-> PwmChannel<TIM8_CH4, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":8399},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10755809,"byte_end":10755814,"line_start":1312,"line_end":1312,"column_start":5,"column_end":10},"name":"tim15","qualname":"::pwm::tim15","value":"pub fn tim15(TIM15, u16, Hertz, &Clocks)\n-> (PwmChannel<TIM15_CH1, NoPins>, PwmChannel<TIM15_CH2, NoPins>)","parent":null,"children":[],"decl_id":null,"docs":" Create one or more output channels from a TIM Peripheral\n This function requires the maximum resolution of the duty cycle,\n the period of the PWM signal and the frozen clock configuration.","sig":null,"attributes":[{"value":"/ Create one or more output channels from a TIM Peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721531,"byte_end":10721591,"line_start":246,"line_end":246,"column_start":9,"column_end":69}},{"value":"/ This function requires the maximum resolution of the duty cycle,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721600,"byte_end":10721668,"line_start":247,"line_end":247,"column_start":9,"column_end":77}},{"value":"/ the period of the PWM signal and the frozen clock configuration.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721677,"byte_end":10721745,"line_start":248,"line_end":248,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721754,"byte_end":10721757,"line_start":249,"line_end":249,"column_start":9,"column_end":12}},{"value":"/ The resolution should be chosen to offer sufficient steps against","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721766,"byte_end":10721835,"line_start":250,"line_end":250,"column_start":9,"column_end":78}},{"value":"/ your target peripheral.  For example, a servo that can turn from","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721844,"byte_end":10721912,"line_start":251,"line_end":251,"column_start":9,"column_end":77}},{"value":"/ 0 degrees (2% duty cycle) to 180 degrees (4% duty cycle) might choose","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721921,"byte_end":10721994,"line_start":252,"line_end":252,"column_start":9,"column_end":82}},{"value":"/ a resolution of 9000.  This allows the servo to be set in increments","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722003,"byte_end":10722075,"line_start":253,"line_end":253,"column_start":9,"column_end":81}},{"value":"/ of exactly one degree.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722084,"byte_end":10722110,"line_start":254,"line_end":254,"column_start":9,"column_end":35}},{"value":"allow(unused_parens)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722119,"byte_end":10722142,"line_start":255,"line_end":255,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8441},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756162,"byte_end":10756175,"line_start":1329,"line_end":1329,"column_start":37,"column_end":50},"name":"output_to_pa2","qualname":"<PwmChannel<TIM15_CH1, NoPins>>::output_to_pa2","value":"pub fn output_to_pa2(Self, gpioa::PA2<gpio::AF9>)\n-> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8444},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756162,"byte_end":10756175,"line_start":1329,"line_end":1329,"column_start":37,"column_end":50},"name":"output_to_pa2","qualname":"<PwmChannel<TIM15_CH1, WithPins>>::output_to_pa2","value":"pub fn output_to_pa2(Self, gpioa::PA2<gpio::AF9>)\n-> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8446},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756370,"byte_end":10756384,"line_start":1332,"line_end":1332,"column_start":37,"column_end":51},"name":"output_to_pb14","qualname":"<PwmChannel<TIM15_CH1, NoPins>>::output_to_pb14","value":"pub fn output_to_pb14(Self, gpiob::PB14<gpio::AF1>)\n-> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8449},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756370,"byte_end":10756384,"line_start":1332,"line_end":1332,"column_start":37,"column_end":51},"name":"output_to_pb14","qualname":"<PwmChannel<TIM15_CH1, WithPins>>::output_to_pb14","value":"pub fn output_to_pb14(Self, gpiob::PB14<gpio::AF1>)\n-> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8451},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756747,"byte_end":10756760,"line_start":1345,"line_end":1345,"column_start":37,"column_end":50},"name":"output_to_pf9","qualname":"<PwmChannel<TIM15_CH1, NoPins>>::output_to_pf9","value":"pub fn output_to_pf9(Self, gpiof::PF9<gpio::AF3>)\n-> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8454},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756747,"byte_end":10756760,"line_start":1345,"line_end":1345,"column_start":37,"column_end":50},"name":"output_to_pf9","qualname":"<PwmChannel<TIM15_CH1, WithPins>>::output_to_pf9","value":"pub fn output_to_pf9(Self, gpiof::PF9<gpio::AF3>)\n-> PwmChannel<TIM15_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8456},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756824,"byte_end":10756837,"line_start":1347,"line_end":1347,"column_start":38,"column_end":51},"name":"output_to_pa1","qualname":"<PwmChannel<TIM15_CH1, NoPins>>::output_to_pa1","value":"pub fn output_to_pa1(Self, gpioa::PA1<gpio::AF9>)\n-> PwmChannel<TIM15_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8459},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756824,"byte_end":10756837,"line_start":1347,"line_end":1347,"column_start":38,"column_end":51},"name":"output_to_pa1","qualname":"<PwmChannel<TIM15_CH1, WithNPins>>::output_to_pa1","value":"pub fn output_to_pa1(Self, gpioa::PA1<gpio::AF9>)\n-> PwmChannel<TIM15_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8461},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756900,"byte_end":10756914,"line_start":1348,"line_end":1348,"column_start":38,"column_end":52},"name":"output_to_pb15","qualname":"<PwmChannel<TIM15_CH1, NoPins>>::output_to_pb15","value":"pub fn output_to_pb15(Self, gpiob::PB15<gpio::AF2>)\n-> PwmChannel<TIM15_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8464},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756900,"byte_end":10756914,"line_start":1348,"line_end":1348,"column_start":38,"column_end":52},"name":"output_to_pb15","qualname":"<PwmChannel<TIM15_CH1, WithNPins>>::output_to_pb15","value":"pub fn output_to_pb15(Self, gpiob::PB15<gpio::AF2>)\n-> PwmChannel<TIM15_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8466},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756977,"byte_end":10756990,"line_start":1349,"line_end":1349,"column_start":37,"column_end":50},"name":"output_to_pa3","qualname":"<PwmChannel<TIM15_CH2, NoPins>>::output_to_pa3","value":"pub fn output_to_pa3(Self, gpioa::PA3<gpio::AF9>)\n-> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8469},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10756977,"byte_end":10756990,"line_start":1349,"line_end":1349,"column_start":37,"column_end":50},"name":"output_to_pa3","qualname":"<PwmChannel<TIM15_CH2, WithPins>>::output_to_pa3","value":"pub fn output_to_pa3(Self, gpioa::PA3<gpio::AF9>)\n-> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8471},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10757185,"byte_end":10757199,"line_start":1352,"line_end":1352,"column_start":37,"column_end":51},"name":"output_to_pb15","qualname":"<PwmChannel<TIM15_CH2, NoPins>>::output_to_pb15","value":"pub fn output_to_pb15(Self, gpiob::PB15<gpio::AF2>)\n-> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8474},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10757185,"byte_end":10757199,"line_start":1352,"line_end":1352,"column_start":37,"column_end":51},"name":"output_to_pb15","qualname":"<PwmChannel<TIM15_CH2, WithPins>>::output_to_pb15","value":"pub fn output_to_pb15(Self, gpiob::PB15<gpio::AF2>)\n-> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8476},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10757562,"byte_end":10757576,"line_start":1365,"line_end":1365,"column_start":37,"column_end":51},"name":"output_to_pf10","qualname":"<PwmChannel<TIM15_CH2, NoPins>>::output_to_pf10","value":"pub fn output_to_pf10(Self, gpiof::PF10<gpio::AF3>)\n-> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8479},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10757562,"byte_end":10757576,"line_start":1365,"line_end":1365,"column_start":37,"column_end":51},"name":"output_to_pf10","qualname":"<PwmChannel<TIM15_CH2, WithPins>>::output_to_pf10","value":"pub fn output_to_pf10(Self, gpiof::PF10<gpio::AF3>)\n-> PwmChannel<TIM15_CH2, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":8480},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10757641,"byte_end":10757646,"line_start":1370,"line_end":1370,"column_start":5,"column_end":10},"name":"tim16","qualname":"::pwm::tim16","value":"pub fn tim16(TIM16, u16, Hertz, &Clocks) -> PwmChannel<TIM16_CH1, NoPins>","parent":null,"children":[],"decl_id":null,"docs":" Create one or more output channels from a TIM Peripheral\n This function requires the maximum resolution of the duty cycle,\n the period of the PWM signal and the frozen clock configuration.","sig":null,"attributes":[{"value":"/ Create one or more output channels from a TIM Peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721531,"byte_end":10721591,"line_start":246,"line_end":246,"column_start":9,"column_end":69}},{"value":"/ This function requires the maximum resolution of the duty cycle,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721600,"byte_end":10721668,"line_start":247,"line_end":247,"column_start":9,"column_end":77}},{"value":"/ the period of the PWM signal and the frozen clock configuration.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721677,"byte_end":10721745,"line_start":248,"line_end":248,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721754,"byte_end":10721757,"line_start":249,"line_end":249,"column_start":9,"column_end":12}},{"value":"/ The resolution should be chosen to offer sufficient steps against","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721766,"byte_end":10721835,"line_start":250,"line_end":250,"column_start":9,"column_end":78}},{"value":"/ your target peripheral.  For example, a servo that can turn from","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721844,"byte_end":10721912,"line_start":251,"line_end":251,"column_start":9,"column_end":77}},{"value":"/ 0 degrees (2% duty cycle) to 180 degrees (4% duty cycle) might choose","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721921,"byte_end":10721994,"line_start":252,"line_end":252,"column_start":9,"column_end":82}},{"value":"/ a resolution of 9000.  This allows the servo to be set in increments","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722003,"byte_end":10722075,"line_start":253,"line_end":253,"column_start":9,"column_end":81}},{"value":"/ of exactly one degree.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722084,"byte_end":10722110,"line_start":254,"line_end":254,"column_start":9,"column_end":35}},{"value":"allow(unused_parens)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722119,"byte_end":10722142,"line_start":255,"line_end":255,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8512},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10757904,"byte_end":10757917,"line_start":1386,"line_end":1386,"column_start":37,"column_end":50},"name":"output_to_pa9","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pa9","value":"pub fn output_to_pa9(Self, gpioa::PA6<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8515},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10757904,"byte_end":10757917,"line_start":1386,"line_end":1386,"column_start":37,"column_end":50},"name":"output_to_pa9","qualname":"<PwmChannel<TIM16_CH1, WithPins>>::output_to_pa9","value":"pub fn output_to_pa9(Self, gpioa::PA6<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8517},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10757979,"byte_end":10757993,"line_start":1387,"line_end":1387,"column_start":37,"column_end":51},"name":"output_to_pa12","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pa12","value":"pub fn output_to_pa12(Self, gpioa::PA12<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8520},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10757979,"byte_end":10757993,"line_start":1387,"line_end":1387,"column_start":37,"column_end":51},"name":"output_to_pa12","qualname":"<PwmChannel<TIM16_CH1, WithPins>>::output_to_pa12","value":"pub fn output_to_pa12(Self, gpioa::PA12<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8522},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758056,"byte_end":10758069,"line_start":1388,"line_end":1388,"column_start":37,"column_end":50},"name":"output_to_pb4","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pb4","value":"pub fn output_to_pb4(Self, gpiob::PB4<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8525},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758056,"byte_end":10758069,"line_start":1388,"line_end":1388,"column_start":37,"column_end":50},"name":"output_to_pb4","qualname":"<PwmChannel<TIM16_CH1, WithPins>>::output_to_pb4","value":"pub fn output_to_pb4(Self, gpiob::PB4<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8527},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758131,"byte_end":10758144,"line_start":1389,"line_end":1389,"column_start":37,"column_end":50},"name":"output_to_pb8","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pb8","value":"pub fn output_to_pb8(Self, gpiob::PB8<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8530},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758131,"byte_end":10758144,"line_start":1389,"line_end":1389,"column_start":37,"column_end":50},"name":"output_to_pb8","qualname":"<PwmChannel<TIM16_CH1, WithPins>>::output_to_pb8","value":"pub fn output_to_pb8(Self, gpiob::PB8<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8532},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758506,"byte_end":10758519,"line_start":1402,"line_end":1402,"column_start":37,"column_end":50},"name":"output_to_pe0","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pe0","value":"pub fn output_to_pe0(Self, gpioe::PE0<gpio::AF4>)\n-> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8535},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758506,"byte_end":10758519,"line_start":1402,"line_end":1402,"column_start":37,"column_end":50},"name":"output_to_pe0","qualname":"<PwmChannel<TIM16_CH1, WithPins>>::output_to_pe0","value":"pub fn output_to_pe0(Self, gpioe::PE0<gpio::AF4>)\n-> PwmChannel<TIM16_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8537},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758583,"byte_end":10758597,"line_start":1404,"line_end":1404,"column_start":38,"column_end":52},"name":"output_to_pa13","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pa13","value":"pub fn output_to_pa13(Self, gpioa::PA13<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8540},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758583,"byte_end":10758597,"line_start":1404,"line_end":1404,"column_start":38,"column_end":52},"name":"output_to_pa13","qualname":"<PwmChannel<TIM16_CH1, WithNPins>>::output_to_pa13","value":"pub fn output_to_pa13(Self, gpioa::PA13<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8542},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758661,"byte_end":10758674,"line_start":1405,"line_end":1405,"column_start":38,"column_end":51},"name":"output_to_pb6","qualname":"<PwmChannel<TIM16_CH1, NoPins>>::output_to_pb6","value":"pub fn output_to_pb6(Self, gpiob::PB6<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8545},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758661,"byte_end":10758674,"line_start":1405,"line_end":1405,"column_start":38,"column_end":51},"name":"output_to_pb6","qualname":"<PwmChannel<TIM16_CH1, WithNPins>>::output_to_pb6","value":"pub fn output_to_pb6(Self, gpiob::PB6<gpio::AF1>)\n-> PwmChannel<TIM16_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":8546},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10758738,"byte_end":10758743,"line_start":1410,"line_end":1410,"column_start":5,"column_end":10},"name":"tim17","qualname":"::pwm::tim17","value":"pub fn tim17(TIM17, u16, Hertz, &Clocks) -> PwmChannel<TIM17_CH1, NoPins>","parent":null,"children":[],"decl_id":null,"docs":" Create one or more output channels from a TIM Peripheral\n This function requires the maximum resolution of the duty cycle,\n the period of the PWM signal and the frozen clock configuration.","sig":null,"attributes":[{"value":"/ Create one or more output channels from a TIM Peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721531,"byte_end":10721591,"line_start":246,"line_end":246,"column_start":9,"column_end":69}},{"value":"/ This function requires the maximum resolution of the duty cycle,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721600,"byte_end":10721668,"line_start":247,"line_end":247,"column_start":9,"column_end":77}},{"value":"/ the period of the PWM signal and the frozen clock configuration.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721677,"byte_end":10721745,"line_start":248,"line_end":248,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721754,"byte_end":10721757,"line_start":249,"line_end":249,"column_start":9,"column_end":12}},{"value":"/ The resolution should be chosen to offer sufficient steps against","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721766,"byte_end":10721835,"line_start":250,"line_end":250,"column_start":9,"column_end":78}},{"value":"/ your target peripheral.  For example, a servo that can turn from","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721844,"byte_end":10721912,"line_start":251,"line_end":251,"column_start":9,"column_end":77}},{"value":"/ 0 degrees (2% duty cycle) to 180 degrees (4% duty cycle) might choose","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10721921,"byte_end":10721994,"line_start":252,"line_end":252,"column_start":9,"column_end":82}},{"value":"/ a resolution of 9000.  This allows the servo to be set in increments","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722003,"byte_end":10722075,"line_start":253,"line_end":253,"column_start":9,"column_end":81}},{"value":"/ of exactly one degree.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722084,"byte_end":10722110,"line_start":254,"line_end":254,"column_start":9,"column_end":35}},{"value":"allow(unused_parens)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10722119,"byte_end":10722142,"line_start":255,"line_end":255,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8578},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10759001,"byte_end":10759014,"line_start":1426,"line_end":1426,"column_start":37,"column_end":50},"name":"output_to_pa7","qualname":"<PwmChannel<TIM17_CH1, NoPins>>::output_to_pa7","value":"pub fn output_to_pa7(Self, gpioa::PA7<gpio::AF1>)\n-> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8581},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10759001,"byte_end":10759014,"line_start":1426,"line_end":1426,"column_start":37,"column_end":50},"name":"output_to_pa7","qualname":"<PwmChannel<TIM17_CH1, WithPins>>::output_to_pa7","value":"pub fn output_to_pa7(Self, gpioa::PA7<gpio::AF1>)\n-> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8583},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10759076,"byte_end":10759089,"line_start":1427,"line_end":1427,"column_start":37,"column_end":50},"name":"output_to_pb5","qualname":"<PwmChannel<TIM17_CH1, NoPins>>::output_to_pb5","value":"pub fn output_to_pb5(Self, gpiob::PB5<gpio::AF10>)\n-> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8586},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10759076,"byte_end":10759089,"line_start":1427,"line_end":1427,"column_start":37,"column_end":50},"name":"output_to_pb5","qualname":"<PwmChannel<TIM17_CH1, WithPins>>::output_to_pb5","value":"pub fn output_to_pb5(Self, gpiob::PB5<gpio::AF10>)\n-> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8588},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10759152,"byte_end":10759165,"line_start":1428,"line_end":1428,"column_start":37,"column_end":50},"name":"output_to_pb9","qualname":"<PwmChannel<TIM17_CH1, NoPins>>::output_to_pb9","value":"pub fn output_to_pb9(Self, gpiob::PB9<gpio::AF1>)\n-> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8591},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10759152,"byte_end":10759165,"line_start":1428,"line_end":1428,"column_start":37,"column_end":50},"name":"output_to_pb9","qualname":"<PwmChannel<TIM17_CH1, WithPins>>::output_to_pb9","value":"pub fn output_to_pb9(Self, gpiob::PB9<gpio::AF1>)\n-> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8593},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10759527,"byte_end":10759540,"line_start":1441,"line_end":1441,"column_start":37,"column_end":50},"name":"output_to_pe1","qualname":"<PwmChannel<TIM17_CH1, NoPins>>::output_to_pe1","value":"pub fn output_to_pe1(Self, gpioe::PE1<gpio::AF4>)\n-> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8596},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10759527,"byte_end":10759540,"line_start":1441,"line_end":1441,"column_start":37,"column_end":50},"name":"output_to_pe1","qualname":"<PwmChannel<TIM17_CH1, WithPins>>::output_to_pe1","value":"pub fn output_to_pe1(Self, gpioe::PE1<gpio::AF4>)\n-> PwmChannel<TIM17_CH1, WithPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8598},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10759604,"byte_end":10759618,"line_start":1443,"line_end":1443,"column_start":38,"column_end":52},"name":"output_to_pa13","qualname":"<PwmChannel<TIM17_CH1, NoPins>>::output_to_pa13","value":"pub fn output_to_pa13(Self, gpioa::PA13<gpio::AF1>)\n-> PwmChannel<TIM17_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel that does not yet have\n any pins.  This channel cannot be enabled until this method\n is called.","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel that does not yet have","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725809,"byte_end":10725875,"line_start":346,"line_end":346,"column_start":13,"column_end":79}},{"value":"/ any pins.  This channel cannot be enabled until this method","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725888,"byte_end":10725951,"line_start":347,"line_end":347,"column_start":13,"column_end":76}},{"value":"/ is called.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725964,"byte_end":10725978,"line_start":348,"line_end":348,"column_start":13,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10725991,"byte_end":10725994,"line_start":349,"line_end":349,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726007,"byte_end":10726054,"line_start":350,"line_end":350,"column_start":13,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8601},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10759604,"byte_end":10759618,"line_start":1443,"line_end":1443,"column_start":38,"column_end":52},"name":"output_to_pa13","qualname":"<PwmChannel<TIM17_CH1, WithNPins>>::output_to_pa13","value":"pub fn output_to_pa13(Self, gpioa::PA13<gpio::AF1>)\n-> PwmChannel<TIM17_CH1, WithNPins>","parent":null,"children":[],"decl_id":null,"docs":" Output to a specific pin from a channel is already configured\n with output pins.  There is no limit to the number of pins that\n can be used (as long as they are compatible).","sig":null,"attributes":[{"value":"/ Output to a specific pin from a channel is already configured","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726913,"byte_end":10726978,"line_start":372,"line_end":372,"column_start":13,"column_end":78}},{"value":"/ with output pins.  There is no limit to the number of pins that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10726991,"byte_end":10727058,"line_start":373,"line_end":373,"column_start":13,"column_end":80}},{"value":"/ can be used (as long as they are compatible).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727071,"byte_end":10727120,"line_start":374,"line_end":374,"column_start":13,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727133,"byte_end":10727136,"line_start":375,"line_end":375,"column_start":13,"column_end":16}},{"value":"/ The pin is consumed and cannot be returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/pwm.rs","byte_start":10727149,"byte_end":10727196,"line_start":376,"line_end":376,"column_start":13,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":543},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rcc","qualname":"::rcc","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":10450},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":8602},{"krate":0,"index":8610},{"krate":0,"index":587},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":8612},{"krate":0,"index":8621},{"krate":0,"index":8620},{"krate":0,"index":620}],"decl_id":null,"docs":" Reset and Clock Control","sig":null,"attributes":[{"value":"/ Reset and Clock Control","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763102,"byte_end":10763129,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763130,"byte_end":10763133,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The most important function this module","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763134,"byte_end":10763177,"line_start":3,"line_end":3,"column_start":1,"column_end":44}},{"value":"/ delivers is the clock configuration.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763178,"byte_end":10763218,"line_start":4,"line_end":4,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763219,"byte_end":10763222,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ To configure the clock, we first have to obtain the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763223,"byte_end":10763278,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/ device peripherals.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763279,"byte_end":10763302,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763303,"byte_end":10763306,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763307,"byte_end":10763314,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # use cortex_m_rt::entry;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763315,"byte_end":10763344,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/ # use stm32f3xx_hal::prelude::*;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763345,"byte_end":10763381,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"/ # #[entry]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763382,"byte_end":10763396,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/ # fn main() -> ! {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763397,"byte_end":10763419,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/ // Get our peripherals","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763420,"byte_end":10763446,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763447,"byte_end":10763494,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763495,"byte_end":10763498,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut flash = dp.FLASH.constrain();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763499,"byte_end":10763540,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/ let mut rcc = dp.RCC.constrain();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763541,"byte_end":10763578,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763579,"byte_end":10763586,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763587,"byte_end":10763594,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763595,"byte_end":10763598,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After that we can configure the clock","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763599,"byte_end":10763640,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763641,"byte_end":10763644,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763645,"byte_end":10763652,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # use cortex_m_rt::entry;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763653,"byte_end":10763682,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ # use stm32f3xx_hal::prelude::*;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763683,"byte_end":10763719,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/ # #[entry]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763720,"byte_end":10763734,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ # fn main() -> ! {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763735,"byte_end":10763757,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ # let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763758,"byte_end":10763807,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763808,"byte_end":10763811,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # let mut flash = dp.FLASH.constrain();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763812,"byte_end":10763855,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/ # let mut rcc = dp.RCC.constrain();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763856,"byte_end":10763895,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/ let clocks = rcc.cfgr","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763896,"byte_end":10763921,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/     // Using the external oscillator","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763922,"byte_end":10763962,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/     // Set the frequency to that of the external oscillator","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10763963,"byte_end":10764026,"line_start":35,"line_end":35,"column_start":1,"column_end":64}},{"value":"/     .use_hse(8.mhz())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764027,"byte_end":10764052,"line_start":36,"line_end":36,"column_start":1,"column_end":26}},{"value":"/     // Set the frequency for the AHB bus,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764053,"byte_end":10764098,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/     // which the root of every following clock peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764099,"byte_end":10764160,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/     .hclk(48.mhz())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764161,"byte_end":10764184,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/     // The sysclk is equivalent to the core clock","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764185,"byte_end":10764238,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/     .sysclk(48.mhz())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764239,"byte_end":10764264,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     // The following are peripheral clocks, which are both","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764265,"byte_end":10764327,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/     // needed to configure specific peripherals.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764328,"byte_end":10764380,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/     // Looking at the peripheral function parameters","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764381,"byte_end":10764437,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/     // should give more insight, which peripheral clock is needed.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764438,"byte_end":10764508,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/     .pclk1(12.mhz())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764509,"byte_end":10764533,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/     .pclk2(12.mhz())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764534,"byte_end":10764558,"line_start":47,"line_end":47,"column_start":1,"column_end":25}},{"value":"/     // Freeze / apply the configuration and setup all clocks","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764559,"byte_end":10764623,"line_start":48,"line_end":48,"column_start":1,"column_end":65}},{"value":"/     .freeze(&mut flash.acr);","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764624,"byte_end":10764656,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764657,"byte_end":10764664,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764665,"byte_end":10764672,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764673,"byte_end":10764676,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ All fields can be omitted and will internally be set to a calculated default.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764677,"byte_end":10764758,"line_start":53,"line_end":53,"column_start":1,"column_end":82}},{"value":"/ For more details read the documentation of the [`CFGR`] methods to","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764759,"byte_end":10764829,"line_start":54,"line_end":54,"column_start":1,"column_end":71}},{"value":"/ find out how to setup the clock.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764830,"byte_end":10764866,"line_start":55,"line_end":55,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":552},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765044,"byte_end":10765050,"line_start":66,"line_end":66,"column_start":11,"column_end":17},"name":"RccExt","qualname":"::rcc::RccExt","value":"RccExt","parent":null,"children":[{"krate":0,"index":553}],"decl_id":null,"docs":" Extension trait that constrains the `RCC` peripheral\n","sig":null,"attributes":[{"value":"/ Extension trait that constrains the `RCC` peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10764977,"byte_end":10765033,"line_start":65,"line_end":65,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765147,"byte_end":10765156,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"constrain","qualname":"::rcc::RccExt::constrain","value":"pub fn constrain(Self) -> Rcc","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Constrains the `RCC` peripheral so it plays nicely with the other abstractions\n","sig":null,"attributes":[{"value":"/ Constrains the `RCC` peripheral so it plays nicely with the other abstractions","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765057,"byte_end":10765139,"line_start":67,"line_end":67,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":556},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765730,"byte_end":10765733,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"Rcc","qualname":"::rcc::Rcc","value":"Rcc { ahb, apb1, apb2, bdcr, cfgr }","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"decl_id":null,"docs":" Constrained RCC peripheral","sig":null,"attributes":[{"value":"/ Constrained RCC peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765434,"byte_end":10765464,"line_start":83,"line_end":83,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765465,"byte_end":10765468,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ An instance of this struct is acquired by calling the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765469,"byte_end":10765526,"line_start":85,"line_end":85,"column_start":1,"column_end":58}},{"value":"/ [`constrain`](RccExt::constrain) function on the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765527,"byte_end":10765579,"line_start":86,"line_end":86,"column_start":1,"column_end":53}},{"value":"/ [`RCC`](crate::pac::RCC) struct.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765580,"byte_end":10765616,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765617,"byte_end":10765620,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765621,"byte_end":10765628,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765629,"byte_end":10765676,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/ let rcc = dp.RCC.constrain();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765677,"byte_end":10765710,"line_start":91,"line_end":91,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765711,"byte_end":10765718,"line_start":92,"line_end":92,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":557},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765794,"byte_end":10765797,"line_start":95,"line_end":95,"column_start":9,"column_end":12},"name":"ahb","qualname":"::rcc::Rcc::ahb","value":"rcc::AHB","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" AMBA High-performance Bus (AHB) registers\n","sig":null,"attributes":[{"value":"/ AMBA High-performance Bus (AHB) registers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765740,"byte_end":10765785,"line_start":94,"line_end":94,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":558},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765863,"byte_end":10765867,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"name":"apb1","qualname":"::rcc::Rcc::apb1","value":"rcc::APB1","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Advanced Peripheral Bus 1 (APB1) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 1 (APB1) registers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765808,"byte_end":10765854,"line_start":96,"line_end":96,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":559},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765934,"byte_end":10765938,"line_start":99,"line_end":99,"column_start":9,"column_end":13},"name":"apb2","qualname":"::rcc::Rcc::apb2","value":"rcc::APB2","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Advanced Peripheral Bus 2 (APB2) registers\n","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 2 (APB2) registers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765879,"byte_end":10765925,"line_start":98,"line_end":98,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":560},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765980,"byte_end":10765984,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"name":"bdcr","qualname":"::rcc::Rcc::bdcr","value":"rcc::BDCR","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" RCC Backup Domain\n","sig":null,"attributes":[{"value":"/ RCC Backup Domain","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765950,"byte_end":10765971,"line_start":100,"line_end":100,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":561},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766028,"byte_end":10766032,"line_start":103,"line_end":103,"column_start":9,"column_end":13},"name":"cfgr","qualname":"::rcc::Rcc::cfgr","value":"rcc::CFGR","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" Clock configuration\n","sig":null,"attributes":[{"value":"/ Clock configuration","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765996,"byte_end":10766019,"line_start":102,"line_end":102,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766317,"byte_end":10766320,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"AHB","qualname":"::rcc::AHB","value":"AHB {  }","parent":null,"children":[{"krate":0,"index":563}],"decl_id":null,"docs":" AMBA High-performance Bus (AHB) registers","sig":null,"attributes":[{"value":"/ AMBA High-performance Bus (AHB) registers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766043,"byte_end":10766088,"line_start":106,"line_end":106,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766089,"byte_end":10766092,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ An instance of this struct is acquired from the [`RCC`](crate::pac::RCC) struct.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766093,"byte_end":10766177,"line_start":108,"line_end":108,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766178,"byte_end":10766181,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766182,"byte_end":10766189,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766190,"byte_end":10766237,"line_start":111,"line_end":111,"column_start":1,"column_end":48}},{"value":"/ let rcc = dp.RCC.constrain();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766238,"byte_end":10766271,"line_start":112,"line_end":112,"column_start":1,"column_end":34}},{"value":"/ use_ahb(&mut rcc.ahb)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766272,"byte_end":10766297,"line_start":113,"line_end":113,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766298,"byte_end":10766305,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766981,"byte_end":10766985,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"APB1","qualname":"::rcc::APB1","value":"APB1 {  }","parent":null,"children":[{"krate":0,"index":568}],"decl_id":null,"docs":" Advanced Peripheral Bus 1 (APB1) registers","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 1 (APB1) registers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766704,"byte_end":10766750,"line_start":131,"line_end":131,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766751,"byte_end":10766754,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ An instance of this struct is acquired from the [`RCC`](crate::pac::RCC) struct.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766755,"byte_end":10766839,"line_start":133,"line_end":133,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766840,"byte_end":10766843,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766844,"byte_end":10766851,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766852,"byte_end":10766899,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"/ let rcc = dp.RCC.constrain();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766900,"byte_end":10766933,"line_start":137,"line_end":137,"column_start":1,"column_end":34}},{"value":"/ use_apb1(&mut rcc.apb1)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766934,"byte_end":10766961,"line_start":138,"line_end":138,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766962,"byte_end":10766969,"line_start":139,"line_end":139,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":572},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767651,"byte_end":10767655,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"APB2","qualname":"::rcc::APB2","value":"APB2 {  }","parent":null,"children":[{"krate":0,"index":573}],"decl_id":null,"docs":" Advanced Peripheral Bus 2 (APB2) registers","sig":null,"attributes":[{"value":"/ Advanced Peripheral Bus 2 (APB2) registers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767374,"byte_end":10767420,"line_start":156,"line_end":156,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767421,"byte_end":10767424,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ An instance of this struct is acquired from the [`RCC`](crate::pac::RCC) struct.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767425,"byte_end":10767509,"line_start":158,"line_end":158,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767510,"byte_end":10767513,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767514,"byte_end":10767521,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767522,"byte_end":10767569,"line_start":161,"line_end":161,"column_start":1,"column_end":48}},{"value":"/ let rcc = dp.RCC.constrain();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767570,"byte_end":10767603,"line_start":162,"line_end":162,"column_start":1,"column_end":34}},{"value":"/ use_apb2(&mut rcc.apb2)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767604,"byte_end":10767631,"line_start":163,"line_end":163,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767632,"byte_end":10767639,"line_start":164,"line_end":164,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10769876,"byte_end":10769880,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"BDCR","qualname":"::rcc::BDCR","value":"BDCR {  }","parent":null,"children":[{"krate":0,"index":584}],"decl_id":null,"docs":" Backup Domain Control register (RCC_BDCR)\n","sig":null,"attributes":[{"value":"/ Backup Domain Control register (RCC_BDCR)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10769819,"byte_end":10769864,"line_start":236,"line_end":236,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":8602},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10770357,"byte_end":10770361,"line_start":258,"line_end":258,"column_start":12,"column_end":16},"name":"CFGR","qualname":"::rcc::CFGR","value":"CFGR {  }","parent":null,"children":[{"krate":0,"index":8603},{"krate":0,"index":8604},{"krate":0,"index":8605},{"krate":0,"index":8606},{"krate":0,"index":8607},{"krate":0,"index":8608},{"krate":0,"index":8609}],"decl_id":null,"docs":" Clock configuration","sig":null,"attributes":[{"value":"/ Clock configuration","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10770084,"byte_end":10770107,"line_start":248,"line_end":248,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10770108,"byte_end":10770111,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ An instance of this struct is acquired from the [`RCC`](crate::pac::RCC) struct.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10770112,"byte_end":10770196,"line_start":250,"line_end":250,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10770197,"byte_end":10770200,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10770201,"byte_end":10770208,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/ let dp = pac::Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10770209,"byte_end":10770256,"line_start":253,"line_end":253,"column_start":1,"column_end":48}},{"value":"/ let rcc = dp.RCC.constrain();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10770257,"byte_end":10770290,"line_start":254,"line_end":254,"column_start":1,"column_end":34}},{"value":"/ use_cfgr(&mut rcc.cfgr)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10770291,"byte_end":10770318,"line_start":255,"line_end":255,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10770319,"byte_end":10770326,"line_start":256,"line_end":256,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772723,"byte_end":10772730,"line_start":336,"line_end":336,"column_start":12,"column_end":19},"name":"use_hse","qualname":"<CFGR>::use_hse","value":"pub fn use_hse<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Uses `HSE` (external oscillator) instead of `HSI` (internal RC oscillator) as the clock source.","sig":null,"attributes":[{"value":"/ Uses `HSE` (external oscillator) instead of `HSI` (internal RC oscillator) as the clock source.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772458,"byte_end":10772557,"line_start":332,"line_end":332,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772562,"byte_end":10772565,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Will result in a hang if an external oscillator is not connected or it fails to start,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772570,"byte_end":10772660,"line_start":334,"line_end":334,"column_start":5,"column_end":95}},{"value":"/ unless [css](CFGR::enable_css) is enabled.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772665,"byte_end":10772711,"line_start":335,"line_end":335,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773090,"byte_end":10773100,"line_start":350,"line_end":350,"column_start":12,"column_end":22},"name":"bypass_hse","qualname":"<CFGR>::bypass_hse","value":"pub fn bypass_hse(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable `HSE` bypass.","sig":null,"attributes":[{"value":"/ Enable `HSE` bypass.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772865,"byte_end":10772889,"line_start":344,"line_end":344,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772894,"byte_end":10772897,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Uses user provided clock signal instead of an external oscillator.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772902,"byte_end":10772972,"line_start":346,"line_end":346,"column_start":5,"column_end":75}},{"value":"/ `OSC_OUT` pin is free and can be used as GPIO.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772977,"byte_end":10773027,"line_start":347,"line_end":347,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773032,"byte_end":10773035,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ No effect if `HSE` is not enabled.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773040,"byte_end":10773078,"line_start":349,"line_end":349,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773430,"byte_end":10773440,"line_start":361,"line_end":361,"column_start":12,"column_end":22},"name":"enable_css","qualname":"<CFGR>::enable_css","value":"pub fn enable_css(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable `CSS` (Clock Security System).","sig":null,"attributes":[{"value":"/ Enable `CSS` (Clock Security System).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773177,"byte_end":10773218,"line_start":355,"line_end":355,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773223,"byte_end":10773226,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ System clock is automatically switched to `HSI` and an interrupt (`CSSI`) is generated","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773231,"byte_end":10773321,"line_start":357,"line_end":357,"column_start":5,"column_end":95}},{"value":"/ when `HSE` clock failure is detected.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773326,"byte_end":10773367,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773372,"byte_end":10773375,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ No effect if `HSE` is not enabled.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773380,"byte_end":10773418,"line_start":360,"line_end":360,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773558,"byte_end":10773562,"line_start":367,"line_end":367,"column_start":12,"column_end":16},"name":"hclk","qualname":"<CFGR>::hclk","value":"pub fn hclk<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Sets a frequency for the AHB bus\n","sig":null,"attributes":[{"value":"/ Sets a frequency for the AHB bus","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773510,"byte_end":10773546,"line_start":366,"line_end":366,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773957,"byte_end":10773962,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"pclk1","qualname":"<CFGR>::pclk1","value":"pub fn pclk1<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Sets a frequency for the `APB1` bus","sig":null,"attributes":[{"value":"/ Sets a frequency for the `APB1` bus","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773698,"byte_end":10773737,"line_start":375,"line_end":375,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773742,"byte_end":10773745,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ - Maximal supported frequency: 36 Mhz","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773750,"byte_end":10773791,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773796,"byte_end":10773799,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ If not manually set, it will be set to [`CFGR::sysclk`] frequency","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773804,"byte_end":10773873,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ or [`CFGR::sysclk`] frequency / 2, if [`CFGR::sysclk`] > 36 Mhz","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10773878,"byte_end":10773945,"line_start":380,"line_end":380,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774564,"byte_end":10774569,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"name":"pclk2","qualname":"<CFGR>::pclk2","value":"pub fn pclk2<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Sets a frequency for the `APB2` bus","sig":null,"attributes":[{"value":"/ Sets a frequency for the `APB2` bus","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774099,"byte_end":10774138,"line_start":389,"line_end":389,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774143,"byte_end":10774146,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Resolution and Limits","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774151,"byte_end":10774178,"line_start":391,"line_end":391,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774183,"byte_end":10774186,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ - Maximal supported frequency with HSE: 72 Mhz","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774191,"byte_end":10774241,"line_start":393,"line_end":393,"column_start":5,"column_end":55}},{"value":"/ - Maximal supported frequency without HSE: 64 Mhz","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774246,"byte_end":10774299,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774304,"byte_end":10774307,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This is true for devices **except** the following devices,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774312,"byte_end":10774374,"line_start":396,"line_end":396,"column_start":5,"column_end":67}},{"value":"/ as these allow finer resolutions","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774379,"byte_end":10774415,"line_start":397,"line_end":397,"column_start":5,"column_end":41}},{"value":"/ even when using the internal oscillator:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774420,"byte_end":10774464,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774469,"byte_end":10774472,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     [stm32f302xd,stm32f302xe,stm32f303xd,stm32f303xe,stm32f398]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774477,"byte_end":10774544,"line_start":400,"line_end":400,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774549,"byte_end":10774552,"line_start":401,"line_end":401,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10775295,"byte_end":10775301,"line_start":425,"line_end":425,"column_start":12,"column_end":18},"name":"sysclk","qualname":"<CFGR>::sysclk","value":"pub fn sysclk<F>(Self, F) -> Self where F: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Sets the system (core) frequency","sig":null,"attributes":[{"value":"/ Sets the system (core) frequency","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774706,"byte_end":10774742,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774747,"byte_end":10774750,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Resolution and Limits","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774755,"byte_end":10774782,"line_start":412,"line_end":412,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774787,"byte_end":10774790,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ - Maximal supported frequency with `HSE`: 72 Mhz","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774795,"byte_end":10774847,"line_start":414,"line_end":414,"column_start":5,"column_end":57}},{"value":"/ - Maximal supported frequency without `HSE`: 64 Mhz","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774852,"byte_end":10774907,"line_start":415,"line_end":415,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774912,"byte_end":10774915,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ If [`CFGR::hse`] is not used, therefor `HSI / 2` is used.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774920,"byte_end":10774981,"line_start":417,"line_end":417,"column_start":5,"column_end":66}},{"value":"/ Only multiples of (HSI / 2) (4 Mhz) are allowed.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10774986,"byte_end":10775038,"line_start":418,"line_end":418,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10775043,"byte_end":10775046,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This is true for devices **except** the following devices,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10775051,"byte_end":10775113,"line_start":420,"line_end":420,"column_start":5,"column_end":67}},{"value":"/ as these allow finer resolutions","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10775118,"byte_end":10775154,"line_start":421,"line_end":421,"column_start":5,"column_end":41}},{"value":"/ even when using the internal oscillator:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10775159,"byte_end":10775203,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10775208,"byte_end":10775211,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     [stm32f302xd,stm32f302xe,stm32f303xd,stm32f303xe,stm32f398]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10775216,"byte_end":10775283,"line_start":424,"line_end":424,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10783393,"byte_end":10783399,"line_start":626,"line_end":626,"column_start":12,"column_end":18},"name":"freeze","qualname":"<CFGR>::freeze","value":"pub fn freeze(Self, &mut ACR) -> Clocks","parent":null,"children":[],"decl_id":null,"docs":" Freezes the clock configuration, making it effective","sig":null,"attributes":[{"value":"/ Freezes the clock configuration, making it effective","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10782818,"byte_end":10782874,"line_start":615,"line_end":615,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10782879,"byte_end":10782882,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ This function internally calculates the specific.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10782887,"byte_end":10782940,"line_start":617,"line_end":617,"column_start":5,"column_end":58}},{"value":"/ divisors for the different clock peripheries.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10782945,"byte_end":10782994,"line_start":618,"line_end":618,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10782999,"byte_end":10783002,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10783007,"byte_end":10783019,"line_start":620,"line_end":620,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10783024,"byte_end":10783027,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ If any of the set frequencies via [`sysclk`](CFGR::sysclk), [`hclk`](CFGR::hclk), [`pclk1`](CFGR::pclk1) or [`pclk2`](CFGR::pclk2)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10783032,"byte_end":10783166,"line_start":622,"line_end":622,"column_start":5,"column_end":139}},{"value":"/ are invalid or can not be reached because of e.g. to low frequencies","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10783171,"byte_end":10783243,"line_start":623,"line_end":623,"column_start":5,"column_end":77}},{"value":"/ of the former, as [`sysclk`](CFGR::sysclk) depends on the configuration of [`hclk`](CFGR::hclk)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10783248,"byte_end":10783347,"line_start":624,"line_end":624,"column_start":5,"column_end":104}},{"value":"/ this function will panic.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10783352,"byte_end":10783381,"line_start":625,"line_end":625,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":8612},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788061,"byte_end":10788067,"line_start":764,"line_end":764,"column_start":12,"column_end":18},"name":"Clocks","qualname":"::rcc::Clocks","value":"Clocks {  }","parent":null,"children":[{"krate":0,"index":8613},{"krate":0,"index":8614},{"krate":0,"index":8615},{"krate":0,"index":8616},{"krate":0,"index":8617},{"krate":0,"index":8618},{"krate":0,"index":8619}],"decl_id":null,"docs":" Frozen clock frequencies","sig":null,"attributes":[{"value":"/ Frozen clock frequencies","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10787799,"byte_end":10787827,"line_start":759,"line_end":759,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10787828,"byte_end":10787831,"line_start":760,"line_end":760,"column_start":1,"column_end":4}},{"value":"/ The existence of this value indicates that the clock configuration can no longer be changed.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10787832,"byte_end":10787928,"line_start":761,"line_end":761,"column_start":1,"column_end":97}},{"value":"/ This struct can be obtained via the [freeze](CFGR::freeze) method of the [CFGR](CFGR) struct.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10787929,"byte_end":10788026,"line_start":762,"line_end":762,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788265,"byte_end":10788269,"line_start":776,"line_end":776,"column_start":12,"column_end":16},"name":"hclk","qualname":"<Clocks>::hclk","value":"pub fn hclk(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the AHB\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the AHB","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788217,"byte_end":10788253,"line_start":775,"line_end":775,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788366,"byte_end":10788371,"line_start":781,"line_end":781,"column_start":12,"column_end":17},"name":"pclk1","qualname":"<Clocks>::pclk1","value":"pub fn pclk1(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB1\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB1","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788317,"byte_end":10788354,"line_start":780,"line_end":780,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788469,"byte_end":10788474,"line_start":786,"line_end":786,"column_start":12,"column_end":17},"name":"pclk2","qualname":"<Clocks>::pclk2","value":"pub fn pclk2(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency of the APB2\n","sig":null,"attributes":[{"value":"/ Returns the frequency of the APB2","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788420,"byte_end":10788457,"line_start":785,"line_end":785,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788755,"byte_end":10788761,"line_start":801,"line_end":801,"column_start":12,"column_end":18},"name":"sysclk","qualname":"<Clocks>::sysclk","value":"pub fn sysclk(&Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the system (core) frequency\n","sig":null,"attributes":[{"value":"/ Returns the system (core) frequency","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788704,"byte_end":10788743,"line_start":800,"line_end":800,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10789286,"byte_end":10789298,"line_start":814,"line_end":814,"column_start":12,"column_end":24},"name":"usbclk_valid","qualname":"<Clocks>::usbclk_valid","value":"pub fn usbclk_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the USBCLK clock frequency is valid for the USB peripheral","sig":null,"attributes":[{"value":"/ Returns whether the USBCLK clock frequency is valid for the USB peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788811,"byte_end":10788889,"line_start":805,"line_end":805,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788894,"byte_end":10788897,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ If the microcontroller does support USB, 48 Mhz or 72 Mhz have to be used","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788902,"byte_end":10788979,"line_start":807,"line_end":807,"column_start":5,"column_end":82}},{"value":"/ and the [`CFGR::hse`] must be used.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788984,"byte_end":10789023,"line_start":808,"line_end":808,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10789028,"byte_end":10789031,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ The APB1 / [`CFGR::pclk1`] clock must have a minimum frequency of 10 MHz to avoid data","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10789036,"byte_end":10789126,"line_start":810,"line_end":810,"column_start":5,"column_end":95}},{"value":"/ overrun/underrun problems. [RM0316 32.5.2][RM0316]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10789131,"byte_end":10789185,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10789190,"byte_end":10789193,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ [RM0316]: https://www.st.com/resource/en/reference_manual/dm00043574.pdf","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10789198,"byte_end":10789274,"line_start":813,"line_end":813,"column_start":5,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":628},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rtc","qualname":"::rtc","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":8623},{"krate":0,"index":8626},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":660},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":708}],"decl_id":null,"docs":" Real Time Clock","sig":null,"attributes":[{"value":"/ Real Time Clock","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10789351,"byte_end":10789370,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10789371,"byte_end":10789374,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Interface to the real time clock. See STM32F303 reference manual, section 27.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10789375,"byte_end":10789456,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ For more details, see [ST AN4759][].","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10789457,"byte_end":10789497,"line_start":4,"line_end":4,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10789498,"byte_end":10789501,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [ST AN4759]: https:/www.st.com%2Fresource%2Fen%2Fapplication_note%2Fdm00226326-using-the-hardware-realtime-clock-rtc-and-the-tamper-management-unit-tamp-with-stm32-microcontrollers-stmicroelectronics.pdf&usg=AOvVaw3PzvL2TfYtwS32fw-Uv37h","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10789502,"byte_end":10789742,"line_start":6,"line_end":6,"column_start":1,"column_end":241}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8624},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10789998,"byte_end":10790014,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"name":"InvalidInputData","qualname":"::rtc::Error::InvalidInputData","value":"Error::InvalidInputData","parent":{"krate":0,"index":8623},"children":[],"decl_id":null,"docs":" Invalid input error\n","sig":null,"attributes":[{"value":"/ Invalid input error","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10789970,"byte_end":10789993,"line_start":16,"line_end":16,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":8623},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10789958,"byte_end":10789963,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::rtc::Error","value":"pub enum Error {\n\n    /// Invalid input error\n    InvalidInputData,\n}","parent":null,"children":[{"krate":0,"index":8624}],"decl_id":null,"docs":" RTC error type\n","sig":null,"attributes":[{"value":"/ RTC error type","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10789913,"byte_end":10789931,"line_start":13,"line_end":13,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":644},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790061,"byte_end":10790064,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"Rtc","qualname":"::rtc::Rtc","value":"Rtc { regs }","parent":null,"children":[{"krate":0,"index":645}],"decl_id":null,"docs":" Real Time Clock peripheral\n","sig":null,"attributes":[{"value":"/ Real Time Clock peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790019,"byte_end":10790049,"line_start":20,"line_end":20,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":645},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790118,"byte_end":10790122,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"regs","qualname":"::rtc::Rtc::regs","value":"stm32f3::stm32f303::RTC","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":" RTC Peripheral register definition\n","sig":null,"attributes":[{"value":"/ RTC Peripheral register definition","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790071,"byte_end":10790109,"line_start":22,"line_end":22,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790585,"byte_end":10790588,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<Rtc>::new","value":"pub fn new(RTC, u16, u8, bool, &mut APB1, &mut BDCR, &mut PWR) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create and enable a new RTC, and configure its clock source and prescalers.\n From AN4759, Table 7, when using the LSE (The only clock source this module\n supports currently), set `prediv_s` to 255, and `prediv_a` to 127 to get a\n calendar clock of 1Hz.\n The `bypass` argument is `true` if you're using an external oscillator that\n doesn't connect to `OSC32_IN`, such as a MEMS resonator.\n","sig":null,"attributes":[{"value":"/ Create and enable a new RTC, and configure its clock source and prescalers.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790147,"byte_end":10790226,"line_start":27,"line_end":27,"column_start":5,"column_end":84}},{"value":"/ From AN4759, Table 7, when using the LSE (The only clock source this module","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790231,"byte_end":10790310,"line_start":28,"line_end":28,"column_start":5,"column_end":84}},{"value":"/ supports currently), set `prediv_s` to 255, and `prediv_a` to 127 to get a","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790315,"byte_end":10790393,"line_start":29,"line_end":29,"column_start":5,"column_end":83}},{"value":"/ calendar clock of 1Hz.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790398,"byte_end":10790424,"line_start":30,"line_end":30,"column_start":5,"column_end":31}},{"value":"/ The `bypass` argument is `true` if you're using an external oscillator that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790429,"byte_end":10790508,"line_start":31,"line_end":31,"column_start":5,"column_end":84}},{"value":"/ doesn't connect to `OSC32_IN`, such as a MEMS resonator.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790513,"byte_end":10790573,"line_start":32,"line_end":32,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10791132,"byte_end":10791143,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"set_24h_fmt","qualname":"<Rtc>::set_24h_fmt","value":"pub fn set_24h_fmt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets calendar clock to 24 hr format\n","sig":null,"attributes":[{"value":"/ Sets calendar clock to 24 hr format","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10791081,"byte_end":10791120,"line_start":57,"line_end":57,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10791273,"byte_end":10791284,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"set_12h_fmt","qualname":"<Rtc>::set_12h_fmt","value":"pub fn set_12h_fmt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets calendar clock to 12 hr format\n","sig":null,"attributes":[{"value":"/ Sets calendar clock to 12 hr format","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10791222,"byte_end":10791261,"line_start":61,"line_end":61,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10791417,"byte_end":10791427,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"is_24h_fmt","qualname":"<Rtc>::is_24h_fmt","value":"pub fn is_24h_fmt(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Reads current hour format selection\n","sig":null,"attributes":[{"value":"/ Reads current hour format selection","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10791366,"byte_end":10791405,"line_start":66,"line_end":66,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":711},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serial","qualname":"::serial","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":10486},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":10504},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":10510},{"krate":0,"index":734},{"krate":0,"index":9847},{"krate":0,"index":9848},{"krate":0,"index":735},{"krate":0,"index":8628},{"krate":0,"index":8637},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":9837},{"krate":0,"index":9838},{"krate":0,"index":9839},{"krate":0,"index":9840},{"krate":0,"index":9841},{"krate":0,"index":9842},{"krate":0,"index":9843},{"krate":0,"index":9844},{"krate":0,"index":9845},{"krate":0,"index":9846},{"krate":0,"index":9834},{"krate":0,"index":9835},{"krate":0,"index":9836},{"krate":0,"index":757},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":8639},{"krate":0,"index":8656},{"krate":0,"index":8663},{"krate":0,"index":8667},{"krate":0,"index":8668},{"krate":0,"index":8672},{"krate":0,"index":8676},{"krate":0,"index":8683},{"krate":0,"index":8690},{"krate":0,"index":8707},{"krate":0,"index":8714},{"krate":0,"index":8718},{"krate":0,"index":8719},{"krate":0,"index":8723},{"krate":0,"index":8727},{"krate":0,"index":8734},{"krate":0,"index":8741},{"krate":0,"index":8758},{"krate":0,"index":8765},{"krate":0,"index":8769},{"krate":0,"index":8770},{"krate":0,"index":8774},{"krate":0,"index":8778},{"krate":0,"index":8785}],"decl_id":null,"docs":" Serial\n","sig":null,"attributes":[{"value":"/ Serial","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10801992,"byte_end":10802002,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":736},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802467,"byte_end":10802471,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Rxne","qualname":"::serial::Event::Rxne","value":"Event::Rxne","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" New data has been received\n","sig":null,"attributes":[{"value":"/ New data has been received","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802432,"byte_end":10802462,"line_start":22,"line_end":22,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":738},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802506,"byte_end":10802509,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Txe","qualname":"::serial::Event::Txe","value":"Event::Txe","parent":{"krate":0,"index":735},"children":[],"decl_id":null,"docs":" New data can be sent\n","sig":null,"attributes":[{"value":"/ New data can be sent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802477,"byte_end":10802501,"line_start":24,"line_end":24,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":735},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802420,"byte_end":10802425,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Event","qualname":"::serial::Event","value":"pub enum Event {\n\n    /// New data has been received\n    Rxne,\n\n    /// New data can be sent\n    Txe,\n}","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":738}],"decl_id":null,"docs":" Interrupt event\n","sig":null,"attributes":[{"value":"/ Interrupt event","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802391,"byte_end":10802410,"line_start":20,"line_end":20,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8629},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802609,"byte_end":10802616,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"Framing","qualname":"::serial::Error::Framing","value":"Error::Framing","parent":{"krate":0,"index":8628},"children":[],"decl_id":null,"docs":" Framing error\n","sig":null,"attributes":[{"value":"/ Framing error","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802587,"byte_end":10802604,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8631},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802642,"byte_end":10802647,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Noise","qualname":"::serial::Error::Noise","value":"Error::Noise","parent":{"krate":0,"index":8628},"children":[],"decl_id":null,"docs":" Noise error\n","sig":null,"attributes":[{"value":"/ Noise error","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802622,"byte_end":10802637,"line_start":34,"line_end":34,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8633},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802679,"byte_end":10802686,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::serial::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":8628},"children":[],"decl_id":null,"docs":" RX buffer overrun\n","sig":null,"attributes":[{"value":"/ RX buffer overrun","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802653,"byte_end":10802674,"line_start":36,"line_end":36,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8635},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802719,"byte_end":10802725,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Parity","qualname":"::serial::Error::Parity","value":"Error::Parity","parent":{"krate":0,"index":8628},"children":[],"decl_id":null,"docs":" Parity check error\n","sig":null,"attributes":[{"value":"/ Parity check error","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802692,"byte_end":10802714,"line_start":38,"line_end":38,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":8628},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802575,"byte_end":10802580,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"name":"Error","qualname":"::serial::Error","value":"pub enum Error {\n\n    /// Framing error\n    Framing,\n\n    /// Noise error\n    Noise,\n\n    /// RX buffer overrun\n    Overrun,\n\n    /// Parity check error\n    Parity,\n}","parent":null,"children":[{"krate":0,"index":8629},{"krate":0,"index":8631},{"krate":0,"index":8633},{"krate":0,"index":8635}],"decl_id":null,"docs":" Serial error\n","sig":null,"attributes":[{"value":"/ Serial error","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802514,"byte_end":10802530,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"non_exhaustive","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802548,"byte_end":10802565,"line_start":30,"line_end":30,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":740},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802829,"byte_end":10802834,"line_start":44,"line_end":44,"column_start":18,"column_end":23},"name":"TxPin","qualname":"::serial::TxPin","value":"TxPin<USART>","parent":null,"children":[],"decl_id":null,"docs":" TX pin - DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ TX pin - DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802771,"byte_end":10802811,"line_start":43,"line_end":43,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":742},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802904,"byte_end":10802909,"line_start":47,"line_end":47,"column_start":18,"column_end":23},"name":"RxPin","qualname":"::serial::RxPin","value":"RxPin<USART>","parent":null,"children":[],"decl_id":null,"docs":" RX pin - DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ RX pin - DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802846,"byte_end":10802886,"line_start":46,"line_end":46,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":757},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804389,"byte_end":10804395,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"Serial","qualname":"::serial::Serial","value":"Serial {  }","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"decl_id":null,"docs":" Serial abstraction\n","sig":null,"attributes":[{"value":"/ Serial abstraction","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804355,"byte_end":10804377,"line_start":88,"line_end":88,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804479,"byte_end":10804481,"line_start":95,"line_end":95,"column_start":12,"column_end":14},"name":"Rx","qualname":"::serial::Rx","value":"Rx {  }","parent":null,"children":[{"krate":0,"index":764}],"decl_id":null,"docs":" Serial receiver\n","sig":null,"attributes":[{"value":"/ Serial receiver","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804448,"byte_end":10804467,"line_start":94,"line_end":94,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":765},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804560,"byte_end":10804562,"line_start":100,"line_end":100,"column_start":12,"column_end":14},"name":"Tx","qualname":"::serial::Tx","value":"Tx {  }","parent":null,"children":[{"krate":0,"index":767}],"decl_id":null,"docs":" Serial transmitter\n","sig":null,"attributes":[{"value":"/ Serial transmitter","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804526,"byte_end":10804548,"line_start":99,"line_end":99,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":8642},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10814453,"byte_end":10814459,"line_start":339,"line_end":339,"column_start":14,"column_end":20},"name":"usart1","qualname":"<Serial<USART1, (TX, RX)>>::usart1","value":"pub fn usart1(USART1, (TX, RX), Bps, Clocks, &mut APB2) -> Self where\nTX: TxPin<USART1>, RX: RxPin<USART1>","parent":null,"children":[],"decl_id":null,"docs":" Configures a USART peripheral to provide serial communication\n","sig":null,"attributes":[{"value":"/ Configures a USART peripheral to provide serial communication","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804828,"byte_end":10804893,"line_start":110,"line_end":110,"column_start":17,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":8693},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10814509,"byte_end":10814515,"line_start":340,"line_end":340,"column_start":14,"column_end":20},"name":"usart2","qualname":"<Serial<USART2, (TX, RX)>>::usart2","value":"pub fn usart2(USART2, (TX, RX), Bps, Clocks, &mut APB1) -> Self where\nTX: TxPin<USART2>, RX: RxPin<USART2>","parent":null,"children":[],"decl_id":null,"docs":" Configures a USART peripheral to provide serial communication\n","sig":null,"attributes":[{"value":"/ Configures a USART peripheral to provide serial communication","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804828,"byte_end":10804893,"line_start":110,"line_end":110,"column_start":17,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":8744},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10814565,"byte_end":10814571,"line_start":341,"line_end":341,"column_start":14,"column_end":20},"name":"usart3","qualname":"<Serial<USART3, (TX, RX)>>::usart3","value":"pub fn usart3(USART3, (TX, RX), Bps, Clocks, &mut APB1) -> Self where\nTX: TxPin<USART3>, RX: RxPin<USART3>","parent":null,"children":[],"decl_id":null,"docs":" Configures a USART peripheral to provide serial communication\n","sig":null,"attributes":[{"value":"/ Configures a USART peripheral to provide serial communication","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804828,"byte_end":10804893,"line_start":110,"line_end":110,"column_start":17,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":769},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spi","qualname":"::spi","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":10572},{"krate":0,"index":805},{"krate":0,"index":10574},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":10582},{"krate":0,"index":810},{"krate":0,"index":10584},{"krate":0,"index":8792},{"krate":0,"index":8799},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":8801},{"krate":0,"index":8820},{"krate":0,"index":8826},{"krate":0,"index":8829},{"krate":0,"index":8832},{"krate":0,"index":8851},{"krate":0,"index":8857},{"krate":0,"index":8860},{"krate":0,"index":8863},{"krate":0,"index":8882},{"krate":0,"index":8888},{"krate":0,"index":8891}],"decl_id":null,"docs":" Serial Peripheral Interface (SPI) bus","sig":null,"attributes":[{"value":"/ Serial Peripheral Interface (SPI) bus","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10814611,"byte_end":10814652,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10814653,"byte_end":10814656,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A usage example of the can peripheral can be found at [examples/spi.rs]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10814657,"byte_end":10814732,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10814733,"byte_end":10814736,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [examples/spi.rs]: https://github.com/stm32-rs/stm32f3xx-hal/blob/v0.6.0/examples/spi.rs","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10814737,"byte_end":10814829,"line_start":5,"line_end":5,"column_start":1,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8793},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818389,"byte_end":10818396,"line_start":142,"line_end":142,"column_start":5,"column_end":12},"name":"Overrun","qualname":"::spi::Error::Overrun","value":"Error::Overrun","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":" Overrun occurred\n","sig":null,"attributes":[{"value":"/ Overrun occurred","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818364,"byte_end":10818384,"line_start":141,"line_end":141,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8795},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818430,"byte_end":10818439,"line_start":144,"line_end":144,"column_start":5,"column_end":14},"name":"ModeFault","qualname":"::spi::Error::ModeFault","value":"Error::ModeFault","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":" Mode fault occurred\n","sig":null,"attributes":[{"value":"/ Mode fault occurred","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818402,"byte_end":10818425,"line_start":143,"line_end":143,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8797},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818463,"byte_end":10818466,"line_start":146,"line_end":146,"column_start":5,"column_end":8},"name":"Crc","qualname":"::spi::Error::Crc","value":"Error::Crc","parent":{"krate":0,"index":8792},"children":[],"decl_id":null,"docs":" CRC error\n","sig":null,"attributes":[{"value":"/ CRC error","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818445,"byte_end":10818458,"line_start":145,"line_end":145,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":8792},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818352,"byte_end":10818357,"line_start":140,"line_end":140,"column_start":10,"column_end":15},"name":"Error","qualname":"::spi::Error","value":"pub enum Error {\n\n    /// Overrun occurred\n    Overrun,\n\n    /// Mode fault occurred\n    ModeFault,\n\n    /// CRC error\n    Crc,\n}","parent":null,"children":[{"krate":0,"index":8793},{"krate":0,"index":8795},{"krate":0,"index":8797}],"decl_id":null,"docs":" SPI error\n","sig":null,"attributes":[{"value":"/ SPI error","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818294,"byte_end":10818307,"line_start":137,"line_end":137,"column_start":1,"column_end":14}},{"value":"non_exhaustive","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818325,"byte_end":10818342,"line_start":139,"line_end":139,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":811},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818572,"byte_end":10818578,"line_start":151,"line_end":151,"column_start":18,"column_end":24},"name":"SckPin","qualname":"::spi::SckPin","value":"SckPin<SPI>","parent":null,"children":[],"decl_id":null,"docs":" SCK pin -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ SCK pin -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818512,"byte_end":10818554,"line_start":150,"line_end":150,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":813},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818649,"byte_end":10818656,"line_start":154,"line_end":154,"column_start":18,"column_end":25},"name":"MisoPin","qualname":"::spi::MisoPin","value":"MisoPin<SPI>","parent":null,"children":[],"decl_id":null,"docs":" MISO pin -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ MISO pin -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818588,"byte_end":10818631,"line_start":153,"line_end":153,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":815},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818727,"byte_end":10818734,"line_start":157,"line_end":157,"column_start":18,"column_end":25},"name":"MosiPin","qualname":"::spi::MosiPin","value":"MosiPin<SPI>","parent":null,"children":[],"decl_id":null,"docs":" MOSI pin -- DO NOT IMPLEMENT THIS TRAIT\n","sig":null,"attributes":[{"value":"/ MOSI pin -- DO NOT IMPLEMENT THIS TRAIT","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818666,"byte_end":10818709,"line_start":156,"line_end":156,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":832},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825567,"byte_end":10825571,"line_start":390,"line_end":390,"column_start":11,"column_end":15},"name":"Word","qualname":"::spi::Word","value":"Word","parent":null,"children":[{"krate":0,"index":833}],"decl_id":null,"docs":" Configuration trait for the Word Size\n used by the SPI peripheral\n","sig":null,"attributes":[{"value":"/ Configuration trait for the Word Size","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825484,"byte_end":10825525,"line_start":388,"line_end":388,"column_start":1,"column_end":42}},{"value":"/ used by the SPI peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825526,"byte_end":10825556,"line_start":389,"line_end":389,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825653,"byte_end":10825668,"line_start":393,"line_end":393,"column_start":8,"column_end":23},"name":"register_config","qualname":"::spi::Word::register_config","value":"pub fn register_config() -> (FRXTH_A, DS_A)","parent":{"krate":0,"index":832},"children":[],"decl_id":null,"docs":" Returns the register configuration\n to set the word size\n","sig":null,"attributes":[{"value":"/ Returns the register configuration","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825578,"byte_end":10825616,"line_start":391,"line_end":391,"column_start":5,"column_end":43}},{"value":"/ to set the word size","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825621,"byte_end":10825645,"line_start":392,"line_end":392,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":838},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825995,"byte_end":10825998,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"Spi","qualname":"::spi::Spi","value":"Spi {  }","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844}],"decl_id":null,"docs":" SPI peripheral operating in full duplex master mode\n","sig":null,"attributes":[{"value":"/ SPI peripheral operating in full duplex master mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825928,"byte_end":10825983,"line_start":408,"line_end":408,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":8806},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10833330,"byte_end":10833334,"line_start":603,"line_end":603,"column_start":12,"column_end":16},"name":"spi1","qualname":"<Spi<SPI1, (SCK, MISO, MOSI), WORD>>::spi1","value":"pub fn spi1<F>(SPI1, (SCK, MISO, MOSI), Mode, F, Clocks, &mut APB2) -> Self\nwhere F: Into<Hertz>, SCK: SckPin<SPI1>, MISO: MisoPin<SPI1>,\nMOSI: MosiPin<SPI1>, WORD: Word","parent":null,"children":[],"decl_id":null,"docs":" Configures the SPI peripheral to operate in full duplex master mode\n","sig":null,"attributes":[{"value":"/ Configures the SPI peripheral to operate in full duplex master mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10826311,"byte_end":10826382,"line_start":419,"line_end":419,"column_start":17,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":8837},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10833378,"byte_end":10833382,"line_start":604,"line_end":604,"column_start":12,"column_end":16},"name":"spi2","qualname":"<Spi<SPI2, (SCK, MISO, MOSI), WORD>>::spi2","value":"pub fn spi2<F>(SPI2, (SCK, MISO, MOSI), Mode, F, Clocks, &mut APB1) -> Self\nwhere F: Into<Hertz>, SCK: SckPin<SPI2>, MISO: MisoPin<SPI2>,\nMOSI: MosiPin<SPI2>, WORD: Word","parent":null,"children":[],"decl_id":null,"docs":" Configures the SPI peripheral to operate in full duplex master mode\n","sig":null,"attributes":[{"value":"/ Configures the SPI peripheral to operate in full duplex master mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10826311,"byte_end":10826382,"line_start":419,"line_end":419,"column_start":17,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":8868},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10833426,"byte_end":10833430,"line_start":605,"line_end":605,"column_start":12,"column_end":16},"name":"spi3","qualname":"<Spi<SPI3, (SCK, MISO, MOSI), WORD>>::spi3","value":"pub fn spi3<F>(SPI3, (SCK, MISO, MOSI), Mode, F, Clocks, &mut APB1) -> Self\nwhere F: Into<Hertz>, SCK: SckPin<SPI3>, MISO: MisoPin<SPI3>,\nMOSI: MosiPin<SPI3>, WORD: Word","parent":null,"children":[],"decl_id":null,"docs":" Configures the SPI peripheral to operate in full duplex master mode\n","sig":null,"attributes":[{"value":"/ Configures the SPI peripheral to operate in full duplex master mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10826311,"byte_end":10826382,"line_start":419,"line_end":419,"column_start":17,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":846},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":8894},{"krate":0,"index":8906},{"krate":0,"index":8907},{"krate":0,"index":8900},{"krate":0,"index":8898},{"krate":0,"index":8897},{"krate":0,"index":8910},{"krate":0,"index":8922},{"krate":0,"index":8923},{"krate":0,"index":8916},{"krate":0,"index":8914},{"krate":0,"index":8913},{"krate":0,"index":8926},{"krate":0,"index":8938},{"krate":0,"index":8939},{"krate":0,"index":8932},{"krate":0,"index":8930},{"krate":0,"index":8929},{"krate":0,"index":8942},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8948},{"krate":0,"index":8946},{"krate":0,"index":8945},{"krate":0,"index":8958},{"krate":0,"index":8970},{"krate":0,"index":8971},{"krate":0,"index":8964},{"krate":0,"index":8962},{"krate":0,"index":8961},{"krate":0,"index":849},{"krate":0,"index":855},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":865},{"krate":0,"index":8974},{"krate":0,"index":8977},{"krate":0,"index":8976},{"krate":0,"index":867},{"krate":0,"index":8979},{"krate":0,"index":8982},{"krate":0,"index":8981},{"krate":0,"index":871}],"decl_id":null,"docs":" Time units\n","sig":null,"attributes":[{"value":"/ Time units","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10833826,"byte_end":10833840,"line_start":1,"line_end":1,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8894},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10833976,"byte_end":10833979,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Bps","qualname":"::time::Bps","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bits per second\n","sig":null,"attributes":[{"value":"/ Bits per second","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10833899,"byte_end":10833918,"line_start":7,"line_end":7,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":8896},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10833980,"byte_end":10833987,"line_start":9,"line_end":9,"column_start":16,"column_end":23},"name":"0","qualname":"::time::Bps::0","value":"u32","parent":{"krate":0,"index":8894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8910},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834058,"byte_end":10834063,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Hertz","qualname":"::time::Hertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" Hertz\n","sig":null,"attributes":[{"value":"/ Hertz","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10833991,"byte_end":10834000,"line_start":11,"line_end":11,"column_start":1,"column_end":10}}]},{"kind":"Field","id":{"krate":0,"index":8912},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834064,"byte_end":10834071,"line_start":13,"line_end":13,"column_start":18,"column_end":25},"name":"0","qualname":"::time::Hertz::0","value":"u32","parent":{"krate":0,"index":8910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8926},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834146,"byte_end":10834155,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"KiloHertz","qualname":"::time::KiloHertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" KiloHertz\n","sig":null,"attributes":[{"value":"/ KiloHertz","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834075,"byte_end":10834088,"line_start":15,"line_end":15,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":8928},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834156,"byte_end":10834163,"line_start":17,"line_end":17,"column_start":22,"column_end":29},"name":"0","qualname":"::time::KiloHertz::0","value":"u32","parent":{"krate":0,"index":8926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8942},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834238,"byte_end":10834247,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"MegaHertz","qualname":"::time::MegaHertz","value":"","parent":null,"children":[],"decl_id":null,"docs":" MegaHertz\n","sig":null,"attributes":[{"value":"/ MegaHertz","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834167,"byte_end":10834180,"line_start":19,"line_end":19,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":8944},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834248,"byte_end":10834255,"line_start":21,"line_end":21,"column_start":22,"column_end":29},"name":"0","qualname":"::time::MegaHertz::0","value":"u32","parent":{"krate":0,"index":8942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8958},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834330,"byte_end":10834342,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"MilliSeconds","qualname":"::time::MilliSeconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" Time unit\n","sig":null,"attributes":[{"value":"/ Time unit","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834259,"byte_end":10834272,"line_start":23,"line_end":23,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":8960},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834343,"byte_end":10834350,"line_start":25,"line_end":25,"column_start":25,"column_end":32},"name":"0","qualname":"::time::MilliSeconds::0","value":"u32","parent":{"krate":0,"index":8958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":849},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834432,"byte_end":10834438,"line_start":28,"line_end":28,"column_start":11,"column_end":17},"name":"U32Ext","qualname":"::time::U32Ext","value":"U32Ext","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"decl_id":null,"docs":" Extension trait that adds convenience methods to the `u32` type\n","sig":null,"attributes":[{"value":"/ Extension trait that adds convenience methods to the `u32` type","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834354,"byte_end":10834421,"line_start":27,"line_end":27,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834470,"byte_end":10834473,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"bps","qualname":"::time::U32Ext::bps","value":"pub fn bps(Self) -> Bps","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" Wrap in `Bps`\n","sig":null,"attributes":[{"value":"/ Wrap in `Bps`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834445,"byte_end":10834462,"line_start":29,"line_end":29,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834520,"byte_end":10834522,"line_start":33,"line_end":33,"column_start":8,"column_end":10},"name":"hz","qualname":"::time::U32Ext::hz","value":"pub fn hz(Self) -> Hertz","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" Wrap in `Hertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `Hertz`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834493,"byte_end":10834512,"line_start":32,"line_end":32,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834575,"byte_end":10834578,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"khz","qualname":"::time::U32Ext::khz","value":"pub fn khz(Self) -> KiloHertz","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" Wrap in `KiloHertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `KiloHertz`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834544,"byte_end":10834567,"line_start":35,"line_end":35,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834635,"byte_end":10834638,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"mhz","qualname":"::time::U32Ext::mhz","value":"pub fn mhz(Self) -> MegaHertz","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" Wrap in `MegaHertz`\n","sig":null,"attributes":[{"value":"/ Wrap in `MegaHertz`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834604,"byte_end":10834627,"line_start":38,"line_end":38,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834698,"byte_end":10834700,"line_start":42,"line_end":42,"column_start":8,"column_end":10},"name":"ms","qualname":"::time::U32Ext::ms","value":"pub fn ms(Self) -> MilliSeconds","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" Wrap in `MilliSeconds`\n","sig":null,"attributes":[{"value":"/ Wrap in `MilliSeconds`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10834664,"byte_end":10834690,"line_start":41,"line_end":41,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8974},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835452,"byte_end":10835461,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"MonoTimer","qualname":"::time::MonoTimer","value":"MonoTimer {  }","parent":null,"children":[{"krate":0,"index":8975}],"decl_id":null,"docs":" A monotonic nondecreasing timer\n","sig":null,"attributes":[{"value":"/ A monotonic nondecreasing timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835382,"byte_end":10835417,"line_start":85,"line_end":85,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835557,"byte_end":10835560,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<MonoTimer>::new","value":"pub fn new(DWT, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Monotonic` timer\n","sig":null,"attributes":[{"value":"/ Creates a new `Monotonic` timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835510,"byte_end":10835545,"line_start":92,"line_end":92,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835882,"byte_end":10835891,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"frequency","qualname":"<MonoTimer>::frequency","value":"pub fn frequency(Self) -> Hertz","parent":null,"children":[],"decl_id":null,"docs":" Returns the frequency at which the monotonic timer is operating at\n","sig":null,"attributes":[{"value":"/ Returns the frequency at which the monotonic timer is operating at","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835800,"byte_end":10835870,"line_start":104,"line_end":104,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10836002,"byte_end":10836005,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"now","qualname":"<MonoTimer>::now","value":"pub fn now(Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\"\n","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\"","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835943,"byte_end":10835990,"line_start":109,"line_end":109,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8979},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10836194,"byte_end":10836201,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":8980}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock\n","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10836103,"byte_end":10836159,"line_start":117,"line_end":117,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10836301,"byte_end":10836308,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Ticks elapsed since the `Instant` was created\n","sig":null,"attributes":[{"value":"/ Ticks elapsed since the `Instant` was created","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10836240,"byte_end":10836289,"line_start":124,"line_end":124,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":873},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":10634},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":905},{"krate":0,"index":8984},{"krate":0,"index":8986},{"krate":0,"index":8987},{"krate":0,"index":8996},{"krate":0,"index":9011},{"krate":0,"index":9013},{"krate":0,"index":9014},{"krate":0,"index":9023},{"krate":0,"index":9038},{"krate":0,"index":9040},{"krate":0,"index":9041},{"krate":0,"index":9050},{"krate":0,"index":9065},{"krate":0,"index":9067},{"krate":0,"index":9068},{"krate":0,"index":9077},{"krate":0,"index":9092},{"krate":0,"index":9094},{"krate":0,"index":9095},{"krate":0,"index":9104},{"krate":0,"index":9119},{"krate":0,"index":9121},{"krate":0,"index":9122},{"krate":0,"index":9131},{"krate":0,"index":9146},{"krate":0,"index":9148},{"krate":0,"index":9149},{"krate":0,"index":9158},{"krate":0,"index":9173},{"krate":0,"index":9175},{"krate":0,"index":9176},{"krate":0,"index":9185},{"krate":0,"index":9200},{"krate":0,"index":9202},{"krate":0,"index":9203},{"krate":0,"index":9212},{"krate":0,"index":9227},{"krate":0,"index":9229},{"krate":0,"index":9230},{"krate":0,"index":9239},{"krate":0,"index":9254},{"krate":0,"index":9256},{"krate":0,"index":9257},{"krate":0,"index":9266}],"decl_id":null,"docs":" Timers\n","sig":null,"attributes":[{"value":"/ Timers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10836387,"byte_end":10836397,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":899},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10837749,"byte_end":10837756,"line_start":60,"line_end":60,"column_start":11,"column_end":18},"name":"PclkSrc","qualname":"::timer::PclkSrc","value":"PclkSrc","parent":null,"children":[{"krate":0,"index":900}],"decl_id":null,"docs":" Associated clocks with timers\n","sig":null,"attributes":[{"value":"/ Associated clocks with timers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10837705,"byte_end":10837738,"line_start":59,"line_end":59,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10837824,"byte_end":10837831,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"get_clk","qualname":"::timer::PclkSrc::get_clk","value":"pub fn get_clk(&Clocks) -> Hertz","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Get the current frequency of the associated clock\n","sig":null,"attributes":[{"value":"/ Get the current frequency of the associated clock","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10837763,"byte_end":10837816,"line_start":61,"line_end":61,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":901},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10837893,"byte_end":10837898,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"Timer","qualname":"::timer::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"decl_id":null,"docs":" Hardware timers\n","sig":null,"attributes":[{"value":"/ Hardware timers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10837862,"byte_end":10837881,"line_start":65,"line_end":65,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":906},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10838028,"byte_end":10838034,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Update","qualname":"::timer::Event::Update","value":"Event::Update","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Timer timed out / count down ended\n","sig":null,"attributes":[{"value":"/ Timer timed out / count down ended","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10837985,"byte_end":10838023,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":905},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10837973,"byte_end":10837978,"line_start":72,"line_end":72,"column_start":10,"column_end":15},"name":"Event","qualname":"::timer::Event","value":"pub enum Event {\n\n    /// Timer timed out / count down ended\n    Update,\n}","parent":null,"children":[{"krate":0,"index":906}],"decl_id":null,"docs":" Interrupt events\n","sig":null,"attributes":[{"value":"/ Interrupt events","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10837943,"byte_end":10837963,"line_start":71,"line_end":71,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":8997},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10843365,"byte_end":10843369,"line_start":247,"line_end":247,"column_start":16,"column_end":20},"name":"tim1","qualname":"<Timer<TIM1>>::tim1","value":"pub fn tim1<T>(TIM1, T, Clocks, &mut APB2) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9024},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10843446,"byte_end":10843450,"line_start":251,"line_end":251,"column_start":16,"column_end":20},"name":"tim2","qualname":"<Timer<TIM2>>::tim2","value":"pub fn tim2<T>(TIM2, T, Clocks, &mut APB1) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9051},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10843527,"byte_end":10843531,"line_start":255,"line_end":255,"column_start":16,"column_end":20},"name":"tim3","qualname":"<Timer<TIM3>>::tim3","value":"pub fn tim3<T>(TIM3, T, Clocks, &mut APB1) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9078},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10843608,"byte_end":10843612,"line_start":259,"line_end":259,"column_start":16,"column_end":20},"name":"tim4","qualname":"<Timer<TIM4>>::tim4","value":"pub fn tim4<T>(TIM4, T, Clocks, &mut APB1) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9105},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10843689,"byte_end":10843693,"line_start":263,"line_end":263,"column_start":16,"column_end":20},"name":"tim6","qualname":"<Timer<TIM6>>::tim6","value":"pub fn tim6<T>(TIM6, T, Clocks, &mut APB1) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9132},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10843770,"byte_end":10843774,"line_start":267,"line_end":267,"column_start":16,"column_end":20},"name":"tim7","qualname":"<Timer<TIM7>>::tim7","value":"pub fn tim7<T>(TIM7, T, Clocks, &mut APB1) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9159},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10843851,"byte_end":10843855,"line_start":271,"line_end":271,"column_start":16,"column_end":20},"name":"tim8","qualname":"<Timer<TIM8>>::tim8","value":"pub fn tim8<T>(TIM8, T, Clocks, &mut APB2) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9186},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10843933,"byte_end":10843938,"line_start":275,"line_end":275,"column_start":17,"column_end":22},"name":"tim15","qualname":"<Timer<TIM15>>::tim15","value":"pub fn tim15<T>(TIM15, T, Clocks, &mut APB2) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9213},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10844018,"byte_end":10844023,"line_start":279,"line_end":279,"column_start":17,"column_end":22},"name":"tim16","qualname":"<Timer<TIM16>>::tim16","value":"pub fn tim16<T>(TIM16, T, Clocks, &mut APB2) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9240},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10844103,"byte_end":10844108,"line_start":283,"line_end":283,"column_start":17,"column_end":22},"name":"tim17","qualname":"<Timer<TIM17>>::tim17","value":"pub fn tim17<T>(TIM17, T, Clocks, &mut APB2) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":9267},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10844188,"byte_end":10844193,"line_start":287,"line_end":287,"column_start":17,"column_end":22},"name":"tim20","qualname":"<Timer<TIM20>>::tim20","value":"pub fn tim20<T>(TIM20, T, Clocks, &mut APB2) -> Self where T: Into<Hertz>","parent":null,"children":[],"decl_id":null,"docs":" Configures a TIM peripheral as a periodic count down timer\n","sig":null,"attributes":[{"value":"/ Configures a TIM peripheral as a periodic count down timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/timer.rs","byte_start":10840422,"byte_end":10840484,"line_start":138,"line_end":138,"column_start":17,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adc","qualname":"::adc","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":10636},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":54},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":9281},{"krate":0,"index":9288},{"krate":0,"index":9287},{"krate":0,"index":9284},{"krate":0,"index":9285},{"krate":0,"index":9290},{"krate":0,"index":9304},{"krate":0,"index":9303},{"krate":0,"index":9300},{"krate":0,"index":9301},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":9306},{"krate":0,"index":9309},{"krate":0,"index":9312},{"krate":0,"index":9315},{"krate":0,"index":9318},{"krate":0,"index":9321},{"krate":0,"index":9324},{"krate":0,"index":9327},{"krate":0,"index":9330},{"krate":0,"index":9333},{"krate":0,"index":9336},{"krate":0,"index":9339},{"krate":0,"index":9342},{"krate":0,"index":9345},{"krate":0,"index":9348},{"krate":0,"index":9351},{"krate":0,"index":9354},{"krate":0,"index":9357},{"krate":0,"index":9360},{"krate":0,"index":9363},{"krate":0,"index":9366},{"krate":0,"index":9369},{"krate":0,"index":9372},{"krate":0,"index":9375},{"krate":0,"index":9378},{"krate":0,"index":9381},{"krate":0,"index":9384},{"krate":0,"index":9387},{"krate":0,"index":9390},{"krate":0,"index":9393},{"krate":0,"index":9396},{"krate":0,"index":9399},{"krate":0,"index":9402},{"krate":0,"index":9405},{"krate":0,"index":9408},{"krate":0,"index":9411},{"krate":0,"index":9414},{"krate":0,"index":9417},{"krate":0,"index":9420},{"krate":0,"index":9423},{"krate":0,"index":9426},{"krate":0,"index":9429},{"krate":0,"index":9432},{"krate":0,"index":9435},{"krate":0,"index":9438},{"krate":0,"index":9441},{"krate":0,"index":9444},{"krate":0,"index":9447},{"krate":0,"index":9450},{"krate":0,"index":9453},{"krate":0,"index":9456},{"krate":0,"index":9464},{"krate":0,"index":9510},{"krate":0,"index":9460},{"krate":0,"index":9515},{"krate":0,"index":9561},{"krate":0,"index":9566},{"krate":0,"index":9574},{"krate":0,"index":9620},{"krate":0,"index":9570},{"krate":0,"index":9625},{"krate":0,"index":9671}],"decl_id":null,"docs":" API for the ADC (Analog to Digital Converter)","sig":null,"attributes":[{"value":"cfg(feature = \"stm32f303\")","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4989,"byte_end":5018,"line_start":194,"line_end":194,"column_start":1,"column_end":30}},{"value":"/ API for the ADC (Analog to Digital Converter)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":5434,"byte_end":5483,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":5484,"byte_end":5487,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":5488,"byte_end":5502,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":5503,"byte_end":5506,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Check out [examles/adc.rs].","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":5507,"byte_end":5538,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":5539,"byte_end":5542,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ It can be built for the STM32F3Discovery running","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":5543,"byte_end":5595,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/ `cargo build --example adc --features=stm32f303xc`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":5596,"byte_end":5650,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":5651,"byte_end":5654,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [examples/adc.rs]: https://github.com/stm32-rs/stm32f3xx-hal/blob/v0.6.0/examples/adc.rs","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":5655,"byte_end":5747,"line_start":10,"line_end":10,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":48},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6484,"byte_end":6487,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"Adc","qualname":"::adc::Adc","value":"Adc { rb }","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" Analog Digital Converter Peripheral\n","sig":null,"attributes":[{"value":"/ Analog Digital Converter Peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6274,"byte_end":6313,"line_start":37,"line_end":37,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":50},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6524,"byte_end":6526,"line_start":42,"line_end":42,"column_start":9,"column_end":11},"name":"rb","qualname":"::adc::Adc::rb","value":"ADC","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" ADC Register\n","sig":null,"attributes":[{"value":"/ ADC Register","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6499,"byte_end":6515,"line_start":41,"line_end":41,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":55},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6932,"byte_end":6935,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"T_1","qualname":"::adc::SampleTime::T_1","value":"SampleTime::T_1","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" 1.5 ADC clock cycles\n","sig":null,"attributes":[{"value":"/ 1.5 ADC clock cycles","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6903,"byte_end":6927,"line_start":55,"line_end":55,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":57},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6970,"byte_end":6973,"line_start":58,"line_end":58,"column_start":5,"column_end":8},"name":"T_2","qualname":"::adc::SampleTime::T_2","value":"SampleTime::T_2","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" 2.5 ADC clock cycles\n","sig":null,"attributes":[{"value":"/ 2.5 ADC clock cycles","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6941,"byte_end":6965,"line_start":57,"line_end":57,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":59},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7008,"byte_end":7011,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"T_4","qualname":"::adc::SampleTime::T_4","value":"SampleTime::T_4","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" 4.5 ADC clock cycles\n","sig":null,"attributes":[{"value":"/ 4.5 ADC clock cycles","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6979,"byte_end":7003,"line_start":59,"line_end":59,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":61},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7046,"byte_end":7049,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"name":"T_7","qualname":"::adc::SampleTime::T_7","value":"SampleTime::T_7","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" 7.5 ADC clock cycles\n","sig":null,"attributes":[{"value":"/ 7.5 ADC clock cycles","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7017,"byte_end":7041,"line_start":61,"line_end":61,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":63},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7085,"byte_end":7089,"line_start":64,"line_end":64,"column_start":5,"column_end":9},"name":"T_19","qualname":"::adc::SampleTime::T_19","value":"SampleTime::T_19","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" 19.5 ADC clock cycles\n","sig":null,"attributes":[{"value":"/ 19.5 ADC clock cycles","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7055,"byte_end":7080,"line_start":63,"line_end":63,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":65},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7125,"byte_end":7129,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"T_61","qualname":"::adc::SampleTime::T_61","value":"SampleTime::T_61","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" 61.5 ADC clock cycles\n","sig":null,"attributes":[{"value":"/ 61.5 ADC clock cycles","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7095,"byte_end":7120,"line_start":65,"line_end":65,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":67},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7166,"byte_end":7171,"line_start":68,"line_end":68,"column_start":5,"column_end":10},"name":"T_181","qualname":"::adc::SampleTime::T_181","value":"SampleTime::T_181","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" 181.5 ADC clock cycles\n","sig":null,"attributes":[{"value":"/ 181.5 ADC clock cycles","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7135,"byte_end":7161,"line_start":67,"line_end":67,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":69},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7208,"byte_end":7213,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"name":"T_601","qualname":"::adc::SampleTime::T_601","value":"SampleTime::T_601","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" 601.5 ADC clock cycles\n","sig":null,"attributes":[{"value":"/ 601.5 ADC clock cycles","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7177,"byte_end":7203,"line_start":69,"line_end":69,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":54},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6886,"byte_end":6896,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"SampleTime","qualname":"::adc::SampleTime","value":"pub enum SampleTime {\n\n    /// 1.5 ADC clock cycles\n    T_1,\n\n    /// 2.5 ADC clock cycles\n    T_2,\n\n    /// 4.5 ADC clock cycles\n    T_4,\n\n    /// 7.5 ADC clock cycles\n    T_7,\n\n    /// 19.5 ADC clock cycles\n    T_19,\n\n    /// 61.5 ADC clock cycles\n    T_61,\n\n    /// 181.5 ADC clock cycles\n    T_181,\n\n    /// 601.5 ADC clock cycles\n    T_601,\n}","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69}],"decl_id":null,"docs":" ADC sampling time","sig":null,"attributes":[{"value":"/ ADC sampling time","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6619,"byte_end":6640,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6641,"byte_end":6644,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Each channel can be sampled with a different sample time.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6645,"byte_end":6706,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/ There is always an overhead of 13 ADC clock cycles.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6707,"byte_end":6762,"line_start":51,"line_end":51,"column_start":1,"column_end":56}},{"value":"/ E.g. For Sampletime T_19 the total conversion time (in ADC clock cycles) is","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6763,"byte_end":6842,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ 13 + 19 = 32 ADC Clock Cycles","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":6843,"byte_end":6876,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9282},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7940,"byte_end":7947,"line_start":101,"line_end":101,"column_start":5,"column_end":12},"name":"OneShot","qualname":"::adc::OperationMode::OneShot","value":"OperationMode::OneShot","parent":{"krate":0,"index":9281},"children":[],"decl_id":null,"docs":" OneShot Mode\n","sig":null,"attributes":[{"value":"/ OneShot Mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7919,"byte_end":7935,"line_start":100,"line_end":100,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":9281},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7899,"byte_end":7912,"line_start":99,"line_end":99,"column_start":10,"column_end":23},"name":"OperationMode","qualname":"::adc::OperationMode","value":"pub enum OperationMode {\n\n    /// OneShot Mode\n    OneShot,\n}","parent":null,"children":[{"krate":0,"index":9282}],"decl_id":null,"docs":" ADC operation mode\n","sig":null,"attributes":[{"value":"/ ADC operation mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7812,"byte_end":7834,"line_start":97,"line_end":97,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9291},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8248,"byte_end":8256,"line_start":111,"line_end":111,"column_start":5,"column_end":13},"name":"SYNCDIV1","qualname":"::adc::CkMode::SYNCDIV1","value":"CkMode::SYNCDIV1","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":" Use AHB clock rcc_hclk3. In this case rcc_hclk must equal sys_d1cpre_ck\n","sig":null,"attributes":[{"value":"/ Use AHB clock rcc_hclk3. In this case rcc_hclk must equal sys_d1cpre_ck","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8168,"byte_end":8243,"line_start":110,"line_end":110,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9294},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8311,"byte_end":8319,"line_start":113,"line_end":113,"column_start":5,"column_end":13},"name":"SYNCDIV2","qualname":"::adc::CkMode::SYNCDIV2","value":"CkMode::SYNCDIV2","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":" Use AHB clock rcc_hclk3 divided by 2\n","sig":null,"attributes":[{"value":"/ Use AHB clock rcc_hclk3 divided by 2","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8266,"byte_end":8306,"line_start":112,"line_end":112,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9297},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8374,"byte_end":8382,"line_start":115,"line_end":115,"column_start":5,"column_end":13},"name":"SYNCDIV4","qualname":"::adc::CkMode::SYNCDIV4","value":"CkMode::SYNCDIV4","parent":{"krate":0,"index":9290},"children":[],"decl_id":null,"docs":" Use AHB clock rcc_hclk3 divided by 4\n","sig":null,"attributes":[{"value":"/ Use AHB clock rcc_hclk3 divided by 4","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8329,"byte_end":8369,"line_start":114,"line_end":114,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":9290},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8041,"byte_end":8047,"line_start":107,"line_end":107,"column_start":10,"column_end":16},"name":"CkMode","qualname":"::adc::CkMode","value":"pub enum CkMode {\n\n    /// Use AHB clock rcc_hclk3. In this case rcc_hclk must equal sys_d1cpre_ck\n    SYNCDIV1 = ,\n\n    /// Use AHB clock rcc_hclk3 divided by 2\n    SYNCDIV2 = ,\n\n    /// Use AHB clock rcc_hclk3 divided by 4\n    SYNCDIV4 = ,\n}","parent":null,"children":[{"krate":0,"index":9291},{"krate":0,"index":9294},{"krate":0,"index":9297}],"decl_id":null,"docs":" ADC CkMode\n","sig":null,"attributes":[{"value":"/ ADC CkMode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7986,"byte_end":8000,"line_start":105,"line_end":105,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":80},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8976,"byte_end":8981,"line_start":139,"line_end":139,"column_start":5,"column_end":10},"name":"Right","qualname":"::adc::Align::Right","value":"Align::Right","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Right alignment of output data\n","sig":null,"attributes":[{"value":"/ Right alignment of output data","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8937,"byte_end":8971,"line_start":138,"line_end":138,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":82},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":9025,"byte_end":9029,"line_start":141,"line_end":141,"column_start":5,"column_end":9},"name":"Left","qualname":"::adc::Align::Left","value":"Align::Left","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Left alignment of output data\n","sig":null,"attributes":[{"value":"/ Left alignment of output data","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8987,"byte_end":9020,"line_start":140,"line_end":140,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":79},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8925,"byte_end":8930,"line_start":137,"line_end":137,"column_start":10,"column_end":15},"name":"Align","qualname":"::adc::Align","value":"pub enum Align {\n\n    /// Right alignment of output data\n    Right,\n\n    /// Left alignment of output data\n    Left,\n}","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":82}],"decl_id":null,"docs":" ADC data register alignment\n","sig":null,"attributes":[{"value":"/ ADC data register alignment","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8884,"byte_end":8915,"line_start":136,"line_end":136,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":9465},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":23110,"byte_end":23114,"line_start":555,"line_end":555,"column_start":12,"column_end":16},"name":"adc1","qualname":"<Adc<ADC1>>::adc1","value":"pub fn adc1(ADC1, &mut ADC1_2, &mut AHB, CkMode, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Init a new ADC","sig":null,"attributes":[{"value":"/ Init a new ADC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12636,"byte_end":12654,"line_start":303,"line_end":303,"column_start":17,"column_end":35}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12671,"byte_end":12674,"line_start":304,"line_end":304,"column_start":17,"column_end":20}},{"value":"/ Enables the clock, performs a calibration and enables the ADC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12691,"byte_end":12756,"line_start":305,"line_end":305,"column_start":17,"column_end":82}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12773,"byte_end":12776,"line_start":306,"line_end":306,"column_start":17,"column_end":20}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12793,"byte_end":12805,"line_start":307,"line_end":307,"column_start":17,"column_end":29}},{"value":"/ If one of the following occurs:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12822,"byte_end":12857,"line_start":308,"line_end":308,"column_start":17,"column_end":52}},{"value":"/ * the clocksetting is not well defined.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12874,"byte_end":12917,"line_start":309,"line_end":309,"column_start":17,"column_end":60}},{"value":"/ * the clock was already enabled with a different setting","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12934,"byte_end":12994,"line_start":310,"line_end":310,"column_start":17,"column_end":77}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":13011,"byte_end":13014,"line_start":311,"line_end":311,"column_start":17,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9516},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":23128,"byte_end":23132,"line_start":556,"line_end":556,"column_start":12,"column_end":16},"name":"adc2","qualname":"<Adc<ADC2>>::adc2","value":"pub fn adc2(ADC2, &mut ADC1_2, &mut AHB, CkMode, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Init a new ADC","sig":null,"attributes":[{"value":"/ Init a new ADC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12636,"byte_end":12654,"line_start":303,"line_end":303,"column_start":17,"column_end":35}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12671,"byte_end":12674,"line_start":304,"line_end":304,"column_start":17,"column_end":20}},{"value":"/ Enables the clock, performs a calibration and enables the ADC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12691,"byte_end":12756,"line_start":305,"line_end":305,"column_start":17,"column_end":82}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12773,"byte_end":12776,"line_start":306,"line_end":306,"column_start":17,"column_end":20}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12793,"byte_end":12805,"line_start":307,"line_end":307,"column_start":17,"column_end":29}},{"value":"/ If one of the following occurs:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12822,"byte_end":12857,"line_start":308,"line_end":308,"column_start":17,"column_end":52}},{"value":"/ * the clocksetting is not well defined.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12874,"byte_end":12917,"line_start":309,"line_end":309,"column_start":17,"column_end":60}},{"value":"/ * the clock was already enabled with a different setting","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12934,"byte_end":12994,"line_start":310,"line_end":310,"column_start":17,"column_end":77}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":13011,"byte_end":13014,"line_start":311,"line_end":311,"column_start":17,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9575},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":23292,"byte_end":23296,"line_start":565,"line_end":565,"column_start":12,"column_end":16},"name":"adc3","qualname":"<Adc<ADC3>>::adc3","value":"pub fn adc3(ADC3, &mut ADC3_4, &mut AHB, CkMode, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Init a new ADC","sig":null,"attributes":[{"value":"/ Init a new ADC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12636,"byte_end":12654,"line_start":303,"line_end":303,"column_start":17,"column_end":35}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12671,"byte_end":12674,"line_start":304,"line_end":304,"column_start":17,"column_end":20}},{"value":"/ Enables the clock, performs a calibration and enables the ADC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12691,"byte_end":12756,"line_start":305,"line_end":305,"column_start":17,"column_end":82}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12773,"byte_end":12776,"line_start":306,"line_end":306,"column_start":17,"column_end":20}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12793,"byte_end":12805,"line_start":307,"line_end":307,"column_start":17,"column_end":29}},{"value":"/ If one of the following occurs:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12822,"byte_end":12857,"line_start":308,"line_end":308,"column_start":17,"column_end":52}},{"value":"/ * the clocksetting is not well defined.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12874,"byte_end":12917,"line_start":309,"line_end":309,"column_start":17,"column_end":60}},{"value":"/ * the clock was already enabled with a different setting","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12934,"byte_end":12994,"line_start":310,"line_end":310,"column_start":17,"column_end":77}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":13011,"byte_end":13014,"line_start":311,"line_end":311,"column_start":17,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9626},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":23310,"byte_end":23314,"line_start":566,"line_end":566,"column_start":12,"column_end":16},"name":"adc4","qualname":"<Adc<ADC4>>::adc4","value":"pub fn adc4(ADC4, &mut ADC3_4, &mut AHB, CkMode, Clocks) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Init a new ADC","sig":null,"attributes":[{"value":"/ Init a new ADC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12636,"byte_end":12654,"line_start":303,"line_end":303,"column_start":17,"column_end":35}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12671,"byte_end":12674,"line_start":304,"line_end":304,"column_start":17,"column_end":20}},{"value":"/ Enables the clock, performs a calibration and enables the ADC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12691,"byte_end":12756,"line_start":305,"line_end":305,"column_start":17,"column_end":82}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12773,"byte_end":12776,"line_start":306,"line_end":306,"column_start":17,"column_end":20}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12793,"byte_end":12805,"line_start":307,"line_end":307,"column_start":17,"column_end":29}},{"value":"/ If one of the following occurs:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12822,"byte_end":12857,"line_start":308,"line_end":308,"column_start":17,"column_end":52}},{"value":"/ * the clocksetting is not well defined.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12874,"byte_end":12917,"line_start":309,"line_end":309,"column_start":17,"column_end":60}},{"value":"/ * the clock was already enabled with a different setting","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":12934,"byte_end":12994,"line_start":310,"line_end":310,"column_start":17,"column_end":77}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":13011,"byte_end":13014,"line_start":311,"line_end":311,"column_start":17,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":92},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dma","qualname":"::dma","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":119},{"krate":0,"index":129},{"krate":0,"index":134},{"krate":0,"index":141},{"krate":0,"index":146},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":180},{"krate":0,"index":217},{"krate":0,"index":9676},{"krate":0,"index":9763},{"krate":0,"index":222},{"krate":0,"index":9828},{"krate":0,"index":9829},{"krate":0,"index":9830},{"krate":0,"index":9831},{"krate":0,"index":9832},{"krate":0,"index":9833}],"decl_id":null,"docs":" Direct memory access (DMA) controller","sig":null,"attributes":[{"value":"cfg(any(feature = \"stm32f302\", feature = \"stm32f303\"))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":5032,"byte_end":5089,"line_start":196,"line_end":196,"column_start":1,"column_end":58}},{"value":"/ Direct memory access (DMA) controller","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":23320,"byte_end":23361,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":23362,"byte_end":23365,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Currently DMA is only supported for STM32F303 MCUs.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":23366,"byte_end":23421,"line_start":3,"line_end":3,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":23422,"byte_end":23425,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ An example how to use DMA for serial, can be found at [examples/serial_dma.rs]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":23426,"byte_end":23508,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":23509,"byte_end":23512,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [examples/serial_dma.rs]: https://github.com/stm32-rs/stm32f3xx-hal/blob/v0.6.0/examples/serial_dma.rs","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":23513,"byte_end":23619,"line_start":7,"line_end":7,"column_start":1,"column_end":107}}]},{"kind":"Trait","id":{"krate":0,"index":108},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24069,"byte_end":24075,"line_start":26,"line_end":26,"column_start":11,"column_end":17},"name":"DmaExt","qualname":"::dma::DmaExt","value":"DmaExt","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"decl_id":null,"docs":" Extension trait to split a DMA peripheral into independent channels\n","sig":null,"attributes":[{"value":"/ Extension trait to split a DMA peripheral into independent channels","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":23987,"byte_end":24058,"line_start":25,"line_end":25,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":109},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24126,"byte_end":24134,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"Channels","qualname":"::dma::DmaExt::Channels","value":"type Channels;","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" The type to split the DMA into\n","sig":null,"attributes":[{"value":"/ The type to split the DMA into","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24082,"byte_end":24116,"line_start":27,"line_end":27,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24192,"byte_end":24197,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"split","qualname":"::dma::DmaExt::split","value":"pub fn split(Self, &mut AHB) -> Self::Channels","parent":{"krate":0,"index":108},"children":[],"decl_id":null,"docs":" Split the DMA into independent channels\n","sig":null,"attributes":[{"value":"/ Split the DMA into independent channels","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24141,"byte_end":24184,"line_start":30,"line_end":30,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":111},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24289,"byte_end":24295,"line_start":35,"line_end":35,"column_start":11,"column_end":17},"name":"Target","qualname":"::dma::Target","value":"Target","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"decl_id":null,"docs":" Trait implemented by DMA targets.\n","sig":null,"attributes":[{"value":"/ Trait implemented by DMA targets.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24241,"byte_end":24278,"line_start":34,"line_end":34,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24338,"byte_end":24348,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"enable_dma","qualname":"::dma::Target::enable_dma","value":"pub fn enable_dma(&mut Self)","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Enable DMA on the target\n","sig":null,"attributes":[{"value":"/ Enable DMA on the target","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24302,"byte_end":24330,"line_start":36,"line_end":36,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24404,"byte_end":24415,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"disable_dma","qualname":"::dma::Target::disable_dma","value":"pub fn disable_dma(&mut Self)","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Disable DMA on the target\n","sig":null,"attributes":[{"value":"/ Disable DMA on the target","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24367,"byte_end":24396,"line_start":38,"line_end":38,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":114},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24485,"byte_end":24493,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"Transfer","qualname":"::dma::Transfer","value":"Transfer {  }","parent":null,"children":[{"krate":0,"index":118}],"decl_id":null,"docs":" An in-progress one-shot DMA transfer\n","sig":null,"attributes":[{"value":"/ An in-progress one-shot DMA transfer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24433,"byte_end":24473,"line_start":42,"line_end":42,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24806,"byte_end":24817,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"start_write","qualname":"<Transfer<B, C, T>>::start_write","value":"pub fn start_write(B, C, T) -> Self where B: WriteBuffer + 'static,\nT: OnChannel<C>","parent":null,"children":[],"decl_id":null,"docs":" Start a DMA write transfer.","sig":null,"attributes":[{"value":"/ Start a DMA write transfer.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24673,"byte_end":24704,"line_start":49,"line_end":49,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24709,"byte_end":24712,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24717,"byte_end":24729,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24734,"byte_end":24737,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Panics if the buffer is longer than 65535 words.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24742,"byte_end":24794,"line_start":53,"line_end":53,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":25913,"byte_end":25923,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"start_read","qualname":"<Transfer<B, C, T>>::start_read","value":"pub fn start_read(B, C, T) -> Self where B: ReadBuffer + 'static,\nT: OnChannel<C>","parent":null,"children":[],"decl_id":null,"docs":" Start a DMA read transfer.","sig":null,"attributes":[{"value":"/ Start a DMA read transfer.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":25781,"byte_end":25811,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":25816,"byte_end":25819,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":25824,"byte_end":25836,"line_start":78,"line_end":78,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":25841,"byte_end":25844,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Panics if the buffer is longer than 65535 words.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":25849,"byte_end":25901,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":27562,"byte_end":27573,"line_start":130,"line_end":130,"column_start":12,"column_end":23},"name":"is_complete","qualname":"<Transfer<B, C, T>>::is_complete","value":"pub fn is_complete(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this transfer complete?\n","sig":null,"attributes":[{"value":"/ Is this transfer complete?","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":27520,"byte_end":27550,"line_start":129,"line_end":129,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":27791,"byte_end":27795,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"stop","qualname":"<Transfer<B, C, T>>::stop","value":"pub fn stop(Self) -> (B, C, T)","parent":null,"children":[],"decl_id":null,"docs":" Stop this transfer and return ownership over its parts\n","sig":null,"attributes":[{"value":"/ Stop this transfer and return ownership over its parts","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":27721,"byte_end":27779,"line_start":135,"line_end":135,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28051,"byte_end":28055,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"wait","qualname":"<Transfer<B, C, T>>::wait","value":"pub fn wait(Self) -> (B, C, T)","parent":null,"children":[],"decl_id":null,"docs":" Block until this transfer is done and return ownership over its parts\n","sig":null,"attributes":[{"value":"/ Block until this transfer is done and return ownership over its parts","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":27966,"byte_end":28039,"line_start":143,"line_end":143,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":147},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28786,"byte_end":28792,"line_start":179,"line_end":179,"column_start":5,"column_end":11},"name":"Enable","qualname":"::dma::Increment::Enable","value":"Increment::Enable","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Enable increment\n","sig":null,"attributes":[{"value":"/ Enable increment","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28761,"byte_end":28781,"line_start":178,"line_end":178,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":149},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28824,"byte_end":28831,"line_start":181,"line_end":181,"column_start":5,"column_end":12},"name":"Disable","qualname":"::dma::Increment::Disable","value":"Increment::Disable","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Disable increment\n","sig":null,"attributes":[{"value":"/ Disable increment","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28798,"byte_end":28819,"line_start":180,"line_end":180,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":146},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28745,"byte_end":28754,"line_start":177,"line_end":177,"column_start":10,"column_end":19},"name":"Increment","qualname":"::dma::Increment","value":"pub enum Increment {\n\n    /// Enable increment\n    Enable,\n\n    /// Disable increment\n    Disable,\n}","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":149}],"decl_id":null,"docs":" DMA address increment mode\n","sig":null,"attributes":[{"value":"/ DMA address increment mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28705,"byte_end":28735,"line_start":176,"line_end":176,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":154},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29124,"byte_end":29127,"line_start":196,"line_end":196,"column_start":5,"column_end":8},"name":"Low","qualname":"::dma::Priority::Low","value":"Priority::Low","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" Low\n","sig":null,"attributes":[{"value":"/ Low","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29112,"byte_end":29119,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":156},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29148,"byte_end":29154,"line_start":198,"line_end":198,"column_start":5,"column_end":11},"name":"Medium","qualname":"::dma::Priority::Medium","value":"Priority::Medium","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" Medium\n","sig":null,"attributes":[{"value":"/ Medium","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29133,"byte_end":29143,"line_start":197,"line_end":197,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":158},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29173,"byte_end":29177,"line_start":200,"line_end":200,"column_start":5,"column_end":9},"name":"High","qualname":"::dma::Priority::High","value":"Priority::High","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" High\n","sig":null,"attributes":[{"value":"/ High","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29160,"byte_end":29168,"line_start":199,"line_end":199,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":160},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29201,"byte_end":29209,"line_start":202,"line_end":202,"column_start":5,"column_end":13},"name":"VeryHigh","qualname":"::dma::Priority::VeryHigh","value":"Priority::VeryHigh","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" Very high\n","sig":null,"attributes":[{"value":"/ Very high","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29183,"byte_end":29196,"line_start":201,"line_end":201,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":153},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29097,"byte_end":29105,"line_start":194,"line_end":194,"column_start":10,"column_end":18},"name":"Priority","qualname":"::dma::Priority","value":"pub enum Priority {\n\n    /// Low\n    Low,\n\n    /// Medium\n    Medium,\n\n    /// High\n    High,\n\n    /// Very high\n    VeryHigh,\n}","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160}],"decl_id":null,"docs":" Channel priority level\n","sig":null,"attributes":[{"value":"/ Channel priority level","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29061,"byte_end":29087,"line_start":193,"line_end":193,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":165},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29607,"byte_end":29617,"line_start":219,"line_end":219,"column_start":5,"column_end":15},"name":"FromMemory","qualname":"::dma::Direction::FromMemory","value":"Direction::FromMemory","parent":{"krate":0,"index":164},"children":[],"decl_id":null,"docs":" From memory to peripheral\n","sig":null,"attributes":[{"value":"/ From memory to peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29573,"byte_end":29602,"line_start":218,"line_end":218,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":167},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29657,"byte_end":29671,"line_start":221,"line_end":221,"column_start":5,"column_end":19},"name":"FromPeripheral","qualname":"::dma::Direction::FromPeripheral","value":"Direction::FromPeripheral","parent":{"krate":0,"index":164},"children":[],"decl_id":null,"docs":" From peripheral to memory\n","sig":null,"attributes":[{"value":"/ From peripheral to memory","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29623,"byte_end":29652,"line_start":220,"line_end":220,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":164},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29557,"byte_end":29566,"line_start":217,"line_end":217,"column_start":10,"column_end":19},"name":"Direction","qualname":"::dma::Direction","value":"pub enum Direction {\n\n    /// From memory to peripheral\n    FromMemory,\n\n    /// From peripheral to memory\n    FromPeripheral,\n}","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":167}],"decl_id":null,"docs":" DMA transfer direction\n","sig":null,"attributes":[{"value":"/ DMA transfer direction","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29521,"byte_end":29547,"line_start":216,"line_end":216,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":172},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29995,"byte_end":30007,"line_start":236,"line_end":236,"column_start":5,"column_end":17},"name":"HalfTransfer","qualname":"::dma::Event::HalfTransfer","value":"Event::HalfTransfer","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" First half of a transfer is done\n","sig":null,"attributes":[{"value":"/ First half of a transfer is done","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29954,"byte_end":29990,"line_start":235,"line_end":235,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":174},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30042,"byte_end":30058,"line_start":238,"line_end":238,"column_start":5,"column_end":21},"name":"TransferComplete","qualname":"::dma::Event::TransferComplete","value":"Event::TransferComplete","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" Transfer is complete\n","sig":null,"attributes":[{"value":"/ Transfer is complete","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30013,"byte_end":30037,"line_start":237,"line_end":237,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":176},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30098,"byte_end":30111,"line_start":240,"line_end":240,"column_start":5,"column_end":18},"name":"TransferError","qualname":"::dma::Event::TransferError","value":"Event::TransferError","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" A transfer error occurred\n","sig":null,"attributes":[{"value":"/ A transfer error occurred","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30064,"byte_end":30093,"line_start":239,"line_end":239,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":178},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30158,"byte_end":30161,"line_start":242,"line_end":242,"column_start":5,"column_end":8},"name":"Any","qualname":"::dma::Event::Any","value":"Event::Any","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" Any of the above events occurred\n","sig":null,"attributes":[{"value":"/ Any of the above events occurred","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30117,"byte_end":30153,"line_start":241,"line_end":241,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":171},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29942,"byte_end":29947,"line_start":234,"line_end":234,"column_start":10,"column_end":15},"name":"Event","qualname":"::dma::Event","value":"pub enum Event {\n\n    /// First half of a transfer is done\n    HalfTransfer,\n\n    /// Transfer is complete\n    TransferComplete,\n\n    /// A transfer error occurred\n    TransferError,\n\n    /// Any of the above events occurred\n    Any,\n}","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178}],"decl_id":null,"docs":" DMA events\n","sig":null,"attributes":[{"value":"/ DMA events","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29918,"byte_end":29932,"line_start":233,"line_end":233,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":180},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30218,"byte_end":30225,"line_start":246,"line_end":246,"column_start":11,"column_end":18},"name":"Channel","qualname":"::dma::Channel","value":"Channel: private::Channel","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":206},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216}],"decl_id":null,"docs":" Trait implemented by all DMA channels\n","sig":null,"attributes":[{"value":"/ Trait implemented by all DMA channels","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30166,"byte_end":30207,"line_start":245,"line_end":245,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30308,"byte_end":30322,"line_start":248,"line_end":248,"column_start":8,"column_end":22},"name":"event_occurred","qualname":"::dma::Channel::event_occurred","value":"pub fn event_occurred(&Self, Event) -> bool","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Is the interrupt flag for the given event set?\n","sig":null,"attributes":[{"value":"/ Is the interrupt flag for the given event set?","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30250,"byte_end":30300,"line_start":247,"line_end":247,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30687,"byte_end":30698,"line_start":257,"line_end":257,"column_start":8,"column_end":19},"name":"clear_event","qualname":"::dma::Channel::clear_event","value":"pub fn clear_event(&mut Self, Event)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Clear the interrupt flag for the given event.","sig":null,"attributes":[{"value":"/ Clear the interrupt flag for the given event.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30358,"byte_end":30407,"line_start":250,"line_end":250,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30412,"byte_end":30415,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Passing `Event::Any` clears all interrupt flags.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30420,"byte_end":30472,"line_start":252,"line_end":252,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30477,"byte_end":30480,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Note that the the global interrupt flag is not automatically cleared","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30485,"byte_end":30557,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ even when all other flags are cleared. The only way to clear it is to","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30562,"byte_end":30635,"line_start":255,"line_end":255,"column_start":5,"column_end":78}},{"value":"/ call this method with `Event::Any`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30640,"byte_end":30679,"line_start":256,"line_end":256,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30828,"byte_end":30833,"line_start":261,"line_end":261,"column_start":8,"column_end":13},"name":"reset","qualname":"::dma::Channel::reset","value":"pub fn reset(&mut Self)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Reset the control registers of this channel.\n This stops any ongoing transfers.\n","sig":null,"attributes":[{"value":"/ Reset the control registers of this channel.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30730,"byte_end":30778,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/ This stops any ongoing transfers.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30783,"byte_end":30820,"line_start":260,"line_end":260,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31426,"byte_end":31448,"line_start":282,"line_end":282,"column_start":15,"column_end":37},"name":"set_peripheral_address","qualname":"::dma::Channel::set_peripheral_address","value":"pub unsafe fn set_peripheral_address(&mut Self, u32, Increment)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the base address of the peripheral data register from/to which the\n data will be read/written.","sig":null,"attributes":[{"value":"/ Set the base address of the peripheral data register from/to which the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31020,"byte_end":31094,"line_start":269,"line_end":269,"column_start":5,"column_end":79}},{"value":"/ data will be read/written.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31099,"byte_end":31129,"line_start":270,"line_end":270,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31134,"byte_end":31137,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Only call this method on disabled channels.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31142,"byte_end":31189,"line_start":272,"line_end":272,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31194,"byte_end":31197,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31202,"byte_end":31214,"line_start":274,"line_end":274,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31219,"byte_end":31222,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Panics if this channel is enabled.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31227,"byte_end":31265,"line_start":276,"line_end":276,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31270,"byte_end":31273,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31278,"byte_end":31290,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31295,"byte_end":31298,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure the given address is the address of a peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31303,"byte_end":31375,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ register that supports DMA.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31380,"byte_end":31411,"line_start":281,"line_end":281,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32082,"byte_end":32100,"line_start":302,"line_end":302,"column_start":15,"column_end":33},"name":"set_memory_address","qualname":"::dma::Channel::set_memory_address","value":"pub unsafe fn set_memory_address(&mut Self, u32, Increment)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the base address of the memory area from/to which\n the data will be read/written.","sig":null,"attributes":[{"value":"/ Set the base address of the memory area from/to which","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31669,"byte_end":31726,"line_start":289,"line_end":289,"column_start":5,"column_end":62}},{"value":"/ the data will be read/written.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31731,"byte_end":31765,"line_start":290,"line_end":290,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31770,"byte_end":31773,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Only call this method on disabled channels.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31778,"byte_end":31825,"line_start":292,"line_end":292,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31830,"byte_end":31833,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31838,"byte_end":31850,"line_start":294,"line_end":294,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31855,"byte_end":31858,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Panics if this channel is enabled.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31863,"byte_end":31901,"line_start":296,"line_end":296,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31906,"byte_end":31909,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31914,"byte_end":31926,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31931,"byte_end":31934,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Callers must ensure the given address is a valid memory address","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":31939,"byte_end":32006,"line_start":300,"line_end":300,"column_start":5,"column_end":72}},{"value":"/ that will remain valid as long as at is used by DMA.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32011,"byte_end":32067,"line_start":301,"line_end":301,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32505,"byte_end":32524,"line_start":316,"line_end":316,"column_start":8,"column_end":27},"name":"set_transfer_length","qualname":"::dma::Channel::set_transfer_length","value":"pub fn set_transfer_length(&mut Self, u16)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the number of words to transfer.","sig":null,"attributes":[{"value":"/ Set the number of words to transfer.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32321,"byte_end":32361,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32366,"byte_end":32369,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Only call this method on disabled channels.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32374,"byte_end":32421,"line_start":311,"line_end":311,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32426,"byte_end":32429,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32434,"byte_end":32446,"line_start":313,"line_end":313,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32451,"byte_end":32454,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Panics if this channel is enabled.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32459,"byte_end":32497,"line_start":315,"line_end":315,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32785,"byte_end":32798,"line_start":327,"line_end":327,"column_start":8,"column_end":21},"name":"set_word_size","qualname":"::dma::Channel::set_word_size","value":"pub fn set_word_size<W>(&mut Self)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the word size.","sig":null,"attributes":[{"value":"/ Set the word size.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32657,"byte_end":32679,"line_start":322,"line_end":322,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32684,"byte_end":32687,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32692,"byte_end":32704,"line_start":324,"line_end":324,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32709,"byte_end":32712,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Panics if the word size is not one of 8, 16, or 32 bits.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":32717,"byte_end":32777,"line_start":326,"line_end":326,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":33229,"byte_end":33247,"line_start":344,"line_end":344,"column_start":8,"column_end":26},"name":"set_priority_level","qualname":"::dma::Channel::set_priority_level","value":"pub fn set_priority_level(&mut Self, Priority)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the priority level of this channel\n","sig":null,"attributes":[{"value":"/ Set the priority level of this channel","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":33179,"byte_end":33221,"line_start":343,"line_end":343,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":33420,"byte_end":33433,"line_start":350,"line_end":350,"column_start":8,"column_end":21},"name":"set_direction","qualname":"::dma::Channel::set_direction","value":"pub fn set_direction(&mut Self, Direction)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the transfer direction\n","sig":null,"attributes":[{"value":"/ Set the transfer direction","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":33382,"byte_end":33412,"line_start":349,"line_end":349,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":33626,"byte_end":33632,"line_start":356,"line_end":356,"column_start":8,"column_end":14},"name":"listen","qualname":"::dma::Channel::listen","value":"pub fn listen(&mut Self, Event)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Enable the interrupt for the given event\n","sig":null,"attributes":[{"value":"/ Enable the interrupt for the given event","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":33574,"byte_end":33618,"line_start":355,"line_end":355,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":34182,"byte_end":34190,"line_start":371,"line_end":371,"column_start":8,"column_end":16},"name":"unlisten","qualname":"::dma::Channel::unlisten","value":"pub fn unlisten(&mut Self, Event)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Disable the interrupt for the given event\n","sig":null,"attributes":[{"value":"/ Disable the interrupt for the given event","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":34129,"byte_end":34174,"line_start":370,"line_end":370,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":34721,"byte_end":34727,"line_start":386,"line_end":386,"column_start":8,"column_end":14},"name":"enable","qualname":"::dma::Channel::enable","value":"pub fn enable(&mut Self)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Start a transfer\n","sig":null,"attributes":[{"value":"/ Start a transfer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":34693,"byte_end":34713,"line_start":385,"line_end":385,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":34881,"byte_end":34888,"line_start":392,"line_end":392,"column_start":8,"column_end":15},"name":"disable","qualname":"::dma::Channel::disable","value":"pub fn disable(&mut Self)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Stop the current transfer\n","sig":null,"attributes":[{"value":"/ Stop the current transfer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":34844,"byte_end":34873,"line_start":391,"line_end":391,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":35028,"byte_end":35038,"line_start":397,"line_end":397,"column_start":8,"column_end":18},"name":"is_enabled","qualname":"::dma::Channel::is_enabled","value":"pub fn is_enabled(&Self) -> bool","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Is there a transfer in progress on this channel?\n","sig":null,"attributes":[{"value":"/ Is there a transfer in progress on this channel?","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":34968,"byte_end":35020,"line_start":396,"line_end":396,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":219},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":35207,"byte_end":35214,"line_start":406,"line_end":406,"column_start":15,"column_end":22},"name":"Channel","qualname":"::dma::private::Channel","value":"Channel","parent":null,"children":[{"krate":0,"index":220}],"decl_id":null,"docs":" Channel methods private to this module\n","sig":null,"attributes":[{"value":"/ Channel methods private to this module","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":35150,"byte_end":35192,"line_start":405,"line_end":405,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":35283,"byte_end":35285,"line_start":408,"line_end":408,"column_start":12,"column_end":14},"name":"ch","qualname":"::dma::private::Channel::ch","value":"pub fn ch(&Self) -> &pac::dma1::CH","parent":{"krate":0,"index":219},"children":[],"decl_id":null,"docs":" Return the register block for this channel\n","sig":null,"attributes":[{"value":"/ Return the register block for this channel","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":35225,"byte_end":35271,"line_start":407,"line_end":407,"column_start":9,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":222},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":39985,"byte_end":39994,"line_start":551,"line_end":551,"column_start":18,"column_end":27},"name":"OnChannel","qualname":"::dma::OnChannel","value":"OnChannel<C: Channel>: Target","parent":null,"children":[],"decl_id":null,"docs":" Marker trait mapping DMA targets to their channels","sig":null,"attributes":[{"value":"/ Marker trait mapping DMA targets to their channels","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":39804,"byte_end":39858,"line_start":545,"line_end":545,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":39859,"byte_end":39862,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":39863,"byte_end":39875,"line_start":547,"line_end":547,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":39876,"byte_end":39879,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ `C` must be the correct DMA channel for the peripheral implementing","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":39880,"byte_end":39951,"line_start":549,"line_end":549,"column_start":1,"column_end":72}},{"value":"/ this trait.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":39952,"byte_end":39967,"line_start":550,"line_end":550,"column_start":1,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":225},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"usb","qualname":"::usb","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":10712},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":251}],"decl_id":null,"docs":" USB peripheral","sig":null,"attributes":[{"value":"cfg(all(feature = \"stm32-usbd\",\n          any(feature = \"stm32f303xb\", feature = \"stm32f303xc\", feature =\n              \"stm32f303xd\", feature = \"stm32f303xe\",)))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":5103,"byte_end":5292,"line_start":198,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ USB peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40423,"byte_end":40441,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40442,"byte_end":40445,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Requires the `stm32-usbd` feature and one of the `stm32f303x*` features.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40446,"byte_end":40522,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40523,"byte_end":40526,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See [examples/usb_serial.rs] for a usage example.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40527,"byte_end":40580,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40581,"byte_end":40584,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [examples/usb_serial.rs]: https://github.com/stm32-rs/stm32f3xx-hal/blob/v0.6.0/examples/usb_serial.rs","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40585,"byte_end":40691,"line_start":7,"line_end":7,"column_start":1,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":235},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40954,"byte_end":40964,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"Peripheral","qualname":"::usb::Peripheral","value":"Peripheral { usb, pin_dm, pin_dp }","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":" USB Peripheral","sig":null,"attributes":[{"value":"/ USB Peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40843,"byte_end":40861,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40862,"byte_end":40865,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Constructs the peripheral, which","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40866,"byte_end":40902,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/ than gets passed to the [`UsbBus`].","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40903,"byte_end":40942,"line_start":19,"line_end":19,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":236},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":41002,"byte_end":41005,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"usb","qualname":"::usb::Peripheral::usb","value":"stm32f3::stm32f303::USB","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" USB Register Block\n","sig":null,"attributes":[{"value":"/ USB Register Block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":40971,"byte_end":40993,"line_start":21,"line_end":21,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":237},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":41045,"byte_end":41051,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"pin_dm","qualname":"::usb::Peripheral::pin_dm","value":"gpio::gpioa::PA11<gpio::AF14>","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Data Negativ Pin\n","sig":null,"attributes":[{"value":"/ Data Negativ Pin","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":41016,"byte_end":41036,"line_start":23,"line_end":23,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":238},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":41098,"byte_end":41104,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"pin_dp","qualname":"::usb::Peripheral::pin_dp","value":"gpio::gpioa::PA12<gpio::AF14>","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Data Positiv Pin\n","sig":null,"attributes":[{"value":"/ Data Positiv Pin","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":41069,"byte_end":41089,"line_start":25,"line_end":25,"column_start":5,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":251},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":42376,"byte_end":42386,"line_start":65,"line_end":65,"column_start":10,"column_end":20},"name":"UsbBusType","qualname":"::usb::UsbBusType","value":"UsbBus<Peripheral>","parent":null,"children":[],"decl_id":null,"docs":" Type of the UsbBus","sig":null,"attributes":[{"value":"/ Type of the UsbBus","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":42234,"byte_end":42256,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":42257,"byte_end":42260,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ As this MCU family has only USB peripheral,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":42261,"byte_end":42308,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/ this is the only possible concrete type construction.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":42309,"byte_end":42366,"line_start":64,"line_end":64,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":252},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watchdog","qualname":"::watchdog","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":10724},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":281},{"krate":0,"index":286}],"decl_id":null,"docs":" Watchdog","sig":null,"attributes":[{"value":"cfg(feature = \"device-selected\")","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":5307,"byte_end":5342,"line_start":209,"line_end":209,"column_start":1,"column_end":36}},{"value":"/ Watchdog","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42410,"byte_end":42422,"line_start":1,"line_end":1,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42423,"byte_end":42426,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A usage example of the watchdog can be found at [examples/can.rs]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42427,"byte_end":42496,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42497,"byte_end":42500,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [examples/can.rs]: https://github.com/stm32-rs/stm32f3xx-hal/blob/v0.6.0/examples/can.rs","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42501,"byte_end":42593,"line_start":5,"line_end":5,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":263},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42837,"byte_end":42856,"line_start":17,"line_end":17,"column_start":12,"column_end":31},"name":"IndependentWatchDog","qualname":"::watchdog::IndependentWatchDog","value":"IndependentWatchDog {  }","parent":null,"children":[{"krate":0,"index":264}],"decl_id":null,"docs":" Independent Watchdog Peripheral\n","sig":null,"attributes":[{"value":"/ Independent Watchdog Peripheral","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42790,"byte_end":42825,"line_start":16,"line_end":16,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":43131,"byte_end":43134,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<IndependentWatchDog>::new","value":"pub fn new(IWDG) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`IndependentWatchDog`] without starting it.","sig":null,"attributes":[{"value":"/ Creates a new [`IndependentWatchDog`] without starting it.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42909,"byte_end":42971,"line_start":22,"line_end":22,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42976,"byte_end":42979,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Call [`start`](WatchdogEnable::start) to start the watchdog.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42984,"byte_end":43048,"line_start":24,"line_end":24,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":43053,"byte_end":43056,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ See [`WatchdogEnable`] and [`Watchdog`] for more info.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":43061,"byte_end":43119,"line_start":26,"line_end":26,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":43286,"byte_end":43299,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"stop_on_debug","qualname":"<IndependentWatchDog>::stop_on_debug","value":"pub fn stop_on_debug(&Self, &DBGMCU, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set the watchdog to stop when a breakpoint is hit while debugging\n","sig":null,"attributes":[{"value":"/ Set the watchdog to stop when a breakpoint is hit while debugging","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":43205,"byte_end":43274,"line_start":31,"line_end":31,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":44045,"byte_end":44053,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"interval","qualname":"<IndependentWatchDog>::interval","value":"pub fn interval(&Self) -> MilliSeconds","parent":null,"children":[],"decl_id":null,"docs":" Returns the interval in ms\n","sig":null,"attributes":[{"value":"/ Returns the interval in ms","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":44003,"byte_end":44033,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638365,"byte_end":10638370,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638721,"byte_end":10638726,"line_start":31,"line_end":31,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638833,"byte_end":10638838,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638947,"byte_end":10638952,"line_start":43,"line_end":43,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10639061,"byte_end":10639066,"line_start":49,"line_end":49,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10639429,"byte_end":10639434,"line_start":65,"line_end":65,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10639542,"byte_end":10639547,"line_start":71,"line_end":71,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10639896,"byte_end":10639901,"line_start":11,"line_end":11,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10640168,"byte_end":10640171,"line_start":30,"line_end":30,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700173,"byte_end":10700177,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700222,"byte_end":10700225,"line_start":55,"line_end":55,"column_start":37,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700270,"byte_end":10700273,"line_start":56,"line_end":56,"column_start":37,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700318,"byte_end":10700322,"line_start":57,"line_end":57,"column_start":37,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700367,"byte_end":10700370,"line_start":58,"line_end":58,"column_start":37,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700415,"byte_end":10700418,"line_start":59,"line_end":59,"column_start":37,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700526,"byte_end":10700529,"line_start":63,"line_end":63,"column_start":45,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700582,"byte_end":10700585,"line_start":64,"line_end":64,"column_start":45,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700728,"byte_end":10700731,"line_start":66,"line_end":66,"column_start":45,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700784,"byte_end":10700788,"line_start":67,"line_end":67,"column_start":45,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700841,"byte_end":10700844,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10702128,"byte_end":10702131,"line_start":112,"line_end":112,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10705104,"byte_end":10705107,"line_start":207,"line_end":207,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10706750,"byte_end":10706753,"line_start":264,"line_end":264,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10709042,"byte_end":10709045,"line_start":335,"line_end":335,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765190,"byte_end":10765193,"line_start":71,"line_end":71,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766343,"byte_end":10766346,"line_start":119,"line_end":119,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767008,"byte_end":10767012,"line_start":144,"line_end":144,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767678,"byte_end":10767682,"line_start":169,"line_end":169,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10769903,"byte_end":10769907,"line_start":241,"line_end":241,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772447,"byte_end":10772451,"line_start":331,"line_end":331,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788204,"byte_end":10788210,"line_start":774,"line_end":774,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790137,"byte_end":10790140,"line_start":26,"line_end":26,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10792393,"byte_end":10792396,"line_start":96,"line_end":96,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802958,"byte_end":10802961,"line_start":49,"line_end":49,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803007,"byte_end":10803010,"line_start":50,"line_end":50,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803056,"byte_end":10803059,"line_start":51,"line_end":51,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803105,"byte_end":10803109,"line_start":52,"line_end":52,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803155,"byte_end":10803158,"line_start":53,"line_end":53,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803204,"byte_end":10803207,"line_start":54,"line_end":54,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803254,"byte_end":10803257,"line_start":56,"line_end":56,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803303,"byte_end":10803306,"line_start":57,"line_end":57,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803352,"byte_end":10803355,"line_start":58,"line_end":58,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803401,"byte_end":10803404,"line_start":59,"line_end":59,"column_start":38,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803451,"byte_end":10803455,"line_start":61,"line_end":61,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803501,"byte_end":10803505,"line_start":62,"line_end":62,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803551,"byte_end":10803555,"line_start":63,"line_end":63,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803753,"byte_end":10803756,"line_start":69,"line_end":69,"column_start":46,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803810,"byte_end":10803813,"line_start":70,"line_end":70,"column_start":46,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803868,"byte_end":10803871,"line_start":72,"line_end":72,"column_start":46,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803925,"byte_end":10803928,"line_start":73,"line_end":73,"column_start":46,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803983,"byte_end":10803986,"line_start":75,"line_end":75,"column_start":46,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804040,"byte_end":10804043,"line_start":76,"line_end":76,"column_start":46,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804097,"byte_end":10804101,"line_start":77,"line_end":77,"column_start":46,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804217,"byte_end":10804221,"line_start":82,"line_end":82,"column_start":46,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804275,"byte_end":10804279,"line_start":83,"line_end":83,"column_start":46,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804333,"byte_end":10804337,"line_start":84,"line_end":84,"column_start":46,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818773,"byte_end":10818776,"line_start":159,"line_end":159,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10819234,"byte_end":10819237,"line_start":175,"line_end":175,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10819876,"byte_end":10819880,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10820701,"byte_end":10820704,"line_start":222,"line_end":222,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10821043,"byte_end":10821047,"line_start":235,"line_end":235,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10821434,"byte_end":10821438,"line_start":249,"line_end":249,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10821878,"byte_end":10821881,"line_start":268,"line_end":268,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10822341,"byte_end":10822344,"line_start":284,"line_end":284,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10822870,"byte_end":10822874,"line_start":301,"line_end":301,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10823464,"byte_end":10823468,"line_start":319,"line_end":319,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10823910,"byte_end":10823913,"line_start":338,"line_end":338,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10824052,"byte_end":10824055,"line_start":341,"line_end":341,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10824682,"byte_end":10824686,"line_start":360,"line_end":360,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825026,"byte_end":10825029,"line_start":368,"line_end":368,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825068,"byte_end":10825072,"line_start":369,"line_end":369,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835075,"byte_end":10835080,"line_start":67,"line_end":67,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835183,"byte_end":10835188,"line_start":73,"line_end":73,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835295,"byte_end":10835304,"line_start":79,"line_end":79,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835494,"byte_end":10835503,"line_start":91,"line_end":91,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10836226,"byte_end":10836233,"line_start":123,"line_end":123,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7235,"byte_end":7245,"line_start":73,"line_end":73,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7350,"byte_end":7360,"line_start":80,"line_end":80,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8408,"byte_end":8414,"line_start":118,"line_end":118,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8575,"byte_end":8583,"line_start":125,"line_end":125,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":9051,"byte_end":9056,"line_start":144,"line_end":144,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":9137,"byte_end":9144,"line_start":150,"line_end":150,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24649,"byte_end":24657,"line_start":48,"line_end":48,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28184,"byte_end":28192,"line_start":151,"line_end":151,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28501,"byte_end":28514,"line_start":166,"line_end":166,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28865,"byte_end":28871,"line_start":184,"line_end":184,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29242,"byte_end":29246,"line_start":205,"line_end":205,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29705,"byte_end":29710,"line_start":224,"line_end":224,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":41142,"byte_end":41152,"line_start":29,"line_end":29,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":41187,"byte_end":41197,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42883,"byte_end":42902,"line_start":21,"line_end":21,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":45117,"byte_end":45136,"line_start":95,"line_end":95,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":45342,"byte_end":45361,"line_start":105,"line_end":105,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4730,"byte_end":4735,"line_start":180,"line_end":180,"column_start":17,"column_end":22},"ref_id":{"krate":0,"index":289}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4753,"byte_end":4758,"line_start":181,"line_end":181,"column_start":17,"column_end":22},"ref_id":{"krate":0,"index":315}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4776,"byte_end":4780,"line_start":182,"line_end":182,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":329}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4798,"byte_end":4801,"line_start":183,"line_end":183,"column_start":17,"column_end":20},"ref_id":{"krate":0,"index":391}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4819,"byte_end":4826,"line_start":184,"line_end":184,"column_start":17,"column_end":24},"ref_id":{"krate":0,"index":472}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4844,"byte_end":4847,"line_start":185,"line_end":185,"column_start":17,"column_end":20},"ref_id":{"krate":0,"index":484}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4865,"byte_end":4868,"line_start":186,"line_end":186,"column_start":17,"column_end":20},"ref_id":{"krate":0,"index":543}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4886,"byte_end":4889,"line_start":187,"line_end":187,"column_start":17,"column_end":20},"ref_id":{"krate":0,"index":628}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4907,"byte_end":4913,"line_start":188,"line_end":188,"column_start":17,"column_end":23},"ref_id":{"krate":0,"index":711}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4931,"byte_end":4934,"line_start":189,"line_end":189,"column_start":17,"column_end":20},"ref_id":{"krate":0,"index":769}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4952,"byte_end":4956,"line_start":190,"line_end":190,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":846}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":4974,"byte_end":4979,"line_start":191,"line_end":191,"column_start":17,"column_end":22},"ref_id":{"krate":0,"index":873}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":5027,"byte_end":5030,"line_start":195,"line_end":195,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":5098,"byte_end":5101,"line_start":197,"line_end":197,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":92}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":5301,"byte_end":5304,"line_start":207,"line_end":207,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":225}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/lib.rs","byte_start":5351,"byte_end":5359,"line_start":210,"line_end":210,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":252}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638365,"byte_end":10638370,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638721,"byte_end":10638726,"line_start":31,"line_end":31,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":297},"to":{"krate":4,"index":20}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638833,"byte_end":10638838,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":297},"to":{"krate":4,"index":20}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10638947,"byte_end":10638952,"line_start":43,"line_end":43,"column_start":22,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":297},"to":{"krate":4,"index":20}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10639061,"byte_end":10639066,"line_start":49,"line_end":49,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":297},"to":{"krate":4,"index":23}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10639429,"byte_end":10639434,"line_start":65,"line_end":65,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":297},"to":{"krate":4,"index":23}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/delay.rs","byte_start":10639542,"byte_end":10639547,"line_start":71,"line_end":71,"column_start":22,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":297},"to":{"krate":4,"index":23}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10639896,"byte_end":10639901,"line_start":11,"line_end":11,"column_start":19,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":8,"index":7779},"to":{"krate":0,"index":319}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/flash.rs","byte_start":10640168,"byte_end":10640171,"line_start":30,"line_end":30,"column_start":6,"column_end":9},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700173,"byte_end":10700177,"line_start":54,"line_end":54,"column_start":37,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2285},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700222,"byte_end":10700225,"line_start":55,"line_end":55,"column_start":37,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3409},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700270,"byte_end":10700273,"line_start":56,"line_end":56,"column_start":37,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3466},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700318,"byte_end":10700322,"line_start":57,"line_end":57,"column_start":37,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2261},"to":{"krate":0,"index":420}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700367,"byte_end":10700370,"line_start":58,"line_end":58,"column_start":37,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3439},"to":{"krate":0,"index":420}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700415,"byte_end":10700418,"line_start":59,"line_end":59,"column_start":37,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3496},"to":{"krate":0,"index":420}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700526,"byte_end":10700529,"line_start":63,"line_end":63,"column_start":45,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2117},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700582,"byte_end":10700585,"line_start":64,"line_end":64,"column_start":45,"column_end":48},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":7521},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700728,"byte_end":10700731,"line_start":66,"line_end":66,"column_start":45,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":7542},"to":{"krate":0,"index":418}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700784,"byte_end":10700788,"line_start":67,"line_end":67,"column_start":45,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2147},"to":{"krate":0,"index":420}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10700841,"byte_end":10700844,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":7512},"to":{"krate":0,"index":420}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10702128,"byte_end":10702131,"line_start":112,"line_end":112,"column_start":21,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10705104,"byte_end":10705107,"line_start":207,"line_end":207,"column_start":26,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":428},"to":{"krate":4,"index":27}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10706750,"byte_end":10706753,"line_start":264,"line_end":264,"column_start":27,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":428},"to":{"krate":4,"index":30}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10709042,"byte_end":10709045,"line_start":335,"line_end":335,"column_start":31,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":428},"to":{"krate":4,"index":37}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/i2c.rs","byte_start":10712150,"byte_end":10712155,"line_start":434,"line_end":434,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":2281},"to":{"krate":0,"index":468}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10765190,"byte_end":10765193,"line_start":71,"line_end":71,"column_start":17,"column_end":20},"kind":{"Impl":{"id":24}},"from":{"krate":8,"index":8330},"to":{"krate":0,"index":552}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10766343,"byte_end":10766346,"line_start":119,"line_end":119,"column_start":6,"column_end":9},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767008,"byte_end":10767012,"line_start":144,"line_end":144,"column_start":6,"column_end":10},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10767678,"byte_end":10767682,"line_start":169,"line_end":169,"column_start":6,"column_end":10},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10769903,"byte_end":10769907,"line_start":241,"line_end":241,"column_start":6,"column_end":10},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10772447,"byte_end":10772451,"line_start":331,"line_end":331,"column_start":6,"column_end":10},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":8602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rcc.rs","byte_start":10788204,"byte_end":10788210,"line_start":774,"line_end":774,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":8612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10790137,"byte_end":10790140,"line_start":26,"line_end":26,"column_start":6,"column_end":9},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/rtc.rs","byte_start":10792393,"byte_end":10792396,"line_start":96,"line_end":96,"column_start":15,"column_end":18},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":644},"to":{"krate":26,"index":11}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10802958,"byte_end":10802961,"line_start":49,"line_end":49,"column_start":38,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2117},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803007,"byte_end":10803010,"line_start":50,"line_end":50,"column_start":38,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3409},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803056,"byte_end":10803059,"line_start":51,"line_end":51,"column_start":38,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4614},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803105,"byte_end":10803109,"line_start":52,"line_end":52,"column_start":38,"column_end":42},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2147},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803155,"byte_end":10803158,"line_start":53,"line_end":53,"column_start":38,"column_end":41},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3439},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803204,"byte_end":10803207,"line_start":54,"line_end":54,"column_start":38,"column_end":41},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4623},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803254,"byte_end":10803257,"line_start":56,"line_end":56,"column_start":38,"column_end":41},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1961},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803303,"byte_end":10803306,"line_start":57,"line_end":57,"column_start":38,"column_end":41},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3313},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803352,"byte_end":10803355,"line_start":58,"line_end":58,"column_start":38,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1982},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803401,"byte_end":10803404,"line_start":59,"line_end":59,"column_start":38,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3346},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803451,"byte_end":10803455,"line_start":61,"line_end":61,"column_start":38,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3523},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803501,"byte_end":10803505,"line_start":62,"line_end":62,"column_start":38,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4704},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803551,"byte_end":10803555,"line_start":63,"line_end":63,"column_start":38,"column_end":42},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4722},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803753,"byte_end":10803756,"line_start":69,"line_end":69,"column_start":46,"column_end":49},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6856},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803810,"byte_end":10803813,"line_start":70,"line_end":70,"column_start":46,"column_end":49},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":6871},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803868,"byte_end":10803871,"line_start":72,"line_end":72,"column_start":46,"column_end":49},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5783},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803925,"byte_end":10803928,"line_start":73,"line_end":73,"column_start":46,"column_end":49},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5792},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10803983,"byte_end":10803986,"line_start":75,"line_end":75,"column_start":46,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":5816},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804040,"byte_end":10804043,"line_start":76,"line_end":76,"column_start":46,"column_end":49},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5825},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804097,"byte_end":10804101,"line_start":77,"line_end":77,"column_start":46,"column_end":50},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":7027},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804217,"byte_end":10804221,"line_start":82,"line_end":82,"column_start":46,"column_end":50},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2261},"to":{"krate":0,"index":740}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804275,"byte_end":10804279,"line_start":83,"line_end":83,"column_start":46,"column_end":50},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2285},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/serial.rs","byte_start":10804333,"byte_end":10804337,"line_start":84,"line_end":84,"column_start":46,"column_end":50},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3538},"to":{"krate":0,"index":742}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10818773,"byte_end":10818776,"line_start":159,"line_end":159,"column_start":30,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2021},"to":{"krate":0,"index":811}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10819234,"byte_end":10819237,"line_start":175,"line_end":175,"column_start":30,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3313},"to":{"krate":0,"index":811}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10819876,"byte_end":10819880,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3574},"to":{"krate":0,"index":811}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10820701,"byte_end":10820704,"line_start":222,"line_end":222,"column_start":30,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":7557},"to":{"krate":0,"index":811}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10821043,"byte_end":10821047,"line_start":235,"line_end":235,"column_start":30,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":7569},"to":{"krate":0,"index":811}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10821434,"byte_end":10821438,"line_start":249,"line_end":249,"column_start":30,"column_end":34},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4704},"to":{"krate":0,"index":811}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10821878,"byte_end":10821881,"line_start":268,"line_end":268,"column_start":31,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2036},"to":{"krate":0,"index":813}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10822341,"byte_end":10822344,"line_start":284,"line_end":284,"column_start":31,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3346},"to":{"krate":0,"index":813}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10822870,"byte_end":10822874,"line_start":301,"line_end":301,"column_start":31,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3592},"to":{"krate":0,"index":813}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10823464,"byte_end":10823468,"line_start":319,"line_end":319,"column_start":31,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4722},"to":{"krate":0,"index":813}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10823910,"byte_end":10823913,"line_start":338,"line_end":338,"column_start":31,"column_end":34},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2063},"to":{"krate":0,"index":815}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10824052,"byte_end":10824055,"line_start":341,"line_end":341,"column_start":31,"column_end":34},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3379},"to":{"krate":0,"index":815}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10824682,"byte_end":10824686,"line_start":360,"line_end":360,"column_start":31,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3613},"to":{"krate":0,"index":815}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825026,"byte_end":10825029,"line_start":368,"line_end":368,"column_start":31,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3379},"to":{"krate":0,"index":815}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/spi.rs","byte_start":10825068,"byte_end":10825072,"line_start":369,"line_end":369,"column_start":31,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4740},"to":{"krate":0,"index":815}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835075,"byte_end":10835080,"line_start":67,"line_end":67,"column_start":26,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":8910},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835183,"byte_end":10835188,"line_start":73,"line_end":73,"column_start":26,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":8910},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835295,"byte_end":10835304,"line_start":79,"line_end":79,"column_start":26,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":8926},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10835494,"byte_end":10835503,"line_start":91,"line_end":91,"column_start":6,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":8974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/time.rs","byte_start":10836226,"byte_end":10836233,"line_start":123,"line_end":123,"column_start":6,"column_end":13},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":8979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7235,"byte_end":7245,"line_start":73,"line_end":73,"column_start":18,"column_end":28},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":54},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":7350,"byte_end":7360,"line_start":80,"line_end":80,"column_start":6,"column_end":16},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8408,"byte_end":8414,"line_start":118,"line_end":118,"column_start":18,"column_end":24},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":9290},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":8575,"byte_end":8583,"line_start":125,"line_end":125,"column_start":23,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":8,"index":67523},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":9051,"byte_end":9056,"line_start":144,"line_end":144,"column_start":18,"column_end":23},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":79},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/adc.rs","byte_start":9137,"byte_end":9144,"line_start":150,"line_end":150,"column_start":22,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":8,"index":67049},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":24649,"byte_end":24657,"line_start":48,"line_end":48,"column_start":32,"column_end":40},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28184,"byte_end":28192,"line_start":151,"line_end":151,"column_start":41,"column_end":49},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":114},"to":{"krate":1,"index":2305}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28501,"byte_end":28514,"line_start":166,"line_end":166,"column_start":32,"column_end":45},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":28865,"byte_end":28871,"line_start":184,"line_end":184,"column_start":30,"column_end":36},"kind":{"Impl":{"id":138}},"from":{"krate":8,"index":57284},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29242,"byte_end":29246,"line_start":205,"line_end":205,"column_start":29,"column_end":33},"kind":{"Impl":{"id":139}},"from":{"krate":8,"index":57317},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":29705,"byte_end":29710,"line_start":224,"line_end":224,"column_start":30,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":8,"index":57254},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":30236,"byte_end":30243,"line_start":246,"line_end":246,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":219},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/dma.rs","byte_start":40008,"byte_end":40014,"line_start":551,"line_end":551,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":111},"to":{"krate":0,"index":222}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":41142,"byte_end":41152,"line_start":29,"line_end":29,"column_start":22,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":235},"to":{"krate":1,"index":2093}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/usb.rs","byte_start":41187,"byte_end":41197,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":235},"to":{"krate":22,"index":1522}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":42883,"byte_end":42902,"line_start":21,"line_end":21,"column_start":6,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":45117,"byte_end":45136,"line_start":95,"line_end":95,"column_start":25,"column_end":44},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":263},"to":{"krate":4,"index":284}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/stm32f3xx-hal-0.6.1/src/watchdog.rs","byte_start":45342,"byte_end":45361,"line_start":105,"line_end":105,"column_start":19,"column_end":38},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":263},"to":{"krate":4,"index":282}}]}