{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3","program":"/home/mcrae/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nb","/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"unstable\"","-C","metadata=f025830ab97efee9","-C","extra-filename=-f025830ab97efee9","--out-dir","/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/mcrae/Code/hermes/target/rls/debug/deps","--extern","nb=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libnb-40fb5ac5c81e2c1e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mcrae/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libnb-f025830ab97efee9.rmeta"},"prelude":{"crate_id":{"name":"nb","disambiguator":[15401273450865999483,13772608842728756265]},"crate_root":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src","external_crates":[{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2184632775997829466,18026496178680965583]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3726307931522043477,4911878782996857177]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8506066526834043935,2338947288633172727]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","num":4,"id":{"name":"nb","disambiguator":[15010377001352867217,15689185407496902103]}}],"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":0,"byte_end":11841,"line_start":1,"line_end":438,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":19},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9807,"byte_end":9812,"line_start":361,"line_end":361,"column_start":14,"column_end":19},"alias_span":null,"name":"block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":20},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9814,"byte_end":9819,"line_start":361,"line_end":361,"column_start":21,"column_end":26},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":5},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9821,"byte_end":9827,"line_start":361,"line_end":361,"column_start":28,"column_end":34},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":0,"byte_end":11841,"line_start":1,"line_end":438,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8}],"decl_id":null,"docs":" Minimal and reusable non-blocking I/O layer","sig":null,"attributes":[{"value":"/ Minimal and reusable non-blocking I/O layer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":0,"byte_end":47,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":48,"byte_end":51,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The ultimate goal of this crate is *code reuse*. With this crate you can","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":52,"byte_end":128,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ write *core* I/O APIs that can then be adapted to operate in either blocking","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":129,"byte_end":209,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ or non-blocking manner. Furthermore those APIs are not tied to a particular","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":210,"byte_end":289,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ asynchronous model and can be adapted to work with the `futures` model or","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":290,"byte_end":367,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ with the `async` / `await` model.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":368,"byte_end":405,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":406,"byte_end":409,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Core idea","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":410,"byte_end":425,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":426,"byte_end":429,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The [`WouldBlock`](enum.Error.html) error variant signals that the operation","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":430,"byte_end":510,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ can't be completed *right now* and would need to block to complete.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":511,"byte_end":582,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ [`WouldBlock`](enum.Error.html) is a special error in the sense that's not","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":583,"byte_end":661,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ *fatal*; the operation can still be completed by retrying again later.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":662,"byte_end":736,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":737,"byte_end":740,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`nb::Result`](type.Result.html) is based on the API of","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":741,"byte_end":800,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ [`std::io::Result`](https://doc.rust-lang.org/std/io/type.Result.html),","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":801,"byte_end":876,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ which has a `WouldBlock` variant in its","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":877,"byte_end":920,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ [`ErrorKind`](https://doc.rust-lang.org/std/io/enum.ErrorKind.html).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":921,"byte_end":993,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":994,"byte_end":997,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ We can map [`WouldBlock`](enum.Error.html) to different blocking and","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":998,"byte_end":1070,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ non-blocking models:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1071,"byte_end":1095,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - In blocking mode: [`WouldBlock`](enum.Error.html) means try again right","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1100,"byte_end":1177,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/   now (i.e. busy wait)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1178,"byte_end":1204,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ - In `futures` mode: [`WouldBlock`](enum.Error.html) means","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1205,"byte_end":1267,"line_start":26,"line_end":26,"column_start":1,"column_end":63}},{"value":"/   [`Async::NotReady`](https://docs.rs/futures)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1268,"byte_end":1318,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ - In `await` mode: [`WouldBlock`](enum.Error.html) means `yield`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1319,"byte_end":1387,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/   (suspend the generator)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1388,"byte_end":1417,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1418,"byte_end":1421,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # How to use this crate","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1422,"byte_end":1449,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1450,"byte_end":1453,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Application specific errors can be put inside the `Other` variant in the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1454,"byte_end":1530,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ [`nb::Error`](enum.Error.html) enum.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1531,"byte_end":1571,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1572,"byte_end":1575,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ So in your API instead of returning `Result<T, MyError>` return","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1576,"byte_end":1643,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"/ `nb::Result<T, MyError>`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1644,"byte_end":1672,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1673,"byte_end":1676,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1677,"byte_end":1684,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ enum MyError {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1685,"byte_end":1703,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/     ThisError,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1704,"byte_end":1722,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/     ThatError,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1723,"byte_end":1741,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/     // ..","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1742,"byte_end":1755,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1756,"byte_end":1761,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1762,"byte_end":1765,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // This is a blocking function, so it returns a normal `Result`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1766,"byte_end":1833,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/ fn before() -> Result<(), MyError> {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1834,"byte_end":1874,"line_start":47,"line_end":47,"column_start":1,"column_end":41}},{"value":"/     // ..","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1875,"byte_end":1888,"line_start":48,"line_end":48,"column_start":1,"column_end":14}},{"value":"/ #   Ok(())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1889,"byte_end":1903,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1904,"byte_end":1909,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1910,"byte_end":1913,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // This is now a potentially (read: *non*) blocking function so it returns `nb::Result`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":1914,"byte_end":2005,"line_start":52,"line_end":52,"column_start":1,"column_end":92}},{"value":"/ // instead of blocking","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2006,"byte_end":2032,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/ fn after() -> nb::Result<(), MyError> {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2033,"byte_end":2076,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/     // ..","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2077,"byte_end":2090,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ #   Ok(())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2091,"byte_end":2105,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2106,"byte_end":2111,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2112,"byte_end":2119,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2120,"byte_end":2123,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ You can use the *never type* (`!`) to signal that some API has no fatal","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2124,"byte_end":2199,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ errors but may block:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2200,"byte_end":2225,"line_start":61,"line_end":61,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2226,"byte_end":2229,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2230,"byte_end":2237,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ #![feature(never_type)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2238,"byte_end":2265,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2266,"byte_end":2269,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // This returns `Ok(())` or `Err(nb::Error::WouldBlock)`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2270,"byte_end":2330,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"/ fn maybe_blocking_api() -> nb::Result<(), !> {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2331,"byte_end":2381,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"/     // ..","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2382,"byte_end":2395,"line_start":68,"line_end":68,"column_start":1,"column_end":14}},{"value":"/ #   Ok(())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2396,"byte_end":2410,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2411,"byte_end":2416,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2417,"byte_end":2424,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2425,"byte_end":2428,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Once your API uses [`nb::Result`](type.Result.html) you can leverage the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2429,"byte_end":2505,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/ [`block!`], [`try_nb!`] and [`await!`] macros to adapt it for blocking","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2506,"byte_end":2580,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ operation, or for non-blocking operation with `futures` or `await`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2581,"byte_end":2652,"line_start":75,"line_end":75,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2653,"byte_end":2656,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ **NOTE** Currently, both `try_nb!` and `await!` are feature gated behind the `unstable` Cargo","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2657,"byte_end":2754,"line_start":77,"line_end":77,"column_start":1,"column_end":98}},{"value":"/ feature.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2755,"byte_end":2767,"line_start":78,"line_end":78,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2768,"byte_end":2771,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`block!`]: macro.block.html","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2772,"byte_end":2804,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ [`try_nb!`]: macro.try_nb.html","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2805,"byte_end":2839,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/ [`await!`]: macro.await.html","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2840,"byte_end":2872,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2873,"byte_end":2876,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2877,"byte_end":2891,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2892,"byte_end":2895,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ## A Core I/O API","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2896,"byte_end":2917,"line_start":86,"line_end":86,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2918,"byte_end":2921,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Imagine the code (crate) below represents a Hardware Abstraction Layer for some microcontroller","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":2922,"byte_end":3021,"line_start":88,"line_end":88,"column_start":1,"column_end":100}},{"value":"/ (or microcontroller family).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3022,"byte_end":3054,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3055,"byte_end":3058,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ *In this and the following examples let's assume for simplicity that peripherals are treated","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3059,"byte_end":3155,"line_start":91,"line_end":91,"column_start":1,"column_end":97}},{"value":"/ as global singletons and that no preemption is possible (i.e. interrupts are disabled).*","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3156,"byte_end":3248,"line_start":92,"line_end":92,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3249,"byte_end":3252,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3253,"byte_end":3260,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ #![feature(never_type)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3261,"byte_end":3288,"line_start":95,"line_end":95,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3289,"byte_end":3292,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ // This is the `hal` crate","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3293,"byte_end":3323,"line_start":97,"line_end":97,"column_start":1,"column_end":31}},{"value":"/ // Note that it doesn't depend on the `futures` crate","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3324,"byte_end":3381,"line_start":98,"line_end":98,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3382,"byte_end":3385,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ extern crate nb;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3386,"byte_end":3406,"line_start":100,"line_end":100,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3407,"byte_end":3410,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ /// An LED","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3411,"byte_end":3425,"line_start":102,"line_end":102,"column_start":1,"column_end":15}},{"value":"/ pub struct Led;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3426,"byte_end":3445,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3446,"byte_end":3449,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ impl Led {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3450,"byte_end":3464,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/     pub fn off(&self) {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3465,"byte_end":3492,"line_start":106,"line_end":106,"column_start":1,"column_end":28}},{"value":"/         // ..","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3493,"byte_end":3510,"line_start":107,"line_end":107,"column_start":1,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3511,"byte_end":3520,"line_start":108,"line_end":108,"column_start":1,"column_end":10}},{"value":"/     pub fn on(&self) {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3521,"byte_end":3547,"line_start":109,"line_end":109,"column_start":1,"column_end":27}},{"value":"/         // ..","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3548,"byte_end":3565,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3566,"byte_end":3575,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3576,"byte_end":3581,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3582,"byte_end":3585,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ /// Serial interface","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3586,"byte_end":3610,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/ pub struct Serial;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3611,"byte_end":3633,"line_start":115,"line_end":115,"column_start":1,"column_end":23}},{"value":"/ pub enum Error {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3634,"byte_end":3654,"line_start":116,"line_end":116,"column_start":1,"column_end":21}},{"value":"/     Overrun,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3655,"byte_end":3671,"line_start":117,"line_end":117,"column_start":1,"column_end":17}},{"value":"/     // ..","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3672,"byte_end":3685,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3686,"byte_end":3691,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3692,"byte_end":3695,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ impl Serial {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3696,"byte_end":3713,"line_start":121,"line_end":121,"column_start":1,"column_end":18}},{"value":"/     /// Reads a single byte from the serial interface","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3714,"byte_end":3771,"line_start":122,"line_end":122,"column_start":1,"column_end":58}},{"value":"/     pub fn read(&self) -> nb::Result<u8, Error> {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3772,"byte_end":3825,"line_start":123,"line_end":123,"column_start":1,"column_end":54}},{"value":"/         // ..","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3826,"byte_end":3843,"line_start":124,"line_end":124,"column_start":1,"column_end":18}},{"value":"/ #       Ok(0)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3844,"byte_end":3861,"line_start":125,"line_end":125,"column_start":1,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3862,"byte_end":3871,"line_start":126,"line_end":126,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3872,"byte_end":3875,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     /// Writes a single byte to the serial interface","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3876,"byte_end":3932,"line_start":128,"line_end":128,"column_start":1,"column_end":57}},{"value":"/     pub fn write(&self, byte: u8) -> nb::Result<(), Error> {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3933,"byte_end":3997,"line_start":129,"line_end":129,"column_start":1,"column_end":65}},{"value":"/         // ..","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":3998,"byte_end":4015,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/ #       Ok(())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4016,"byte_end":4034,"line_start":131,"line_end":131,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4035,"byte_end":4044,"line_start":132,"line_end":132,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4045,"byte_end":4050,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4051,"byte_end":4054,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ /// A timer used for timeouts","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4055,"byte_end":4088,"line_start":135,"line_end":135,"column_start":1,"column_end":34}},{"value":"/ pub struct Timer;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4089,"byte_end":4110,"line_start":136,"line_end":136,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4111,"byte_end":4114,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ impl Timer {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4115,"byte_end":4131,"line_start":138,"line_end":138,"column_start":1,"column_end":17}},{"value":"/     /// Waits until the timer times out","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4132,"byte_end":4175,"line_start":139,"line_end":139,"column_start":1,"column_end":44}},{"value":"/     pub fn wait(&self) -> nb::Result<(), !> {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4176,"byte_end":4225,"line_start":140,"line_end":140,"column_start":1,"column_end":50}},{"value":"/         //^ NOTE the `!` indicates that this operation can block but has no","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4226,"byte_end":4305,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/         //  other form of error","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4306,"byte_end":4341,"line_start":142,"line_end":142,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4342,"byte_end":4345,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/         // ..","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4346,"byte_end":4363,"line_start":144,"line_end":144,"column_start":1,"column_end":18}},{"value":"/ #       Ok(())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4364,"byte_end":4382,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4383,"byte_end":4392,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4393,"byte_end":4398,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4399,"byte_end":4406,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4407,"byte_end":4410,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ## Blocking mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4411,"byte_end":4431,"line_start":150,"line_end":150,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4432,"byte_end":4435,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Turn on an LED for one second and *then* loops back serial data.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4436,"byte_end":4504,"line_start":152,"line_end":152,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4505,"byte_end":4508,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4509,"byte_end":4516,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # #![feature(never_type)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4517,"byte_end":4546,"line_start":155,"line_end":155,"column_start":1,"column_end":30}},{"value":"/ #[macro_use(block)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4547,"byte_end":4570,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/ extern crate nb;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4571,"byte_end":4591,"line_start":157,"line_end":157,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4592,"byte_end":4595,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ use hal::{Led, Serial, Timer};","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4596,"byte_end":4630,"line_start":159,"line_end":159,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4631,"byte_end":4634,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4635,"byte_end":4650,"line_start":161,"line_end":161,"column_start":1,"column_end":16}},{"value":"/     // Turn the LED on for one second","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4651,"byte_end":4692,"line_start":162,"line_end":162,"column_start":1,"column_end":42}},{"value":"/     Led.on();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4693,"byte_end":4710,"line_start":163,"line_end":163,"column_start":1,"column_end":18}},{"value":"/     block!(Timer.wait()).unwrap(); // NOTE(unwrap) E = !","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4711,"byte_end":4771,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/     Led.off();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4772,"byte_end":4790,"line_start":165,"line_end":165,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4791,"byte_end":4794,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/     // Serial interface loopback","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4795,"byte_end":4831,"line_start":167,"line_end":167,"column_start":1,"column_end":37}},{"value":"/     # return;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4832,"byte_end":4849,"line_start":168,"line_end":168,"column_start":1,"column_end":18}},{"value":"/     loop {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4850,"byte_end":4864,"line_start":169,"line_end":169,"column_start":1,"column_end":15}},{"value":"/         let byte = block!(Serial.read()).unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4865,"byte_end":4919,"line_start":170,"line_end":170,"column_start":1,"column_end":55}},{"value":"/         block!(Serial.write(byte)).unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4920,"byte_end":4968,"line_start":171,"line_end":171,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4969,"byte_end":4978,"line_start":172,"line_end":172,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4979,"byte_end":4984,"line_start":173,"line_end":173,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4985,"byte_end":4988,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # mod hal {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":4989,"byte_end":5004,"line_start":175,"line_end":175,"column_start":1,"column_end":16}},{"value":"/ #   use nb;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5005,"byte_end":5020,"line_start":176,"line_end":176,"column_start":1,"column_end":16}},{"value":"/ #   pub struct Led;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5021,"byte_end":5044,"line_start":177,"line_end":177,"column_start":1,"column_end":24}},{"value":"/ #   impl Led {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5045,"byte_end":5063,"line_start":178,"line_end":178,"column_start":1,"column_end":19}},{"value":"/ #       pub fn off(&self) {}","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5064,"byte_end":5096,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/ #       pub fn on(&self) {}","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5097,"byte_end":5128,"line_start":180,"line_end":180,"column_start":1,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5129,"byte_end":5138,"line_start":181,"line_end":181,"column_start":1,"column_end":10}},{"value":"/ #   pub struct Serial;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5139,"byte_end":5165,"line_start":182,"line_end":182,"column_start":1,"column_end":27}},{"value":"/ #   impl Serial {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5166,"byte_end":5187,"line_start":183,"line_end":183,"column_start":1,"column_end":22}},{"value":"/ #       pub fn read(&self) -> nb::Result<u8, ()> { Ok(0) }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5188,"byte_end":5250,"line_start":184,"line_end":184,"column_start":1,"column_end":63}},{"value":"/ #       pub fn write(&self, _: u8) -> nb::Result<(), ()> { Ok(()) }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5251,"byte_end":5322,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"/ #   }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5323,"byte_end":5332,"line_start":186,"line_end":186,"column_start":1,"column_end":10}},{"value":"/ #   pub struct Timer;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5333,"byte_end":5358,"line_start":187,"line_end":187,"column_start":1,"column_end":26}},{"value":"/ #   impl Timer {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5359,"byte_end":5379,"line_start":188,"line_end":188,"column_start":1,"column_end":21}},{"value":"/ #       pub fn wait(&self) -> nb::Result<(), !> { Ok(()) }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5380,"byte_end":5442,"line_start":189,"line_end":189,"column_start":1,"column_end":63}},{"value":"/ #   }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5443,"byte_end":5452,"line_start":190,"line_end":190,"column_start":1,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5453,"byte_end":5460,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5461,"byte_end":5468,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5469,"byte_end":5472,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ## `futures`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5473,"byte_end":5489,"line_start":194,"line_end":194,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5490,"byte_end":5493,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Blinks an LED every second *and* loops back serial data. Both tasks run","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5494,"byte_end":5569,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"/ concurrently.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5570,"byte_end":5587,"line_start":197,"line_end":197,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5588,"byte_end":5591,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5592,"byte_end":5599,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"/ #![feature(conservative_impl_trait)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5600,"byte_end":5640,"line_start":200,"line_end":200,"column_start":1,"column_end":41}},{"value":"/ #![feature(never_type)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5641,"byte_end":5668,"line_start":201,"line_end":201,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5669,"byte_end":5672,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ extern crate futures;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5673,"byte_end":5698,"line_start":203,"line_end":203,"column_start":1,"column_end":26}},{"value":"/ #[macro_use(try_nb)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5699,"byte_end":5723,"line_start":204,"line_end":204,"column_start":1,"column_end":25}},{"value":"/ extern crate nb;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5724,"byte_end":5744,"line_start":205,"line_end":205,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5745,"byte_end":5748,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ use futures::{Async, Future};","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5749,"byte_end":5782,"line_start":207,"line_end":207,"column_start":1,"column_end":34}},{"value":"/ use futures::future::{self, Loop};","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5783,"byte_end":5821,"line_start":208,"line_end":208,"column_start":1,"column_end":39}},{"value":"/ use hal::{Error, Led, Serial, Timer};","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5822,"byte_end":5863,"line_start":209,"line_end":209,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5864,"byte_end":5867,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ /// `futures` version of `Timer.wait`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5868,"byte_end":5909,"line_start":211,"line_end":211,"column_start":1,"column_end":42}},{"value":"/ ///","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5910,"byte_end":5917,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ /// This returns a future that must be polled to completion","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5918,"byte_end":5981,"line_start":213,"line_end":213,"column_start":1,"column_end":64}},{"value":"/ fn wait() -> impl Future<Item = (), Error = !> {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":5982,"byte_end":6034,"line_start":214,"line_end":214,"column_start":1,"column_end":53}},{"value":"/     future::poll_fn(|| {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6035,"byte_end":6063,"line_start":215,"line_end":215,"column_start":1,"column_end":29}},{"value":"/         Ok(Async::Ready(try_nb!(Timer.wait())))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6064,"byte_end":6115,"line_start":216,"line_end":216,"column_start":1,"column_end":52}},{"value":"/     })","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6116,"byte_end":6126,"line_start":217,"line_end":217,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6127,"byte_end":6132,"line_start":218,"line_end":218,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6133,"byte_end":6136,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ /// `futures` version of `Serial.read`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6137,"byte_end":6179,"line_start":220,"line_end":220,"column_start":1,"column_end":43}},{"value":"/ ///","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6180,"byte_end":6187,"line_start":221,"line_end":221,"column_start":1,"column_end":8}},{"value":"/ /// This returns a future that must be polled to completion","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6188,"byte_end":6251,"line_start":222,"line_end":222,"column_start":1,"column_end":64}},{"value":"/ fn read() -> impl Future<Item = u8, Error = Error> {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6252,"byte_end":6308,"line_start":223,"line_end":223,"column_start":1,"column_end":57}},{"value":"/     future::poll_fn(|| {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6309,"byte_end":6337,"line_start":224,"line_end":224,"column_start":1,"column_end":29}},{"value":"/         Ok(Async::Ready(try_nb!(Serial.read())))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6338,"byte_end":6390,"line_start":225,"line_end":225,"column_start":1,"column_end":53}},{"value":"/     })","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6391,"byte_end":6401,"line_start":226,"line_end":226,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6402,"byte_end":6407,"line_start":227,"line_end":227,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6408,"byte_end":6411,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ /// `futures` version of `Serial.write`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6412,"byte_end":6455,"line_start":229,"line_end":229,"column_start":1,"column_end":44}},{"value":"/ ///","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6456,"byte_end":6463,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/ /// This returns a future that must be polled to completion","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6464,"byte_end":6527,"line_start":231,"line_end":231,"column_start":1,"column_end":64}},{"value":"/ fn write(byte: u8) -> impl Future<Item = (), Error = Error> {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6528,"byte_end":6593,"line_start":232,"line_end":232,"column_start":1,"column_end":66}},{"value":"/     future::poll_fn(move || {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6594,"byte_end":6627,"line_start":233,"line_end":233,"column_start":1,"column_end":34}},{"value":"/         Ok(Async::Ready(try_nb!(Serial.write(byte))))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6628,"byte_end":6685,"line_start":234,"line_end":234,"column_start":1,"column_end":58}},{"value":"/     })","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6686,"byte_end":6696,"line_start":235,"line_end":235,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6697,"byte_end":6702,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6703,"byte_end":6706,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6707,"byte_end":6722,"line_start":238,"line_end":238,"column_start":1,"column_end":16}},{"value":"/     // Tasks","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6723,"byte_end":6739,"line_start":239,"line_end":239,"column_start":1,"column_end":17}},{"value":"/     let mut blinky = future::loop_fn::<_, (), _, _>(true, |state| {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6740,"byte_end":6811,"line_start":240,"line_end":240,"column_start":1,"column_end":72}},{"value":"/         wait().map(move |_| {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6812,"byte_end":6845,"line_start":241,"line_end":241,"column_start":1,"column_end":34}},{"value":"/             if state {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6846,"byte_end":6872,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/                 Led.on();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6873,"byte_end":6902,"line_start":243,"line_end":243,"column_start":1,"column_end":30}},{"value":"/             } else {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6903,"byte_end":6927,"line_start":244,"line_end":244,"column_start":1,"column_end":25}},{"value":"/                 Led.off();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6928,"byte_end":6958,"line_start":245,"line_end":245,"column_start":1,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6959,"byte_end":6976,"line_start":246,"line_end":246,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6977,"byte_end":6980,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/             Loop::Continue(!state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":6981,"byte_end":7019,"line_start":248,"line_end":248,"column_start":1,"column_end":39}},{"value":"/         })","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7020,"byte_end":7034,"line_start":249,"line_end":249,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7035,"byte_end":7046,"line_start":250,"line_end":250,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7047,"byte_end":7050,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/     let mut loopback = future::loop_fn::<_, (), _, _>((), |_| {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7051,"byte_end":7118,"line_start":252,"line_end":252,"column_start":1,"column_end":68}},{"value":"/         read().and_then(|byte| {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7119,"byte_end":7155,"line_start":253,"line_end":253,"column_start":1,"column_end":37}},{"value":"/             write(byte)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7156,"byte_end":7183,"line_start":254,"line_end":254,"column_start":1,"column_end":28}},{"value":"/         }).map(|_| {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7184,"byte_end":7208,"line_start":255,"line_end":255,"column_start":1,"column_end":25}},{"value":"/             Loop::Continue(())","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7209,"byte_end":7243,"line_start":256,"line_end":256,"column_start":1,"column_end":35}},{"value":"/         })","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7244,"byte_end":7258,"line_start":257,"line_end":257,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7259,"byte_end":7270,"line_start":258,"line_end":258,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7271,"byte_end":7274,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/     // Event loop","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7275,"byte_end":7296,"line_start":260,"line_end":260,"column_start":1,"column_end":22}},{"value":"/     loop {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7297,"byte_end":7311,"line_start":261,"line_end":261,"column_start":1,"column_end":15}},{"value":"/         blinky.poll().unwrap(); // NOTE(unwrap) E = !","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7312,"byte_end":7369,"line_start":262,"line_end":262,"column_start":1,"column_end":58}},{"value":"/         loopback.poll().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7370,"byte_end":7407,"line_start":263,"line_end":263,"column_start":1,"column_end":38}},{"value":"/         # break","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7408,"byte_end":7427,"line_start":264,"line_end":264,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7428,"byte_end":7437,"line_start":265,"line_end":265,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7438,"byte_end":7443,"line_start":266,"line_end":266,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7444,"byte_end":7447,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ # mod hal {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7448,"byte_end":7463,"line_start":268,"line_end":268,"column_start":1,"column_end":16}},{"value":"/ #   use nb;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7464,"byte_end":7479,"line_start":269,"line_end":269,"column_start":1,"column_end":16}},{"value":"/ #   pub struct Led;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7480,"byte_end":7503,"line_start":270,"line_end":270,"column_start":1,"column_end":24}},{"value":"/ #   impl Led {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7504,"byte_end":7522,"line_start":271,"line_end":271,"column_start":1,"column_end":19}},{"value":"/ #       pub fn off(&self) {panic!()}","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7523,"byte_end":7563,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"/ #       pub fn on(&self) {}","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7564,"byte_end":7595,"line_start":273,"line_end":273,"column_start":1,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7596,"byte_end":7605,"line_start":274,"line_end":274,"column_start":1,"column_end":10}},{"value":"/ #   #[derive(Debug)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7606,"byte_end":7630,"line_start":275,"line_end":275,"column_start":1,"column_end":25}},{"value":"/ #   pub enum Error {}","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7631,"byte_end":7656,"line_start":276,"line_end":276,"column_start":1,"column_end":26}},{"value":"/ #   pub struct Serial;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7657,"byte_end":7683,"line_start":277,"line_end":277,"column_start":1,"column_end":27}},{"value":"/ #   impl Serial {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7684,"byte_end":7705,"line_start":278,"line_end":278,"column_start":1,"column_end":22}},{"value":"/ #       pub fn read(&self) -> nb::Result<u8, Error> { Err(nb::Error::WouldBlock) }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7706,"byte_end":7792,"line_start":279,"line_end":279,"column_start":1,"column_end":87}},{"value":"/ #       pub fn write(&self, _: u8) -> nb::Result<(), Error> { Err(nb::Error::WouldBlock) }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7793,"byte_end":7887,"line_start":280,"line_end":280,"column_start":1,"column_end":95}},{"value":"/ #   }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7888,"byte_end":7897,"line_start":281,"line_end":281,"column_start":1,"column_end":10}},{"value":"/ #   pub struct Timer;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7898,"byte_end":7923,"line_start":282,"line_end":282,"column_start":1,"column_end":26}},{"value":"/ #   impl Timer {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7924,"byte_end":7944,"line_start":283,"line_end":283,"column_start":1,"column_end":21}},{"value":"/ #       pub fn wait(&self) -> nb::Result<(), !> { Err(nb::Error::WouldBlock) }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":7945,"byte_end":8027,"line_start":284,"line_end":284,"column_start":1,"column_end":83}},{"value":"/ #   }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8028,"byte_end":8037,"line_start":285,"line_end":285,"column_start":1,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8038,"byte_end":8045,"line_start":286,"line_end":286,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8046,"byte_end":8053,"line_start":287,"line_end":287,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8054,"byte_end":8057,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ ## `await!`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8058,"byte_end":8073,"line_start":289,"line_end":289,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8074,"byte_end":8077,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to the `futures` example but with much less boilerplate.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8078,"byte_end":8157,"line_start":291,"line_end":291,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8158,"byte_end":8161,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8162,"byte_end":8169,"line_start":293,"line_end":293,"column_start":1,"column_end":8}},{"value":"/ #![feature(generator_trait)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8170,"byte_end":8202,"line_start":294,"line_end":294,"column_start":1,"column_end":33}},{"value":"/ #![feature(generators)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8203,"byte_end":8230,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/ #![feature(never_type)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8231,"byte_end":8258,"line_start":296,"line_end":296,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8259,"byte_end":8262,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ #[macro_use(await)]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8263,"byte_end":8286,"line_start":298,"line_end":298,"column_start":1,"column_end":24}},{"value":"/ extern crate nb;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8287,"byte_end":8307,"line_start":299,"line_end":299,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8308,"byte_end":8311,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ use std::ops::Generator;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8312,"byte_end":8340,"line_start":301,"line_end":301,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8341,"byte_end":8344,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ use hal::{Led, Serial, Timer};","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8345,"byte_end":8379,"line_start":303,"line_end":303,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8380,"byte_end":8383,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8384,"byte_end":8399,"line_start":305,"line_end":305,"column_start":1,"column_end":16}},{"value":"/     // Tasks","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8400,"byte_end":8416,"line_start":306,"line_end":306,"column_start":1,"column_end":17}},{"value":"/     let mut blinky = || {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8417,"byte_end":8446,"line_start":307,"line_end":307,"column_start":1,"column_end":30}},{"value":"/         let mut state = false;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8447,"byte_end":8481,"line_start":308,"line_end":308,"column_start":1,"column_end":35}},{"value":"/         loop {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8482,"byte_end":8500,"line_start":309,"line_end":309,"column_start":1,"column_end":19}},{"value":"/             // `await!` means suspend / yield instead of blocking","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8501,"byte_end":8570,"line_start":310,"line_end":310,"column_start":1,"column_end":70}},{"value":"/             await!(Timer.wait()).unwrap(); // NOTE(unwrap) E = !","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8571,"byte_end":8639,"line_start":311,"line_end":311,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8640,"byte_end":8643,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/             state = !state;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8644,"byte_end":8675,"line_start":313,"line_end":313,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8676,"byte_end":8679,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/             if state {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8680,"byte_end":8706,"line_start":315,"line_end":315,"column_start":1,"column_end":27}},{"value":"/                  Led.on();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8707,"byte_end":8737,"line_start":316,"line_end":316,"column_start":1,"column_end":31}},{"value":"/             } else {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8738,"byte_end":8762,"line_start":317,"line_end":317,"column_start":1,"column_end":25}},{"value":"/                  Led.off();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8763,"byte_end":8794,"line_start":318,"line_end":318,"column_start":1,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8795,"byte_end":8812,"line_start":319,"line_end":319,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8813,"byte_end":8826,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"/     };","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8827,"byte_end":8837,"line_start":321,"line_end":321,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8838,"byte_end":8841,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/     let mut loopback = || {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8842,"byte_end":8873,"line_start":323,"line_end":323,"column_start":1,"column_end":32}},{"value":"/         loop {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8874,"byte_end":8892,"line_start":324,"line_end":324,"column_start":1,"column_end":19}},{"value":"/             let byte = await!(Serial.read()).unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8893,"byte_end":8951,"line_start":325,"line_end":325,"column_start":1,"column_end":59}},{"value":"/             await!(Serial.write(byte)).unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":8952,"byte_end":9004,"line_start":326,"line_end":326,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9005,"byte_end":9018,"line_start":327,"line_end":327,"column_start":1,"column_end":14}},{"value":"/     };","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9019,"byte_end":9029,"line_start":328,"line_end":328,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9030,"byte_end":9033,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/     // Event loop","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9034,"byte_end":9055,"line_start":330,"line_end":330,"column_start":1,"column_end":22}},{"value":"/     loop {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9056,"byte_end":9070,"line_start":331,"line_end":331,"column_start":1,"column_end":15}},{"value":"/         blinky.resume();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9071,"byte_end":9099,"line_start":332,"line_end":332,"column_start":1,"column_end":29}},{"value":"/         loopback.resume();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9100,"byte_end":9130,"line_start":333,"line_end":333,"column_start":1,"column_end":31}},{"value":"/         # break","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9131,"byte_end":9150,"line_start":334,"line_end":334,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9151,"byte_end":9160,"line_start":335,"line_end":335,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9161,"byte_end":9166,"line_start":336,"line_end":336,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9167,"byte_end":9170,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ # mod hal {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9171,"byte_end":9186,"line_start":338,"line_end":338,"column_start":1,"column_end":16}},{"value":"/ #   use nb;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9187,"byte_end":9202,"line_start":339,"line_end":339,"column_start":1,"column_end":16}},{"value":"/ #   pub struct Led;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9203,"byte_end":9226,"line_start":340,"line_end":340,"column_start":1,"column_end":24}},{"value":"/ #   impl Led {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9227,"byte_end":9245,"line_start":341,"line_end":341,"column_start":1,"column_end":19}},{"value":"/ #       pub fn off(&self) {}","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9246,"byte_end":9278,"line_start":342,"line_end":342,"column_start":1,"column_end":33}},{"value":"/ #       pub fn on(&self) {}","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9279,"byte_end":9310,"line_start":343,"line_end":343,"column_start":1,"column_end":32}},{"value":"/ #   }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9311,"byte_end":9320,"line_start":344,"line_end":344,"column_start":1,"column_end":10}},{"value":"/ #   pub struct Serial;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9321,"byte_end":9347,"line_start":345,"line_end":345,"column_start":1,"column_end":27}},{"value":"/ #   impl Serial {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9348,"byte_end":9369,"line_start":346,"line_end":346,"column_start":1,"column_end":22}},{"value":"/ #       pub fn read(&self) -> nb::Result<u8, ()> { Err(nb::Error::WouldBlock) }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9370,"byte_end":9453,"line_start":347,"line_end":347,"column_start":1,"column_end":84}},{"value":"/ #       pub fn write(&self, _: u8) -> nb::Result<(), ()> { Err(nb::Error::WouldBlock) }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9454,"byte_end":9545,"line_start":348,"line_end":348,"column_start":1,"column_end":92}},{"value":"/ #   }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9546,"byte_end":9555,"line_start":349,"line_end":349,"column_start":1,"column_end":10}},{"value":"/ #   pub struct Timer;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9556,"byte_end":9581,"line_start":350,"line_end":350,"column_start":1,"column_end":26}},{"value":"/ #   impl Timer {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9582,"byte_end":9602,"line_start":351,"line_end":351,"column_start":1,"column_end":21}},{"value":"/ #       pub fn wait(&self) -> nb::Result<(), !> { Err(nb::Error::WouldBlock) }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9603,"byte_end":9685,"line_start":352,"line_end":352,"column_start":1,"column_end":83}},{"value":"/ #   }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9686,"byte_end":9695,"line_start":353,"line_end":353,"column_start":1,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9696,"byte_end":9703,"line_start":354,"line_end":354,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9704,"byte_end":9711,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/nb-0.1.3/src/lib.rs","byte_start":9713,"byte_end":9723,"line_start":357,"line_end":357,"column_start":1,"column_end":11}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}