{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13","program":"/home/mcrae/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cortex_m_rt","/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=f96e512bee236227","-C","extra-filename=-f96e512bee236227","--out-dir","/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/mcrae/Code/hermes/target/rls/debug/deps","--extern","cortex_m_rt_macros=/home/mcrae/Code/hermes/target/rls/debug/deps/libcortex_m_rt_macros-bdec0ae98f84d183.so","--extern","r0=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libr0-95096219aa872b20.rmeta","--cap-lints","allow","-L","/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-rt-96d853676cce9bea/out","--cfg","has_fpu","--cfg","cortex_m","--cfg","armv7m","-l","static=cortex-m-rt","--error-format=json","--sysroot","/home/mcrae/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m_rt-f96e512bee236227.rmeta"},"prelude":{"crate_id":{"name":"cortex_m_rt","disambiguator":[1627851555649957919,8506335487241011751]},"crate_root":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src","external_crates":[{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2184632775997829466,18026496178680965583]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3726307931522043477,4911878782996857177]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8506066526834043935,2338947288633172727]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","num":4,"id":{"name":"cortex_m_rt_macros","disambiguator":[4191871176056045163,6074903115080518663]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","num":5,"id":{"name":"r0","disambiguator":[5806833199612631632,9151162663862801494]}}],"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":0,"byte_end":24927,"line_start":1,"line_end":728,"column_start":1,"column_end":8}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":24},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17209,"byte_end":17214,"line_start":413,"line_end":413,"column_start":18,"column_end":23},"alias_span":null,"name":"entry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":27},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17216,"byte_end":17225,"line_start":413,"line_end":413,"column_start":25,"column_end":34},"alias_span":null,"name":"exception","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":40},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17227,"byte_end":17235,"line_start":413,"line_end":413,"column_start":36,"column_end":44},"alias_span":null,"name":"pre_init","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":0,"byte_end":24927,"line_start":1,"line_end":728,"column_start":1,"column_end":8},"name":"","qualname":"::","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":80},{"krate":0,"index":90},{"krate":0,"index":89},{"krate":0,"index":15},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":60},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":75}],"decl_id":null,"docs":" Startup code and minimal runtime for Cortex-M microcontrollers","sig":null,"attributes":[{"value":"/ Startup code and minimal runtime for Cortex-M microcontrollers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":0,"byte_end":66,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":67,"byte_end":70,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate contains all the required parts to build a `no_std` application (binary crate) that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":71,"byte_end":169,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ targets a Cortex-M microcontroller.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":170,"byte_end":209,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":210,"byte_end":213,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":214,"byte_end":228,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":229,"byte_end":232,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This crates takes care of:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":233,"byte_end":263,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":264,"byte_end":267,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ - The memory layout of the program. In particular, it populates the vector table so the device","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":268,"byte_end":366,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ can boot correctly, and properly dispatch exceptions and interrupts.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":367,"byte_end":439,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":440,"byte_end":443,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - Initializing `static` variables before the program entry point.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":444,"byte_end":513,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":514,"byte_end":517,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - Enabling the FPU before the program entry point if the target is `thumbv7em-none-eabihf`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":518,"byte_end":613,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":614,"byte_end":617,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate also provides the following attributes:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":618,"byte_end":672,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":673,"byte_end":676,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ - [`#[entry]`][attr-entry] to declare the entry point of the program","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":677,"byte_end":749,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ - [`#[exception]`][attr-exception] to override an exception handler. If not overridden all","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":750,"byte_end":844,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/   exception handlers default to an infinite loop.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":845,"byte_end":898,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ - [`#[pre_init]`][attr-pre_init] to run code *before* `static` variables are initialized","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":899,"byte_end":991,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":992,"byte_end":995,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This crate also implements a related attribute called `#[interrupt]`, which allows you","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":996,"byte_end":1086,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"/ to define interrupt handlers. However, since which interrupts are available depends on the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1087,"byte_end":1181,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ microcontroller in use, this attribute should be re-exported and used from a device crate.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1182,"byte_end":1276,"line_start":26,"line_end":26,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The documentation for these attributes can be found in the [Attribute Macros](#attributes)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1281,"byte_end":1375,"line_start":28,"line_end":28,"column_start":1,"column_end":95}},{"value":"/ section.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1376,"byte_end":1388,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1389,"byte_end":1392,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Requirements","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1393,"byte_end":1411,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1412,"byte_end":1415,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ## `memory.x`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1416,"byte_end":1433,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1434,"byte_end":1437,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This crate expects the user, or some other crate, to provide the memory layout of the target","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1438,"byte_end":1534,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ device via a linker script named `memory.x`. This section covers the contents of `memory.x`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1535,"byte_end":1630,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1631,"byte_end":1634,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ### `MEMORY`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1635,"byte_end":1651,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1652,"byte_end":1655,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The linker script must specify the memory available in the device as, at least, two `MEMORY`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1656,"byte_end":1752,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"/ regions: one named `FLASH` and one named `RAM`. The `.text` and `.rodata` sections of the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1753,"byte_end":1846,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ program will be placed in the `FLASH` region, whereas the `.bss` and `.data` sections, as well","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1847,"byte_end":1945,"line_start":42,"line_end":42,"column_start":1,"column_end":99}},{"value":"/ as the heap,will be placed in the `RAM` region.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1946,"byte_end":1997,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":1998,"byte_end":2001,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ``` text","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2002,"byte_end":2014,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/ /* Linker script for the STM32F103C8T6 */","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2015,"byte_end":2060,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"/ MEMORY","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2061,"byte_end":2071,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2072,"byte_end":2077,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/   FLASH : ORIGIN = 0x08000000, LENGTH = 64K","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2078,"byte_end":2125,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/   RAM : ORIGIN = 0x20000000, LENGTH = 20K","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2126,"byte_end":2171,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2172,"byte_end":2177,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2178,"byte_end":2185,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2186,"byte_end":2189,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ### `_stack_start`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2190,"byte_end":2212,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2213,"byte_end":2216,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This optional symbol can be used to indicate where the call stack of the program should be","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2217,"byte_end":2311,"line_start":56,"line_end":56,"column_start":1,"column_end":95}},{"value":"/ placed. If this symbol is not used then the stack will be placed at the *end* of the `RAM`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2312,"byte_end":2406,"line_start":57,"line_end":57,"column_start":1,"column_end":95}},{"value":"/ region -- the stack grows downwards towards smaller address. This symbol can be used to place","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2407,"byte_end":2504,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ the stack in a different memory region, for example:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2505,"byte_end":2561,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2562,"byte_end":2565,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ``` text","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2566,"byte_end":2578,"line_start":61,"line_end":61,"column_start":1,"column_end":13}},{"value":"/ /* Linker script for the STM32F303VCT6 */","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2579,"byte_end":2624,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ MEMORY","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2625,"byte_end":2635,"line_start":63,"line_end":63,"column_start":1,"column_end":11}},{"value":"/ {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2636,"byte_end":2641,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/     FLASH : ORIGIN = 0x08000000, LENGTH = 256K","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2642,"byte_end":2692,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2693,"byte_end":2696,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/     /* .bss, .data and the heap go in this region */","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2697,"byte_end":2753,"line_start":67,"line_end":67,"column_start":1,"column_end":57}},{"value":"/     RAM : ORIGIN = 0x20000000, LENGTH = 40K","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2754,"byte_end":2801,"line_start":68,"line_end":68,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2802,"byte_end":2805,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     /* Core coupled (faster) RAM dedicated to hold the stack */","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2806,"byte_end":2873,"line_start":70,"line_end":70,"column_start":1,"column_end":68}},{"value":"/     CCRAM : ORIGIN = 0x10000000, LENGTH = 8K","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2874,"byte_end":2922,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2923,"byte_end":2928,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2929,"byte_end":2932,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ _stack_start = ORIGIN(CCRAM) + LENGTH(CCRAM);","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2933,"byte_end":2982,"line_start":74,"line_end":74,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2983,"byte_end":2990,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2991,"byte_end":2994,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### `_stext`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":2995,"byte_end":3011,"line_start":77,"line_end":77,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3012,"byte_end":3015,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This optional symbol can be used to control where the `.text` section is placed. If omitted the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3016,"byte_end":3115,"line_start":79,"line_end":79,"column_start":1,"column_end":100}},{"value":"/ `.text` section will be placed right after the vector table, which is placed at the beginning of","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3116,"byte_end":3216,"line_start":80,"line_end":80,"column_start":1,"column_end":101}},{"value":"/ `FLASH`. Some devices store settings like Flash configuration right after the vector table;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3217,"byte_end":3312,"line_start":81,"line_end":81,"column_start":1,"column_end":96}},{"value":"/ for these devices one must place the `.text` section after this configuration section --","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3313,"byte_end":3405,"line_start":82,"line_end":82,"column_start":1,"column_end":93}},{"value":"/ `_stext` can be used for this purpose.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3406,"byte_end":3448,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3449,"byte_end":3452,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ``` text","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3453,"byte_end":3465,"line_start":85,"line_end":85,"column_start":1,"column_end":13}},{"value":"/ MEMORY","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3466,"byte_end":3476,"line_start":86,"line_end":86,"column_start":1,"column_end":11}},{"value":"/ {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3477,"byte_end":3482,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/   /* .. */","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3483,"byte_end":3497,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3498,"byte_end":3503,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3504,"byte_end":3507,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ /* The device stores Flash configuration in 0x400-0x40C so we place .text after that */","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3508,"byte_end":3599,"line_start":91,"line_end":91,"column_start":1,"column_end":92}},{"value":"/ _stext = ORIGIN(FLASH) + 0x40C","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3600,"byte_end":3634,"line_start":92,"line_end":92,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3635,"byte_end":3642,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3643,"byte_end":3646,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # An example","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3647,"byte_end":3663,"line_start":95,"line_end":95,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3664,"byte_end":3667,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This section presents a minimal application built on top of `cortex-m-rt`. Apart from the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3668,"byte_end":3761,"line_start":97,"line_end":97,"column_start":1,"column_end":94}},{"value":"/ mandatory `memory.x` linker script describing the memory layout of the device, the hard fault","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3762,"byte_end":3859,"line_start":98,"line_end":98,"column_start":1,"column_end":98}},{"value":"/ handler and the default exception handler must also be defined somewhere in the dependency","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3860,"byte_end":3954,"line_start":99,"line_end":99,"column_start":1,"column_end":95}},{"value":"/ graph (see [`#[exception]`]). In this example we define them in the binary crate:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":3955,"byte_end":4040,"line_start":100,"line_end":100,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4041,"byte_end":4044,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ``` ignore","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4045,"byte_end":4059,"line_start":102,"line_end":102,"column_start":1,"column_end":15}},{"value":"/ // IMPORTANT the standard `main` interface is not used because it requires nightly","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4060,"byte_end":4146,"line_start":103,"line_end":103,"column_start":1,"column_end":87}},{"value":"/ #![no_main]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4147,"byte_end":4162,"line_start":104,"line_end":104,"column_start":1,"column_end":16}},{"value":"/ #![no_std]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4163,"byte_end":4177,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4178,"byte_end":4181,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ extern crate cortex_m_rt as rt;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4182,"byte_end":4217,"line_start":107,"line_end":107,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4218,"byte_end":4221,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ // makes `panic!` print messages to the host stderr using semihosting","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4222,"byte_end":4295,"line_start":109,"line_end":109,"column_start":1,"column_end":74}},{"value":"/ extern crate panic_semihosting;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4296,"byte_end":4331,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4332,"byte_end":4335,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ use rt::entry;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4336,"byte_end":4354,"line_start":112,"line_end":112,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4355,"byte_end":4358,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ // use `main` as the entry point of this application","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4359,"byte_end":4415,"line_start":114,"line_end":114,"column_start":1,"column_end":57}},{"value":"/ // `main` is not allowed to return","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4416,"byte_end":4454,"line_start":115,"line_end":115,"column_start":1,"column_end":39}},{"value":"/ #[entry]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4455,"byte_end":4467,"line_start":116,"line_end":116,"column_start":1,"column_end":13}},{"value":"/ fn main() -> ! {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4468,"byte_end":4488,"line_start":117,"line_end":117,"column_start":1,"column_end":21}},{"value":"/     // initialization","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4489,"byte_end":4514,"line_start":118,"line_end":118,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4515,"byte_end":4518,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4519,"byte_end":4533,"line_start":120,"line_end":120,"column_start":1,"column_end":15}},{"value":"/         // application logic","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4534,"byte_end":4566,"line_start":121,"line_end":121,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4567,"byte_end":4576,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4577,"byte_end":4582,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4583,"byte_end":4590,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4591,"byte_end":4594,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ To actually build this program you need to place a `memory.x` linker script somewhere the linker","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4595,"byte_end":4695,"line_start":126,"line_end":126,"column_start":1,"column_end":101}},{"value":"/ can find it, e.g. in the current directory; and then link the program using `cortex-m-rt`'s","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4696,"byte_end":4791,"line_start":127,"line_end":127,"column_start":1,"column_end":96}},{"value":"/ linker script: `link.x`. The required steps are shown below:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4792,"byte_end":4856,"line_start":128,"line_end":128,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4857,"byte_end":4860,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ``` text","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4861,"byte_end":4873,"line_start":130,"line_end":130,"column_start":1,"column_end":13}},{"value":"/ $ cat > memory.x <<EOF","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4874,"byte_end":4900,"line_start":131,"line_end":131,"column_start":1,"column_end":27}},{"value":"/ /* Linker script for the STM32F103C8T6 */","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4901,"byte_end":4946,"line_start":132,"line_end":132,"column_start":1,"column_end":46}},{"value":"/ MEMORY","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4947,"byte_end":4957,"line_start":133,"line_end":133,"column_start":1,"column_end":11}},{"value":"/ {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4958,"byte_end":4963,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/   FLASH : ORIGIN = 0x08000000, LENGTH = 64K","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":4964,"byte_end":5011,"line_start":135,"line_end":135,"column_start":1,"column_end":48}},{"value":"/   RAM : ORIGIN = 0x20000000, LENGTH = 20K","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5012,"byte_end":5057,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5058,"byte_end":5063,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ EOF","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5064,"byte_end":5071,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5072,"byte_end":5075,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ $ cargo rustc --target thumbv7m-none-eabi -- \\","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5076,"byte_end":5126,"line_start":140,"line_end":140,"column_start":1,"column_end":51}},{"value":"/       -C link-arg=-nostartfiles -C link-arg=-Tlink.x","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5127,"byte_end":5183,"line_start":141,"line_end":141,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5184,"byte_end":5187,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ $ file target/thumbv7m-none-eabi/debug/app","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5188,"byte_end":5234,"line_start":143,"line_end":143,"column_start":1,"column_end":47}},{"value":"/ app: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), statically linked, (..)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5235,"byte_end":5323,"line_start":144,"line_end":144,"column_start":1,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5324,"byte_end":5331,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5332,"byte_end":5335,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ # Optional features","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5336,"byte_end":5359,"line_start":147,"line_end":147,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5360,"byte_end":5363,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ## `device`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5364,"byte_end":5379,"line_start":149,"line_end":149,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5380,"byte_end":5383,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ If this feature is disabled then this crate populates the whole vector table. All the interrupts","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5384,"byte_end":5484,"line_start":151,"line_end":151,"column_start":1,"column_end":101}},{"value":"/ in the vector table, even the ones unused by the target device, will be bound to the default","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5485,"byte_end":5581,"line_start":152,"line_end":152,"column_start":1,"column_end":97}},{"value":"/ exception handler. This makes the final application device agnostic: you will be able to run it","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5582,"byte_end":5681,"line_start":153,"line_end":153,"column_start":1,"column_end":100}},{"value":"/ on any Cortex-M device -- provided that you correctly specified its memory layout in `memory.x`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5682,"byte_end":5781,"line_start":154,"line_end":154,"column_start":1,"column_end":100}},{"value":"/ -- without hitting undefined behavior.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5782,"byte_end":5824,"line_start":155,"line_end":155,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5825,"byte_end":5828,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ If this feature is enabled then the interrupts section of the vector table is left unpopulated","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5829,"byte_end":5927,"line_start":157,"line_end":157,"column_start":1,"column_end":99}},{"value":"/ and some other crate, or the user, will have to populate it. This mode is meant to be used in","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":5928,"byte_end":6025,"line_start":158,"line_end":158,"column_start":1,"column_end":98}},{"value":"/ conjunction with crates generated using `svd2rust`. Those *device crates* will populate the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6026,"byte_end":6121,"line_start":159,"line_end":159,"column_start":1,"column_end":96}},{"value":"/ missing part of the vector table when their `\"rt\"` feature is enabled.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6122,"byte_end":6196,"line_start":160,"line_end":160,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6197,"byte_end":6200,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ # Inspection","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6201,"byte_end":6217,"line_start":162,"line_end":162,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6218,"byte_end":6221,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ This section covers how to inspect a binary that builds on top of `cortex-m-rt`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6222,"byte_end":6306,"line_start":164,"line_end":164,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6307,"byte_end":6310,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ## Sections (`size`)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6311,"byte_end":6335,"line_start":166,"line_end":166,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6336,"byte_end":6339,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ `cortex-m-rt` uses standard sections like `.text`, `.rodata`, `.bss` and `.data` as one would","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6340,"byte_end":6437,"line_start":168,"line_end":168,"column_start":1,"column_end":98}},{"value":"/ expect. `cortex-m-rt` separates the vector table in its own section, named `.vector_table`. This","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6438,"byte_end":6538,"line_start":169,"line_end":169,"column_start":1,"column_end":101}},{"value":"/ lets you distinguish how much space is taking the vector table in Flash vs how much is being","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6539,"byte_end":6635,"line_start":170,"line_end":170,"column_start":1,"column_end":97}},{"value":"/ used by actual instructions (`.text`) and constants (`.rodata`).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6636,"byte_end":6704,"line_start":171,"line_end":171,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6705,"byte_end":6708,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6709,"byte_end":6716,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ $ size -Ax target/thumbv7m-none-eabi/examples/app","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6717,"byte_end":6770,"line_start":174,"line_end":174,"column_start":1,"column_end":54}},{"value":"/ target/thumbv7m-none-eabi/release/examples/app  :","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6771,"byte_end":6824,"line_start":175,"line_end":175,"column_start":1,"column_end":54}},{"value":"/ section             size         addr","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6825,"byte_end":6866,"line_start":176,"line_end":176,"column_start":1,"column_end":42}},{"value":"/ .vector_table      0x400    0x8000000","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6867,"byte_end":6908,"line_start":177,"line_end":177,"column_start":1,"column_end":42}},{"value":"/ .text               0x88    0x8000400","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6909,"byte_end":6950,"line_start":178,"line_end":178,"column_start":1,"column_end":42}},{"value":"/ .rodata              0x0    0x8000488","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6951,"byte_end":6992,"line_start":179,"line_end":179,"column_start":1,"column_end":42}},{"value":"/ .data                0x0   0x20000000","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":6993,"byte_end":7034,"line_start":180,"line_end":180,"column_start":1,"column_end":42}},{"value":"/ .bss                 0x0   0x20000000","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7035,"byte_end":7076,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7077,"byte_end":7084,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7085,"byte_end":7088,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ Without the `-A` argument `size` reports the sum of the sizes of `.text`, `.rodata` and","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7089,"byte_end":7180,"line_start":184,"line_end":184,"column_start":1,"column_end":92}},{"value":"/ `.vector_table` under \"text\".","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7181,"byte_end":7214,"line_start":185,"line_end":185,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7215,"byte_end":7218,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7219,"byte_end":7226,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ $ size target/thumbv7m-none-eabi/examples/app","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7227,"byte_end":7276,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/   text    data     bss     dec     hex filename","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7277,"byte_end":7328,"line_start":189,"line_end":189,"column_start":1,"column_end":52}},{"value":"/   1160       0       0    1660     67c target/thumbv7m-none-eabi/release/app","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7329,"byte_end":7409,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7410,"byte_end":7417,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7418,"byte_end":7421,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ ## Symbols (`objdump`, `nm`)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7422,"byte_end":7454,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7455,"byte_end":7458,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ One will always find the following (unmangled) symbols in `cortex-m-rt` applications:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7459,"byte_end":7548,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7549,"byte_end":7552,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ - `Reset`. This is the reset handler. The microcontroller will executed this function upon","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7553,"byte_end":7647,"line_start":197,"line_end":197,"column_start":1,"column_end":95}},{"value":"/ booting. This function will call the user program entry point (cf. [`#[entry]`][attr-entry])","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7648,"byte_end":7744,"line_start":198,"line_end":198,"column_start":1,"column_end":97}},{"value":"/ using the `main` symbol so you may also find that symbol in your program; if you do, `main`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7745,"byte_end":7840,"line_start":199,"line_end":199,"column_start":1,"column_end":96}},{"value":"/ will contain your application code. Some other times `main` gets inlined into `Reset` so you","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7841,"byte_end":7937,"line_start":200,"line_end":200,"column_start":1,"column_end":97}},{"value":"/ won't find it.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7938,"byte_end":7956,"line_start":201,"line_end":201,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7957,"byte_end":7960,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ - `DefaultHandler`. This is the default handler. If not overridden using `#[exception] fn","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":7961,"byte_end":8054,"line_start":203,"line_end":203,"column_start":1,"column_end":94}},{"value":"/ DefaultHandler(..` this will be an infinite loop.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8055,"byte_end":8108,"line_start":204,"line_end":204,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8109,"byte_end":8112,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ - `HardFaultTrampoline`. This is the real hard fault handler. This function is simply a","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8113,"byte_end":8204,"line_start":206,"line_end":206,"column_start":1,"column_end":92}},{"value":"/ trampoline that jumps into the user defined hard fault handler named `HardFault`. The","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8205,"byte_end":8294,"line_start":207,"line_end":207,"column_start":1,"column_end":90}},{"value":"/ trampoline is required to set up the pointer to the stacked exception frame.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8295,"byte_end":8375,"line_start":208,"line_end":208,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8376,"byte_end":8379,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ - `HardFault`. This is the user defined hard fault handler. If not overridden using","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8380,"byte_end":8467,"line_start":210,"line_end":210,"column_start":1,"column_end":88}},{"value":"/ `#[exception] fn HardFault(..` it will default to an infinite loop.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8468,"byte_end":8539,"line_start":211,"line_end":211,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8540,"byte_end":8543,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ - `__STACK_START`. This is the first entry in the `.vector_table` section. This symbol contains","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8544,"byte_end":8643,"line_start":213,"line_end":213,"column_start":1,"column_end":100}},{"value":"/ the initial value of the stack pointer; this is where the stack will be located -- the stack","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8644,"byte_end":8740,"line_start":214,"line_end":214,"column_start":1,"column_end":97}},{"value":"/ grows downwards towards smaller addresses.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8741,"byte_end":8787,"line_start":215,"line_end":215,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8788,"byte_end":8791,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ - `__RESET_VECTOR`. This is the reset vector, a pointer into the `Reset` handler. This vector is","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8792,"byte_end":8892,"line_start":217,"line_end":217,"column_start":1,"column_end":101}},{"value":"/ located in the `.vector_table` section after `__STACK_START`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8893,"byte_end":8958,"line_start":218,"line_end":218,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8959,"byte_end":8962,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ - `__EXCEPTIONS`. This is the core exceptions portion of the vector table; it's an array of 14","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":8963,"byte_end":9061,"line_start":220,"line_end":220,"column_start":1,"column_end":99}},{"value":"/ exception vectors, which includes exceptions like `HardFault` and `SysTick`. This array is","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9062,"byte_end":9156,"line_start":221,"line_end":221,"column_start":1,"column_end":95}},{"value":"/ located after `__RESET_VECTOR` in the `.vector_table` section.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9157,"byte_end":9223,"line_start":222,"line_end":222,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9224,"byte_end":9227,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ - `__INTERRUPTS`. This is the device specific interrupt portion of the vector table; its exact","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9228,"byte_end":9326,"line_start":224,"line_end":224,"column_start":1,"column_end":99}},{"value":"/ size depends on the target device but if the `\"device\"` feature has not been enabled it will","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9327,"byte_end":9423,"line_start":225,"line_end":225,"column_start":1,"column_end":97}},{"value":"/ have a size of 32 vectors (on ARMv6-M) or 240 vectors (on ARMv7-M). This array is located after","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9424,"byte_end":9523,"line_start":226,"line_end":226,"column_start":1,"column_end":100}},{"value":"/ `__EXCEPTIONS` in the `.vector_table` section.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9524,"byte_end":9574,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9575,"byte_end":9578,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ - `__pre_init`. This is a function to be run before RAM is initialized. It defaults to an empty","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9579,"byte_end":9678,"line_start":229,"line_end":229,"column_start":1,"column_end":100}},{"value":"/ function. The function called can be changed by applying the [`#[pre_init]`][attr-pre_init]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9679,"byte_end":9774,"line_start":230,"line_end":230,"column_start":1,"column_end":96}},{"value":"/ attribute to a function. The empty function is not optimized out by default, but if an empty","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9775,"byte_end":9871,"line_start":231,"line_end":231,"column_start":1,"column_end":97}},{"value":"/ function is passed to [`#[pre_init]`][attr-pre_init] the function call will be optimized out.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9872,"byte_end":9969,"line_start":232,"line_end":232,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9970,"byte_end":9973,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ If you override any exception handler you'll find it as an unmangled symbol, e.g. `SysTick` or","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":9974,"byte_end":10072,"line_start":234,"line_end":234,"column_start":1,"column_end":99}},{"value":"/ `SVCall`, in the output of `objdump`,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10073,"byte_end":10114,"line_start":235,"line_end":235,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10115,"byte_end":10118,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ If you are targeting the `thumbv7em-none-eabihf` target you'll also see a `ResetTrampoline`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10119,"byte_end":10214,"line_start":237,"line_end":237,"column_start":1,"column_end":96}},{"value":"/ symbol in the output. To avoid the compiler placing FPU instructions before the FPU has been","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10215,"byte_end":10311,"line_start":238,"line_end":238,"column_start":1,"column_end":97}},{"value":"/ enabled (cf. `vpush`) `Reset` calls the function `ResetTrampoline` which is marked as","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10312,"byte_end":10401,"line_start":239,"line_end":239,"column_start":1,"column_end":90}},{"value":"/ `#[inline(never)]` and `ResetTrampoline` calls `main`. The compiler is free to inline `main`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10402,"byte_end":10498,"line_start":240,"line_end":240,"column_start":1,"column_end":97}},{"value":"/ into `ResetTrampoline` but it can't inline `ResetTrampoline` into `Reset` -- the FPU is enabled","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10499,"byte_end":10598,"line_start":241,"line_end":241,"column_start":1,"column_end":100}},{"value":"/ in `Reset`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10599,"byte_end":10614,"line_start":242,"line_end":242,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10615,"byte_end":10618,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ # Advanced usage","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10619,"byte_end":10639,"line_start":244,"line_end":244,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10640,"byte_end":10643,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ## Setting the program entry point","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10644,"byte_end":10682,"line_start":246,"line_end":246,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10683,"byte_end":10686,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ This section describes how [`#[entry]`][attr-entry] is implemented. This information is useful","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10687,"byte_end":10785,"line_start":248,"line_end":248,"column_start":1,"column_end":99}},{"value":"/ to developers who want to provide an alternative to [`#[entry]`][attr-entry] that provides extra","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10786,"byte_end":10886,"line_start":249,"line_end":249,"column_start":1,"column_end":101}},{"value":"/ guarantees.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10887,"byte_end":10902,"line_start":250,"line_end":250,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10903,"byte_end":10906,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ The `Reset` handler will call a symbol named `main` (unmangled) *after* initializing `.bss` and","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":10907,"byte_end":11006,"line_start":252,"line_end":252,"column_start":1,"column_end":100}},{"value":"/ `.data`, and enabling the FPU (if the target is `thumbv7em-none-eabihf`). A function with the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11007,"byte_end":11104,"line_start":253,"line_end":253,"column_start":1,"column_end":98}},{"value":"/ `entry` attribute will be set to have the export name \"`main`\"; in addition, its mutable","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11105,"byte_end":11197,"line_start":254,"line_end":254,"column_start":1,"column_end":93}},{"value":"/ statics are turned into safe mutable references (see [`#[entry]`][attr-entry] for details).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11198,"byte_end":11293,"line_start":255,"line_end":255,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11294,"byte_end":11297,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ The unmangled `main` symbol must have signature `extern \"C\" fn() -> !` or its invocation from","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11298,"byte_end":11395,"line_start":257,"line_end":257,"column_start":1,"column_end":98}},{"value":"/ `Reset`  will result in undefined behavior.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11396,"byte_end":11443,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11444,"byte_end":11447,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ ## Incorporating device specific interrupts","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11448,"byte_end":11495,"line_start":260,"line_end":260,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11496,"byte_end":11499,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ This section covers how an external crate can insert device specific interrupt handlers into the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11500,"byte_end":11600,"line_start":262,"line_end":262,"column_start":1,"column_end":101}},{"value":"/ vector table. Most users don't need to concern themselves with these details, but if you are","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11601,"byte_end":11697,"line_start":263,"line_end":263,"column_start":1,"column_end":97}},{"value":"/ interested in how device crates generated using `svd2rust` integrate with `cortex-m-rt` read on.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11698,"byte_end":11798,"line_start":264,"line_end":264,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11799,"byte_end":11802,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ The information in this section applies when the `\"device\"` feature has been enabled.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11803,"byte_end":11892,"line_start":266,"line_end":266,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11893,"byte_end":11896,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ ### `__INTERRUPTS`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11897,"byte_end":11919,"line_start":268,"line_end":268,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11920,"byte_end":11923,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ The external crate must provide the interrupts portion of the vector table via a `static`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":11924,"byte_end":12017,"line_start":270,"line_end":270,"column_start":1,"column_end":94}},{"value":"/ variable named`__INTERRUPTS` (unmangled) that must be placed in the `.vector_table.interrupts`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12018,"byte_end":12116,"line_start":271,"line_end":271,"column_start":1,"column_end":99}},{"value":"/ section of its object file.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12117,"byte_end":12148,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12149,"byte_end":12152,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ This `static` variable will be placed at `ORIGIN(FLASH) + 0x40`. This address corresponds to the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12153,"byte_end":12253,"line_start":274,"line_end":274,"column_start":1,"column_end":101}},{"value":"/ spot where IRQ0 (IRQ number 0) is located.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12254,"byte_end":12300,"line_start":275,"line_end":275,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12301,"byte_end":12304,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ To conform to the Cortex-M ABI `__INTERRUPTS` must be an array of function pointers; some spots","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12305,"byte_end":12404,"line_start":277,"line_end":277,"column_start":1,"column_end":100}},{"value":"/ in this array may need to be set to 0 if they are marked as *reserved* in the data sheet /","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12405,"byte_end":12499,"line_start":278,"line_end":278,"column_start":1,"column_end":95}},{"value":"/ reference manual. We recommend using a `union` to set the reserved spots to `0`; `None`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12500,"byte_end":12591,"line_start":279,"line_end":279,"column_start":1,"column_end":92}},{"value":"/ (`Option<fn()>`) may also work but it's not guaranteed that the `None` variant will *always* be","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12592,"byte_end":12691,"line_start":280,"line_end":280,"column_start":1,"column_end":100}},{"value":"/ represented by the value `0`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12692,"byte_end":12725,"line_start":281,"line_end":281,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12726,"byte_end":12729,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Let's illustrate with an artificial example where a device only has two interrupt: `Foo`, with","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12730,"byte_end":12828,"line_start":283,"line_end":283,"column_start":1,"column_end":99}},{"value":"/ IRQ number = 2, and `Bar`, with IRQ number = 4.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12829,"byte_end":12880,"line_start":284,"line_end":284,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12881,"byte_end":12884,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ``` ignore","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12885,"byte_end":12899,"line_start":286,"line_end":286,"column_start":1,"column_end":15}},{"value":"/ union Vector {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12900,"byte_end":12918,"line_start":287,"line_end":287,"column_start":1,"column_end":19}},{"value":"/     handler: extern \"C\" fn(),","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12919,"byte_end":12952,"line_start":288,"line_end":288,"column_start":1,"column_end":34}},{"value":"/     reserved: usize,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12953,"byte_end":12977,"line_start":289,"line_end":289,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12978,"byte_end":12983,"line_start":290,"line_end":290,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12984,"byte_end":12987,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ extern \"C\" {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":12988,"byte_end":13004,"line_start":292,"line_end":292,"column_start":1,"column_end":17}},{"value":"/     fn Foo();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13005,"byte_end":13022,"line_start":293,"line_end":293,"column_start":1,"column_end":18}},{"value":"/     fn Bar();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13023,"byte_end":13040,"line_start":294,"line_end":294,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13041,"byte_end":13046,"line_start":295,"line_end":295,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13047,"byte_end":13050,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[link_section = \".vector_table.interrupts\"]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13051,"byte_end":13099,"line_start":297,"line_end":297,"column_start":1,"column_end":49}},{"value":"/ #[no_mangle]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13100,"byte_end":13116,"line_start":298,"line_end":298,"column_start":1,"column_end":17}},{"value":"/ pub static __INTERRUPTS: [Vector; 5] = [","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13117,"byte_end":13161,"line_start":299,"line_end":299,"column_start":1,"column_end":45}},{"value":"/     // 0-1: Reserved","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13162,"byte_end":13186,"line_start":300,"line_end":300,"column_start":1,"column_end":25}},{"value":"/     Vector { reserved: 0 },","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13187,"byte_end":13218,"line_start":301,"line_end":301,"column_start":1,"column_end":32}},{"value":"/     Vector { reserved: 0 },","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13219,"byte_end":13250,"line_start":302,"line_end":302,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13251,"byte_end":13254,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/     // 2: Foo","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13255,"byte_end":13272,"line_start":304,"line_end":304,"column_start":1,"column_end":18}},{"value":"/     Vector { handler: Foo },","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13273,"byte_end":13305,"line_start":305,"line_end":305,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13306,"byte_end":13309,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/     // 3: Reserved","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13310,"byte_end":13332,"line_start":307,"line_end":307,"column_start":1,"column_end":23}},{"value":"/     Vector { reserved: 0 },","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13333,"byte_end":13364,"line_start":308,"line_end":308,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13365,"byte_end":13368,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/     // 4: Bar","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13369,"byte_end":13386,"line_start":310,"line_end":310,"column_start":1,"column_end":18}},{"value":"/     Vector { handler: Bar },","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13387,"byte_end":13419,"line_start":311,"line_end":311,"column_start":1,"column_end":33}},{"value":"/ ];","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13420,"byte_end":13426,"line_start":312,"line_end":312,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13427,"byte_end":13434,"line_start":313,"line_end":313,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13435,"byte_end":13438,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ ### `device.x`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13439,"byte_end":13457,"line_start":315,"line_end":315,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13458,"byte_end":13461,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ Linking in `__INTERRUPTS` creates a bunch of undefined references. If the user doesn't set a","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13462,"byte_end":13558,"line_start":317,"line_end":317,"column_start":1,"column_end":97}},{"value":"/ handler for *all* the device specific interrupts then linking will fail with `\"undefined","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13559,"byte_end":13651,"line_start":318,"line_end":318,"column_start":1,"column_end":93}},{"value":"/ reference\"` errors.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13652,"byte_end":13675,"line_start":319,"line_end":319,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13676,"byte_end":13679,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ We want to provide a default handler for all the interrupts while still letting the user","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13680,"byte_end":13772,"line_start":321,"line_end":321,"column_start":1,"column_end":93}},{"value":"/ individually override each interrupt handler. In C projects, this is usually accomplished using","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13773,"byte_end":13872,"line_start":322,"line_end":322,"column_start":1,"column_end":100}},{"value":"/ weak aliases declared in external assembly files. In Rust, we could achieve something similar","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13873,"byte_end":13970,"line_start":323,"line_end":323,"column_start":1,"column_end":98}},{"value":"/ using `global_asm!`, but that's an unstable feature.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":13971,"byte_end":14027,"line_start":324,"line_end":324,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14028,"byte_end":14031,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ A solution that doesn't require `global_asm!` or external assembly files is to use the `PROVIDE`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14032,"byte_end":14132,"line_start":326,"line_end":326,"column_start":1,"column_end":101}},{"value":"/ command in a linker script to create the weak aliases. This is the approach that `cortex-m-rt`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14133,"byte_end":14231,"line_start":327,"line_end":327,"column_start":1,"column_end":99}},{"value":"/ uses; when the `\"device\"` feature is enabled `cortex-m-rt`'s linker script (`link.x`) depends on","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14232,"byte_end":14332,"line_start":328,"line_end":328,"column_start":1,"column_end":101}},{"value":"/ a linker script named `device.x`. The crate that provides `__INTERRUPTS` must also provide this","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14333,"byte_end":14432,"line_start":329,"line_end":329,"column_start":1,"column_end":100}},{"value":"/ file.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14433,"byte_end":14442,"line_start":330,"line_end":330,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14443,"byte_end":14446,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ For our running example the `device.x` linker script looks like this:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14447,"byte_end":14520,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14521,"byte_end":14524,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ ``` text","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14525,"byte_end":14537,"line_start":334,"line_end":334,"column_start":1,"column_end":13}},{"value":"/ /* device.x */","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14538,"byte_end":14556,"line_start":335,"line_end":335,"column_start":1,"column_end":19}},{"value":"/ PROVIDE(Foo = DefaultHandler);","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14557,"byte_end":14591,"line_start":336,"line_end":336,"column_start":1,"column_end":35}},{"value":"/ PROVIDE(Bar = DefaultHandler);","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14592,"byte_end":14626,"line_start":337,"line_end":337,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14627,"byte_end":14634,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14635,"byte_end":14638,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ This weakly aliases both `Foo` and `Bar`. `DefaultHandler` is the default exception handler and","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14639,"byte_end":14738,"line_start":340,"line_end":340,"column_start":1,"column_end":100}},{"value":"/ that the core exceptions use unless overridden.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14739,"byte_end":14790,"line_start":341,"line_end":341,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14791,"byte_end":14794,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ Because this linker script is provided by a dependency of the final application the dependency","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14795,"byte_end":14893,"line_start":343,"line_end":343,"column_start":1,"column_end":99}},{"value":"/ must contain build script that puts `device.x` somewhere the linker can find. An example of such","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14894,"byte_end":14994,"line_start":344,"line_end":344,"column_start":1,"column_end":101}},{"value":"/ build script is shown below:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":14995,"byte_end":15027,"line_start":345,"line_end":345,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15028,"byte_end":15031,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ``` ignore","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15032,"byte_end":15046,"line_start":347,"line_end":347,"column_start":1,"column_end":15}},{"value":"/ use std::env;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15047,"byte_end":15064,"line_start":348,"line_end":348,"column_start":1,"column_end":18}},{"value":"/ use std::fs::File;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15065,"byte_end":15087,"line_start":349,"line_end":349,"column_start":1,"column_end":23}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15088,"byte_end":15111,"line_start":350,"line_end":350,"column_start":1,"column_end":24}},{"value":"/ use std::path::PathBuf;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15112,"byte_end":15139,"line_start":351,"line_end":351,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15140,"byte_end":15143,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15144,"byte_end":15159,"line_start":353,"line_end":353,"column_start":1,"column_end":16}},{"value":"/     // Put the linker script somewhere the linker can find it","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15160,"byte_end":15225,"line_start":354,"line_end":354,"column_start":1,"column_end":66}},{"value":"/     let out = &PathBuf::from(env::var_os(\"OUT_DIR\").unwrap());","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15226,"byte_end":15292,"line_start":355,"line_end":355,"column_start":1,"column_end":67}},{"value":"/     File::create(out.join(\"device.x\"))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15293,"byte_end":15335,"line_start":356,"line_end":356,"column_start":1,"column_end":43}},{"value":"/         .unwrap()","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15336,"byte_end":15357,"line_start":357,"line_end":357,"column_start":1,"column_end":22}},{"value":"/         .write_all(include_bytes!(\"device.x\"))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15358,"byte_end":15408,"line_start":358,"line_end":358,"column_start":1,"column_end":51}},{"value":"/         .unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15409,"byte_end":15431,"line_start":359,"line_end":359,"column_start":1,"column_end":23}},{"value":"/     println!(\"cargo:rustc-link-search={}\", out.display());","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15432,"byte_end":15494,"line_start":360,"line_end":360,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15495,"byte_end":15500,"line_start":361,"line_end":361,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15501,"byte_end":15508,"line_start":362,"line_end":362,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15509,"byte_end":15512,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ ## Uninitialized static variables","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15513,"byte_end":15550,"line_start":364,"line_end":364,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15551,"byte_end":15554,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"/ The `.uninit` linker section can be used to leave `static mut` variables uninitialized. One use","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15555,"byte_end":15654,"line_start":366,"line_end":366,"column_start":1,"column_end":100}},{"value":"/ case of unitialized static variables is to avoid zeroing large statically allocated buffers (say","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15655,"byte_end":15755,"line_start":367,"line_end":367,"column_start":1,"column_end":101}},{"value":"/ to be used as thread stacks) -- this can considerably reduce initialization time on devices that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15756,"byte_end":15856,"line_start":368,"line_end":368,"column_start":1,"column_end":101}},{"value":"/ operate at low frequencies.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15857,"byte_end":15888,"line_start":369,"line_end":369,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15889,"byte_end":15892,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ The only correct way to use this section is by placing `static mut` variables with type","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15893,"byte_end":15984,"line_start":371,"line_end":371,"column_start":1,"column_end":92}},{"value":"/ [`MaybeUninit`] in it.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":15985,"byte_end":16011,"line_start":372,"line_end":372,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16012,"byte_end":16015,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ [`MaybeUninit`]: https://doc.rust-lang.org/core/mem/union.MaybeUninit.html","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16016,"byte_end":16094,"line_start":374,"line_end":374,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16095,"byte_end":16098,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ ``` ignore","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16099,"byte_end":16113,"line_start":376,"line_end":376,"column_start":1,"column_end":15}},{"value":"/ use core::mem::MaybeUninit;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16114,"byte_end":16145,"line_start":377,"line_end":377,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16146,"byte_end":16149,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ const STACK_SIZE: usize = 8 * 1024;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16150,"byte_end":16189,"line_start":379,"line_end":379,"column_start":1,"column_end":40}},{"value":"/ const NTHREADS: usize = 4;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16190,"byte_end":16220,"line_start":380,"line_end":380,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16221,"byte_end":16224,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ #[link_section = \".uninit.STACKS\"]","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16225,"byte_end":16263,"line_start":382,"line_end":382,"column_start":1,"column_end":39}},{"value":"/ static mut STACKS: MaybeUninit<[[u8; STACK_SIZE]; NTHREADS]> = MaybeUninit::uninit();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16264,"byte_end":16353,"line_start":383,"line_end":383,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16354,"byte_end":16361,"line_start":384,"line_end":384,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16362,"byte_end":16365,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ Be very careful with the `link_section` attribute because it's easy to misuse in ways that cause","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16366,"byte_end":16466,"line_start":386,"line_end":386,"column_start":1,"column_end":101}},{"value":"/ undefined behavior. At some point in the future we may add an attribute to safely place static","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16467,"byte_end":16565,"line_start":387,"line_end":387,"column_start":1,"column_end":99}},{"value":"/ variables in this section.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16566,"byte_end":16596,"line_start":388,"line_end":388,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16597,"byte_end":16600,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ [attr-entry]: attr.entry.html","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16601,"byte_end":16634,"line_start":390,"line_end":390,"column_start":1,"column_end":34}},{"value":"/ [attr-exception]: attr.exception.html","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16635,"byte_end":16676,"line_start":391,"line_end":391,"column_start":1,"column_end":42}},{"value":"/ [attr-pre_init]: attr.pre_init.html","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16677,"byte_end":16716,"line_start":392,"line_end":392,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16935,"byte_end":16957,"line_start":399,"line_end":399,"column_start":1,"column_end":23}},{"value":"deny(warnings)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16958,"byte_end":16976,"line_start":400,"line_end":400,"column_start":1,"column_end":19}},{"value":"no_std","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":16977,"byte_end":16987,"line_start":401,"line_end":401,"column_start":1,"column_end":11}}]},{"kind":"Static","id":{"krate":0,"index":14},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17350,"byte_end":17358,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"__ONCE__","qualname":"::__ONCE__","value":"()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"export_name =\n  \"error: cortex-m-rt appears more than once in the dependency graph\"","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17239,"byte_end":17323,"line_start":415,"line_end":415,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17481,"byte_end":17495,"line_start":422,"line_end":422,"column_start":12,"column_end":26},"name":"ExceptionFrame","qualname":"::ExceptionFrame","value":"ExceptionFrame { r0, r1, r2, r3, r12, lr, pc, xpsr }","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"decl_id":null,"docs":" Registers stacked (pushed into the stack) during an exception\n","sig":null,"attributes":[{"value":"/ Registers stacked (pushed into the stack) during an exception","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17370,"byte_end":17435,"line_start":419,"line_end":419,"column_start":1,"column_end":66}},{"value":"repr(C)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17459,"byte_end":17469,"line_start":421,"line_end":421,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":81},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17543,"byte_end":17545,"line_start":424,"line_end":424,"column_start":9,"column_end":11},"name":"r0","qualname":"::ExceptionFrame::r0","value":"u32","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" (General purpose) Register 0\n","sig":null,"attributes":[{"value":"/ (General purpose) Register 0","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17502,"byte_end":17534,"line_start":423,"line_end":423,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":82},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17598,"byte_end":17600,"line_start":427,"line_end":427,"column_start":9,"column_end":11},"name":"r1","qualname":"::ExceptionFrame::r1","value":"u32","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" (General purpose) Register 1\n","sig":null,"attributes":[{"value":"/ (General purpose) Register 1","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17557,"byte_end":17589,"line_start":426,"line_end":426,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":83},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17653,"byte_end":17655,"line_start":430,"line_end":430,"column_start":9,"column_end":11},"name":"r2","qualname":"::ExceptionFrame::r2","value":"u32","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" (General purpose) Register 2\n","sig":null,"attributes":[{"value":"/ (General purpose) Register 2","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17612,"byte_end":17644,"line_start":429,"line_end":429,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":84},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17708,"byte_end":17710,"line_start":433,"line_end":433,"column_start":9,"column_end":11},"name":"r3","qualname":"::ExceptionFrame::r3","value":"u32","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" (General purpose) Register 3\n","sig":null,"attributes":[{"value":"/ (General purpose) Register 3","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17667,"byte_end":17699,"line_start":432,"line_end":432,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":85},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17764,"byte_end":17767,"line_start":436,"line_end":436,"column_start":9,"column_end":12},"name":"r12","qualname":"::ExceptionFrame::r12","value":"u32","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" (General purpose) Register 12\n","sig":null,"attributes":[{"value":"/ (General purpose) Register 12","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17722,"byte_end":17755,"line_start":435,"line_end":435,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":86},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17807,"byte_end":17809,"line_start":439,"line_end":439,"column_start":9,"column_end":11},"name":"lr","qualname":"::ExceptionFrame::lr","value":"u32","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Linker Register\n","sig":null,"attributes":[{"value":"/ Linker Register","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17779,"byte_end":17798,"line_start":438,"line_end":438,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":87},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17849,"byte_end":17851,"line_start":442,"line_end":442,"column_start":9,"column_end":11},"name":"pc","qualname":"::ExceptionFrame::pc","value":"u32","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Program Counter\n","sig":null,"attributes":[{"value":"/ Program Counter","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17821,"byte_end":17840,"line_start":441,"line_end":441,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":88},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17899,"byte_end":17903,"line_start":445,"line_end":445,"column_start":9,"column_end":13},"name":"xpsr","qualname":"::ExceptionFrame::xpsr","value":"u32","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":" Program Status Register\n","sig":null,"attributes":[{"value":"/ Program Status Register","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17863,"byte_end":17890,"line_start":444,"line_end":444,"column_start":5,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18732,"byte_end":18742,"line_start":473,"line_end":473,"column_start":8,"column_end":18},"name":"heap_start","qualname":"::heap_start","value":"pub fn heap_start() -> *mut u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the start of the heap","sig":null,"attributes":[{"value":"/ Returns a pointer to the start of the heap","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18603,"byte_end":18649,"line_start":469,"line_end":469,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18650,"byte_end":18653,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ The returned pointer is guaranteed to be 4-byte aligned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18654,"byte_end":18714,"line_start":471,"line_end":471,"column_start":1,"column_end":61}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18715,"byte_end":18724,"line_start":472,"line_end":472,"column_start":1,"column_end":10}}]},{"kind":"Static","id":{"krate":0,"index":25},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18971,"byte_end":18985,"line_start":486,"line_end":486,"column_start":12,"column_end":26},"name":"__RESET_VECTOR","qualname":"::__RESET_VECTOR","value":"unsafe extern \"C\" fn() -> !","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"link_section = \".vector_table.reset_vector\"","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18880,"byte_end":18926,"line_start":483,"line_end":483,"column_start":1,"column_end":47}},{"value":"no_mangle","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18927,"byte_end":18939,"line_start":484,"line_end":484,"column_start":1,"column_end":13}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18940,"byte_end":18959,"line_start":485,"line_end":485,"column_start":1,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":19273,"byte_end":19278,"line_start":497,"line_end":497,"column_start":26,"column_end":31},"name":"Reset","qualname":"::Reset","value":"pub unsafe extern \"C\" fn Reset() -> !","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"link_section = \".Reset\"","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":19208,"byte_end":19234,"line_start":495,"line_end":495,"column_start":1,"column_end":27}},{"value":"no_mangle","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":19235,"byte_end":19247,"line_start":496,"line_end":496,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21083,"byte_end":21093,"line_start":559,"line_end":559,"column_start":26,"column_end":36},"name":"HardFault_","qualname":"::HardFault_","value":"pub unsafe extern \"C\" fn HardFault_(&ExceptionFrame) -> !","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":20964,"byte_end":20990,"line_start":555,"line_end":555,"column_start":1,"column_end":27}},{"value":"link_section = \".HardFault.default\"","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21006,"byte_end":21044,"line_start":557,"line_end":557,"column_start":1,"column_end":39}},{"value":"no_mangle","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21045,"byte_end":21057,"line_start":558,"line_end":558,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21377,"byte_end":21392,"line_start":569,"line_end":569,"column_start":26,"column_end":41},"name":"DefaultHandler_","qualname":"::DefaultHandler_","value":"pub unsafe extern \"C\" fn DefaultHandler_() -> !","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_mangle","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21339,"byte_end":21351,"line_start":568,"line_end":568,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21657,"byte_end":21671,"line_start":579,"line_end":579,"column_start":26,"column_end":40},"name":"DefaultPreInit","qualname":"::DefaultPreInit","value":"pub unsafe extern \"C\" fn DefaultPreInit()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_mangle","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21619,"byte_end":21631,"line_start":578,"line_end":578,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":44},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21735,"byte_end":21749,"line_start":584,"line_end":584,"column_start":5,"column_end":19},"name":"NonMaskableInt","qualname":"::Exception::NonMaskableInt","value":"Exception::NonMaskableInt","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":46},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21821,"byte_end":21837,"line_start":589,"line_end":589,"column_start":5,"column_end":21},"name":"MemoryManagement","qualname":"::Exception::MemoryManagement","value":"Exception::MemoryManagement","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21797,"byte_end":21816,"line_start":588,"line_end":588,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":48},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21868,"byte_end":21876,"line_start":592,"line_end":592,"column_start":5,"column_end":13},"name":"BusFault","qualname":"::Exception::BusFault","value":"Exception::BusFault","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21844,"byte_end":21863,"line_start":591,"line_end":591,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":50},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21907,"byte_end":21917,"line_start":595,"line_end":595,"column_start":5,"column_end":15},"name":"UsageFault","qualname":"::Exception::UsageFault","value":"Exception::UsageFault","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21883,"byte_end":21902,"line_start":594,"line_end":594,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":52},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21961,"byte_end":21967,"line_start":600,"line_end":600,"column_start":5,"column_end":11},"name":"SVCall","qualname":"::Exception::SVCall","value":"Exception::SVCall","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":54},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21998,"byte_end":22010,"line_start":603,"line_end":603,"column_start":5,"column_end":17},"name":"DebugMonitor","qualname":"::Exception::DebugMonitor","value":"Exception::DebugMonitor","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21974,"byte_end":21993,"line_start":602,"line_end":602,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":56},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":22017,"byte_end":22023,"line_start":605,"line_end":605,"column_start":5,"column_end":11},"name":"PendSV","qualname":"::Exception::PendSV","value":"Exception::PendSV","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":58},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":22030,"byte_end":22037,"line_start":607,"line_end":607,"column_start":5,"column_end":12},"name":"SysTick","qualname":"::Exception::SysTick","value":"Exception::SysTick","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":43},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":21719,"byte_end":21728,"line_start":583,"line_end":583,"column_start":10,"column_end":19},"name":"Exception","qualname":"::Exception","value":"pub enum Exception {\n    NonMaskableInt,\n\n    #[cfg(not(armv6m))]\n    MemoryManagement,\n\n    #[cfg(not(armv6m))]\n    BusFault,\n\n    #[cfg(not(armv6m))]\n    UsageFault,\n    SVCall,\n\n    #[cfg(not(armv6m))]\n    DebugMonitor,\n    PendSV,\n    SysTick,\n}","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Union","id":{"krate":0,"index":70},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":22480,"byte_end":22486,"line_start":641,"line_end":641,"column_start":11,"column_end":17},"name":"Vector","qualname":"::Vector","value":"Vector {  }","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":73},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":22634,"byte_end":22646,"line_start":649,"line_end":649,"column_start":12,"column_end":24},"name":"__EXCEPTIONS","qualname":"::__EXCEPTIONS","value":"[Vector; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"link_section = \".vector_table.exceptions\"","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":22565,"byte_end":22609,"line_start":647,"line_end":647,"column_start":1,"column_end":45}},{"value":"no_mangle","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":22610,"byte_end":22622,"line_start":648,"line_end":648,"column_start":1,"column_end":13}}]},{"kind":"Static","id":{"krate":0,"index":75},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":24472,"byte_end":24484,"line_start":709,"line_end":709,"column_start":12,"column_end":24},"name":"__INTERRUPTS","qualname":"::__INTERRUPTS","value":"[unsafe extern \"C\" fn(); ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(any(not(feature = \"device\"), test), not(armv6m)))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":24327,"byte_end":24387,"line_start":705,"line_end":705,"column_start":1,"column_end":61}},{"value":"link_section = \".vector_table.interrupts\"","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":24403,"byte_end":24447,"line_start":707,"line_end":707,"column_start":1,"column_end":45}},{"value":"no_mangle","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":24448,"byte_end":24460,"line_start":708,"line_end":708,"column_start":1,"column_end":13}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17933,"byte_end":17947,"line_start":448,"line_end":448,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18062,"byte_end":18065,"line_start":451,"line_end":451,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":17933,"byte_end":17947,"line_start":448,"line_end":448,"column_start":21,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":80},"to":{"krate":1,"index":6960}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.6.13/src/lib.rs","byte_start":18062,"byte_end":18065,"line_start":451,"line_end":451,"column_start":29,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":17},"to":{"krate":1,"index":6960}}]}