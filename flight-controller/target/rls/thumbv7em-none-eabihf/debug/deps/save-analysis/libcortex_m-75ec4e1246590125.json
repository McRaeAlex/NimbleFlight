{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7","program":"/home/mcrae/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cortex_m","--edition=2018","/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=75ec4e1246590125","-C","extra-filename=-75ec4e1246590125","--out-dir","/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/mcrae/Code/hermes/target/rls/debug/deps","--extern","aligned=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libaligned-1d9390f6ed9b1a13.rmeta","--extern","bare_metal=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libbare_metal-82ec2b472a5005e0.rmeta","--extern","bitfield=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libbitfield-f3b82647aa2c221a.rmeta","--extern","cortex_m_0_7=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m-233f5b9339e7813b.rmeta","--extern","volatile_register=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libvolatile_register-42bd4e8054ddc45c.rmeta","--cap-lints","allow","--cfg","cortex_m","--cfg","armv7m","--cfg","armv7em","--cfg","has_fpu","-L","/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-666e4cf709e45b81/out","--error-format=json","--sysroot","/home/mcrae/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m-75ec4e1246590125.rmeta"},"prelude":{"crate_id":{"name":"cortex_m","disambiguator":[12626187051027814012,16491162705167700869]},"crate_root":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src","external_crates":[{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2184632775997829466,18026496178680965583]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3726307931522043477,4911878782996857177]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8506066526834043935,2338947288633172727]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":4,"id":{"name":"aligned","disambiguator":[5958134965927947554,11150977462593942335]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":5,"id":{"name":"as_slice","disambiguator":[17268065031624189267,13044817067311901653]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":6,"id":{"name":"generic_array","disambiguator":[11162197228457538909,16109310679438559951]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":7,"id":{"name":"typenum","disambiguator":[2848240836844831227,8884150917098890013]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":8,"id":{"name":"generic_array","disambiguator":[13220144597453330005,8574045979898816905]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":9,"id":{"name":"generic_array","disambiguator":[17030001028011470717,16058156605002383023]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":10,"id":{"name":"stable_deref_trait","disambiguator":[2666301955834542947,8649774218890581719]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":11,"id":{"name":"bare_metal","disambiguator":[4564207712410018107,9487563642666486471]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":12,"id":{"name":"volatile_register","disambiguator":[3895265408538198920,17962273546913066849]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":13,"id":{"name":"vcell","disambiguator":[13115093308910904468,13284027448544462362]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":14,"id":{"name":"cortex_m","disambiguator":[16736174643873131162,13751410424463156830]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":15,"id":{"name":"embedded_hal","disambiguator":[4395611530972436292,17551568692586388236]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":16,"id":{"name":"nb","disambiguator":[15401273450865999483,13772608842728756265]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":17,"id":{"name":"nb","disambiguator":[15010377001352867217,15689185407496902103]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","num":18,"id":{"name":"void","disambiguator":[13969028487453651476,12471677446926910835]}}],"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":0,"byte_end":2397,"line_start":1,"line_end":71,"column_start":1,"column_end":40}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":14},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":2223,"byte_end":2226,"line_start":60,"line_end":60,"column_start":24,"column_end":27},"alias_span":null,"name":"asm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":58},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":2228,"byte_end":2237,"line_start":60,"line_end":60,"column_start":29,"column_end":38},"alias_span":null,"name":"interrupt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":104},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":16921,"byte_end":16934,"line_start":7,"line_end":7,"column_start":40,"column_end":53},"alias_span":null,"name":"RegisterBlock","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":14,"index":357},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":29924,"byte_end":29937,"line_start":13,"line_end":13,"column_start":41,"column_end":54},"alias_span":null,"name":"RegisterBlock","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":14,"index":804},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":29996,"byte_end":30009,"line_start":16,"line_end":16,"column_start":40,"column_end":53},"alias_span":null,"name":"FpuAccessMode","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":14,"index":822},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":33210,"byte_end":33219,"line_start":103,"line_end":103,"column_start":41,"column_end":50},"alias_span":null,"name":"Exception","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":14,"index":852},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":33221,"byte_end":33231,"line_start":103,"line_end":103,"column_start":52,"column_end":62},"alias_span":null,"name":"VectActive","value":"","parent":{"krate":0,"index":140}},{"kind":"Use","ref_id":{"krate":14,"index":249},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11554,"byte_end":11557,"line_start":88,"line_end":88,"column_start":35,"column_end":38},"alias_span":null,"name":"itm","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":131},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11595,"byte_end":11600,"line_start":90,"line_end":90,"column_start":36,"column_end":41},"alias_span":null,"name":"cpuid","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":169},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11602,"byte_end":11605,"line_start":90,"line_end":90,"column_start":43,"column_end":46},"alias_span":null,"name":"dcb","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":187},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11607,"byte_end":11610,"line_start":90,"line_end":90,"column_start":48,"column_end":51},"alias_span":null,"name":"dwt","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":462},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11612,"byte_end":11616,"line_start":90,"line_end":90,"column_start":53,"column_end":57},"alias_span":null,"name":"syst","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":218},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11674,"byte_end":11677,"line_start":92,"line_end":92,"column_start":36,"column_end":39},"alias_span":null,"name":"fpb","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":502},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11679,"byte_end":11683,"line_start":92,"line_end":92,"column_start":41,"column_end":45},"alias_span":null,"name":"tpiu","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":232},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11763,"byte_end":11766,"line_start":94,"line_end":94,"column_start":35,"column_end":38},"alias_span":null,"name":"fpu","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":558},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14529,"byte_end":14534,"line_start":202,"line_end":202,"column_start":36,"column_end":41},"alias_span":null,"name":"CPUID","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":567},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14536,"byte_end":14539,"line_start":202,"line_end":202,"column_start":43,"column_end":46},"alias_span":null,"name":"DCB","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":576},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14541,"byte_end":14544,"line_start":202,"line_end":202,"column_start":48,"column_end":51},"alias_span":null,"name":"DWT","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":585},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14546,"byte_end":14549,"line_start":202,"line_end":202,"column_start":53,"column_end":56},"alias_span":null,"name":"FPB","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":594},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14551,"byte_end":14554,"line_start":202,"line_end":202,"column_start":58,"column_end":61},"alias_span":null,"name":"FPU","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":655},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14556,"byte_end":14560,"line_start":202,"line_end":202,"column_start":63,"column_end":67},"alias_span":null,"name":"SYST","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":664},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14562,"byte_end":14566,"line_start":202,"line_end":202,"column_start":69,"column_end":73},"alias_span":null,"name":"TPIU","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":614},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14629,"byte_end":14632,"line_start":205,"line_end":205,"column_start":35,"column_end":38},"alias_span":null,"name":"ITM","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":14,"index":676},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":53073,"byte_end":53080,"line_start":30,"line_end":30,"column_start":33,"column_end":40},"alias_span":null,"name":"basepri","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":14,"index":679},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":53327,"byte_end":53338,"line_start":40,"line_end":40,"column_start":33,"column_end":44},"alias_span":null,"name":"basepri_max","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":14,"index":681},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":53547,"byte_end":53554,"line_start":49,"line_end":49,"column_start":33,"column_end":40},"alias_span":null,"name":"control","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":14,"index":702},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":53632,"byte_end":53641,"line_start":52,"line_end":52,"column_start":33,"column_end":42},"alias_span":null,"name":"faultmask","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":14,"index":746},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":53851,"byte_end":53854,"line_start":61,"line_end":61,"column_start":34,"column_end":37},"alias_span":null,"name":"msp","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":14,"index":749},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":53856,"byte_end":53863,"line_start":61,"line_end":61,"column_start":39,"column_end":46},"alias_span":null,"name":"primask","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":14,"index":754},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":53865,"byte_end":53868,"line_start":61,"line_end":61,"column_start":48,"column_end":51},"alias_span":null,"name":"psp","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":2385,"byte_end":2396,"line_start":71,"line_end":71,"column_start":28,"column_end":39},"alias_span":null,"name":"Peripherals","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":0,"byte_end":2397,"line_start":1,"line_end":71,"column_start":1,"column_end":40},"name":"","qualname":"::","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":40},{"krate":0,"index":302},{"krate":0,"index":311}],"decl_id":null,"docs":" Low level access to Cortex-M processors","sig":null,"attributes":[{"value":"/ Low level access to Cortex-M processors","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":0,"byte_end":43,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":44,"byte_end":47,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":48,"byte_end":72,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":73,"byte_end":76,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - Access to core peripherals like NVIC, SCB and SysTick.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":77,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ - Access to core registers like CONTROL, MSP and PSR.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":138,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/ - Interrupt manipulation mechanisms","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":196,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ - Safe wrappers around Cortex-M specific instructions like `bkpt`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":236,"byte_end":305,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":306,"byte_end":309,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Optional features","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":310,"byte_end":333,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":334,"byte_end":337,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## `inline-asm`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":338,"byte_end":357,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":358,"byte_end":361,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled the implementation of all the functions inside the `asm` and","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":362,"byte_end":455,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ `register` modules use inline assembly (`llvm_asm!`) instead of external assembly (FFI into separate","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":456,"byte_end":560,"line_start":15,"line_end":15,"column_start":1,"column_end":105}},{"value":"/ assembly files pre-compiled using `arm-none-eabi-gcc`). The advantages of enabling `inline-asm`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":561,"byte_end":660,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ are:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":661,"byte_end":669,"line_start":17,"line_end":17,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":670,"byte_end":673,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ - Reduced overhead. FFI eliminates the possibility of inlining so all operations include a","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":674,"byte_end":768,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ function call overhead when `inline-asm` is not enabled.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":769,"byte_end":829,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":830,"byte_end":833,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - Some of the `register` API only becomes available only when `inline-asm` is enabled. Check the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":834,"byte_end":934,"line_start":22,"line_end":22,"column_start":1,"column_end":101}},{"value":"/ API docs for details.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":935,"byte_end":960,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":961,"byte_end":964,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The disadvantage is that `inline-asm` requires a nightly toolchain.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":965,"byte_end":1036,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":1037,"byte_end":1040,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Minimum Supported Rust Version (MSRV)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":1041,"byte_end":1084,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":1085,"byte_end":1088,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This crate is guaranteed to compile on stable Rust 1.36 and up. It *might*","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":1089,"byte_end":1167,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ compile with older versions but that may change in any new patch release.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":1168,"byte_end":1245,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"deny(missing_docs)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":1303,"byte_end":1325,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":1326,"byte_end":1336,"line_start":34,"line_end":34,"column_start":1,"column_end":11}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":1337,"byte_end":1367,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":1368,"byte_end":1405,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"deny(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":2017,"byte_end":2065,"line_start":50,"line_end":50,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"itm","qualname":"::itm","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":350},{"krate":0,"index":25},{"krate":0,"index":352},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39}],"decl_id":null,"docs":" Instrumentation Trace Macrocell","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":2285,"byte_end":2304,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/ Instrumentation Trace Macrocell","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":5129,"byte_end":5164,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":5165,"byte_end":5168,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ **NOTE** This module is only available on ARMv7-M and newer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":5169,"byte_end":5232,"line_start":3,"line_end":3,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":6116,"byte_end":6125,"line_start":39,"line_end":39,"column_start":8,"column_end":17},"name":"write_all","qualname":"::itm::write_all","value":"pub fn write_all(&mut Stim, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Writes a `buffer` to the ITM `port`\n","sig":null,"attributes":[{"value":"/ Writes a `buffer` to the ITM `port`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":5944,"byte_end":5983,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"allow(clippy :: cast_ptr_alignment)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":5984,"byte_end":6020,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":6021,"byte_end":6069,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"allow(clippy :: transmute_ptr_to_ptr)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":6070,"byte_end":6108,"line_start":38,"line_end":38,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7659,"byte_end":7672,"line_start":100,"line_end":100,"column_start":8,"column_end":21},"name":"write_aligned","qualname":"::itm::write_aligned","value":"pub fn write_aligned(&mut Stim, &Aligned<A4, [u8]>)","parent":null,"children":[],"decl_id":null,"docs":" Writes a 4-byte aligned `buffer` to the ITM `port`","sig":null,"attributes":[{"value":"/ Writes a 4-byte aligned `buffer` to the ITM `port`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7172,"byte_end":7226,"line_start":83,"line_end":83,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7227,"byte_end":7230,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7231,"byte_end":7245,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7246,"byte_end":7249,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ``` ignore","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7250,"byte_end":7264,"line_start":87,"line_end":87,"column_start":1,"column_end":15}},{"value":"/ let mut buffer: Aligned<A4, _> = Aligned([0; 14]);","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7265,"byte_end":7319,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7320,"byte_end":7323,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ buffer.copy_from_slice(b\"Hello, world!\\n\");","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7324,"byte_end":7371,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7372,"byte_end":7375,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ itm::write_aligned(&itm.stim[0], &buffer);","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7376,"byte_end":7422,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7423,"byte_end":7426,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // Or equivalently","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7427,"byte_end":7449,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/ itm::write_aligned(&itm.stim[0], &Aligned(*b\"Hello, world!\\n\"));","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7450,"byte_end":7518,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7519,"byte_end":7526,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"allow(clippy :: cast_ptr_alignment)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7527,"byte_end":7563,"line_start":97,"line_end":97,"column_start":1,"column_end":37}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7564,"byte_end":7612,"line_start":98,"line_end":98,"column_start":1,"column_end":49}},{"value":"allow(clippy :: transmute_ptr_to_ptr)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":7613,"byte_end":7651,"line_start":99,"line_end":99,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":8526,"byte_end":8535,"line_start":137,"line_end":137,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"::itm::write_fmt","value":"pub fn write_fmt(&mut Stim, fmt::Arguments)","parent":null,"children":[],"decl_id":null,"docs":" Writes `fmt::Arguments` to the ITM `port`\n","sig":null,"attributes":[{"value":"/ Writes `fmt::Arguments` to the ITM `port`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":8463,"byte_end":8508,"line_start":135,"line_end":135,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":8509,"byte_end":8518,"line_start":136,"line_end":136,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":8699,"byte_end":8708,"line_start":145,"line_end":145,"column_start":8,"column_end":17},"name":"write_str","qualname":"::itm::write_str","value":"pub fn write_str(&mut Stim, &str)","parent":null,"children":[],"decl_id":null,"docs":" Writes a string to the ITM `port`\n","sig":null,"attributes":[{"value":"/ Writes a string to the ITM `port`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":8644,"byte_end":8681,"line_start":143,"line_end":143,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":8682,"byte_end":8691,"line_start":144,"line_end":144,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":40},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"peripheral","qualname":"::peripheral","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":358},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":62},{"krate":0,"index":78},{"krate":0,"index":140},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":256},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299}],"decl_id":null,"docs":" Core peripherals","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":8784,"byte_end":8824,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/ Core peripherals","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":8825,"byte_end":8845,"line_start":2,"line_end":2,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":8846,"byte_end":8849,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # API","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":8850,"byte_end":8859,"line_start":4,"line_end":4,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":8860,"byte_end":8863,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ To use (most of) the peripheral API first you must get an *instance* of the peripheral. All the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":8864,"byte_end":8963,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ core peripherals are modeled as singletons (there can only ever be, at most, one instance of any","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":8964,"byte_end":9064,"line_start":7,"line_end":7,"column_start":1,"column_end":101}},{"value":"/ one of them at any given point in time) and the only way to get an instance of them is through","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9065,"byte_end":9163,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ the [`Peripherals::take`](struct.Peripherals.html#method.take) method.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9164,"byte_end":9238,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9239,"byte_end":9242,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9243,"byte_end":9257,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/ use cortex_m::peripheral::Peripherals;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9258,"byte_end":9300,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9301,"byte_end":9304,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9305,"byte_end":9320,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/     let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9321,"byte_end":9380,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/     peripherals.DWT.enable_cycle_counter();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9381,"byte_end":9428,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9429,"byte_end":9434,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9435,"byte_end":9442,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9443,"byte_end":9446,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This method can only be successfully called *once* -- this is why the method returns an","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9447,"byte_end":9538,"line_start":20,"line_end":20,"column_start":1,"column_end":92}},{"value":"/ `Option`. Subsequent calls to the method will result in a `None` value being returned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9539,"byte_end":9629,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9630,"byte_end":9633,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9634,"byte_end":9648,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/ use cortex_m::peripheral::Peripherals;","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9649,"byte_end":9691,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9692,"byte_end":9695,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9696,"byte_end":9711,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/     let ok = Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9712,"byte_end":9758,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/     let panics = Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9759,"byte_end":9809,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9810,"byte_end":9815,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9816,"byte_end":9823,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ A part of the peripheral API doesn't require access to a peripheral instance. This part of the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9824,"byte_end":9922,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ API is provided as static methods on the peripheral types. One example is the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":9923,"byte_end":10004,"line_start":32,"line_end":32,"column_start":1,"column_end":82}},{"value":"/ [`DWT::get_cycle_count`](struct.DWT.html#method.get_cycle_count) method.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10005,"byte_end":10081,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10082,"byte_end":10085,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10086,"byte_end":10100,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/ use cortex_m::peripheral::{DWT, Peripherals};","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10101,"byte_end":10150,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10151,"byte_end":10154,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10155,"byte_end":10170,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/     {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10171,"byte_end":10180,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/         let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10181,"byte_end":10244,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/         peripherals.DWT.enable_cycle_counter();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10245,"byte_end":10296,"line_start":41,"line_end":41,"column_start":1,"column_end":52}},{"value":"/     } // all the peripheral singletons are destroyed here","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10297,"byte_end":10358,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10359,"byte_end":10362,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     // but this method can be called without a DWT instance","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10363,"byte_end":10426,"line_start":44,"line_end":44,"column_start":1,"column_end":64}},{"value":"/     let cyccnt = DWT::get_cycle_count();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10427,"byte_end":10471,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10472,"byte_end":10477,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10478,"byte_end":10485,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10486,"byte_end":10489,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The singleton property can be *unsafely* bypassed using the `ptr` static method which is","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10490,"byte_end":10582,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ available on all the peripheral types. This method is a useful building block for implementing","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10583,"byte_end":10681,"line_start":50,"line_end":50,"column_start":1,"column_end":99}},{"value":"/ safe higher level abstractions.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10682,"byte_end":10717,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10718,"byte_end":10721,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10722,"byte_end":10736,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ use cortex_m::peripheral::{DWT, Peripherals};","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10737,"byte_end":10786,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10787,"byte_end":10790,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10791,"byte_end":10806,"line_start":56,"line_end":56,"column_start":1,"column_end":16}},{"value":"/     {","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10807,"byte_end":10816,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10817,"byte_end":10880,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/         peripherals.DWT.enable_cycle_counter();","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10881,"byte_end":10932,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/     } // all the peripheral singletons are destroyed here","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10933,"byte_end":10994,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10995,"byte_end":10998,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     // actually safe because this is an atomic read with no side effects","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":10999,"byte_end":11075,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/     let cyccnt = unsafe { (*DWT::ptr()).cyccnt.read() };","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11076,"byte_end":11136,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11137,"byte_end":11142,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11143,"byte_end":11150,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11151,"byte_end":11154,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11155,"byte_end":11171,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11172,"byte_end":11175,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ - ARMv7-M Architecture Reference Manual (Issue E.b) - Chapter B3","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11176,"byte_end":11244,"line_start":69,"line_end":69,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cbp","qualname":"::peripheral::cbp","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" Cache and branch predictor maintenance operations","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11370,"byte_end":11389,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/ Cache and branch predictor maintenance operations","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":16732,"byte_end":16785,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":16786,"byte_end":16789,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Available only on ARMv7-M (`thumbv7*m-none-eabi*`)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":16790,"byte_end":16851,"line_start":3,"line_end":3,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17181,"byte_end":17188,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"iciallu","qualname":"<CBP>::iciallu","value":"pub fn iciallu(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" I-cache invalidate all to PoU\n","sig":null,"attributes":[{"value":"/ I-cache invalidate all to PoU","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17122,"byte_end":17155,"line_start":15,"line_end":15,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17160,"byte_end":17169,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17337,"byte_end":17344,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"icimvau","qualname":"<CBP>::icimvau","value":"pub fn icimvau(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" I-cache invalidate by MVA to PoU\n","sig":null,"attributes":[{"value":"/ I-cache invalidate by MVA to PoU","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17275,"byte_end":17311,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17316,"byte_end":17325,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17505,"byte_end":17512,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"dcimvac","qualname":"<CBP>::dcimvac","value":"pub fn dcimvac(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache invalidate by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache invalidate by MVA to PoC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17443,"byte_end":17479,"line_start":31,"line_end":31,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17484,"byte_end":17493,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17754,"byte_end":17759,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"dcisw","qualname":"<CBP>::dcisw","value":"pub fn dcisw(&mut Self, u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" D-cache invalidate by set-way","sig":null,"attributes":[{"value":"/ D-cache invalidate by set-way","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17611,"byte_end":17644,"line_start":39,"line_end":39,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17649,"byte_end":17652,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ `set` is masked to be between 0 and 3, and `way` between 0 and 511.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17657,"byte_end":17728,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17733,"byte_end":17742,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":18827,"byte_end":18834,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"dccmvau","qualname":"<CBP>::dccmvau","value":"pub fn dccmvau(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean by MVA to PoU\n","sig":null,"attributes":[{"value":"/ D-cache clean by MVA to PoU","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":18770,"byte_end":18801,"line_start":61,"line_end":61,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":18806,"byte_end":18815,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":18990,"byte_end":18997,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"dccmvac","qualname":"<CBP>::dccmvac","value":"pub fn dccmvac(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache clean by MVA to PoC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":18933,"byte_end":18964,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":18969,"byte_end":18978,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19234,"byte_end":19239,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"dccsw","qualname":"<CBP>::dccsw","value":"pub fn dccsw(&mut Self, u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean by set-way","sig":null,"attributes":[{"value":"/ D-cache clean by set-way","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19096,"byte_end":19124,"line_start":77,"line_end":77,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19129,"byte_end":19132,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ `set` is masked to be between 0 and 3, and `way` between 0 and 511.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19137,"byte_end":19208,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19213,"byte_end":19222,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19674,"byte_end":19682,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"dccimvac","qualname":"<CBP>::dccimvac","value":"pub fn dccimvac(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean and invalidate by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache clean and invalidate by MVA to PoC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19602,"byte_end":19648,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19653,"byte_end":19662,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19935,"byte_end":19941,"line_start":103,"line_end":103,"column_start":12,"column_end":18},"name":"dccisw","qualname":"<CBP>::dccisw","value":"pub fn dccisw(&mut Self, u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean and invalidate by set-way","sig":null,"attributes":[{"value":"/ D-cache clean and invalidate by set-way","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19782,"byte_end":19825,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19830,"byte_end":19833,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ `set` is masked to be between 0 and 3, and `way` between 0 and 511.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19838,"byte_end":19909,"line_start":101,"line_end":101,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":19914,"byte_end":19923,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":20366,"byte_end":20372,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"bpiall","qualname":"<CBP>::bpiall","value":"pub fn bpiall(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Branch predictor invalidate all\n","sig":null,"attributes":[{"value":"/ Branch predictor invalidate all","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":20305,"byte_end":20340,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":20345,"byte_end":20354,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpu","qualname":"::peripheral::mpu","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20456,"byte_end":20482,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20559,"byte_end":20572,"line_start":7,"line_end":7,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::mpu::RegisterBlock","value":"RegisterBlock { _type, ctrl, rnr, rbar, rasr, rbar_a1, rsar_a1, rbar_a2, rsar_a2, rbar_a3, rsar_a3 }","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20518,"byte_end":20536,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20537,"byte_end":20547,"line_start":6,"line_end":6,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":67},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20596,"byte_end":20601,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"_type","qualname":"::peripheral::mpu::RegisterBlock::_type","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Type\n","sig":null,"attributes":[{"value":"/ Type","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20579,"byte_end":20587,"line_start":8,"line_end":8,"column_start":5,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":68},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20636,"byte_end":20640,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::peripheral::mpu::RegisterBlock::ctrl","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Control\n","sig":null,"attributes":[{"value":"/ Control","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20616,"byte_end":20627,"line_start":10,"line_end":10,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":69},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20681,"byte_end":20684,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"rnr","qualname":"::peripheral::mpu::RegisterBlock::rnr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Region Number\n","sig":null,"attributes":[{"value":"/ Region Number","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20655,"byte_end":20672,"line_start":12,"line_end":12,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":70},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20731,"byte_end":20735,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"rbar","qualname":"::peripheral::mpu::RegisterBlock::rbar","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Region Base Address\n","sig":null,"attributes":[{"value":"/ Region Base Address","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20699,"byte_end":20722,"line_start":14,"line_end":14,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":71},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20788,"byte_end":20792,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"rasr","qualname":"::peripheral::mpu::RegisterBlock::rasr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Region Attribute and Size\n","sig":null,"attributes":[{"value":"/ Region Attribute and Size","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20750,"byte_end":20779,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":72},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20835,"byte_end":20842,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"rbar_a1","qualname":"::peripheral::mpu::RegisterBlock::rbar_a1","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Alias 1 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 1 of RBAR","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20807,"byte_end":20826,"line_start":18,"line_end":18,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":73},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20885,"byte_end":20892,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"name":"rsar_a1","qualname":"::peripheral::mpu::RegisterBlock::rsar_a1","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Alias 1 of RSAR\n","sig":null,"attributes":[{"value":"/ Alias 1 of RSAR","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20857,"byte_end":20876,"line_start":20,"line_end":20,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":74},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20935,"byte_end":20942,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"rbar_a2","qualname":"::peripheral::mpu::RegisterBlock::rbar_a2","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Alias 2 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 2 of RBAR","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20907,"byte_end":20926,"line_start":22,"line_end":22,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":75},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20985,"byte_end":20992,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"name":"rsar_a2","qualname":"::peripheral::mpu::RegisterBlock::rsar_a2","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Alias 2 of RSAR\n","sig":null,"attributes":[{"value":"/ Alias 2 of RSAR","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":20957,"byte_end":20976,"line_start":24,"line_end":24,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":76},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":21035,"byte_end":21042,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"name":"rbar_a3","qualname":"::peripheral::mpu::RegisterBlock::rbar_a3","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Alias 3 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 3 of RBAR","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":21007,"byte_end":21026,"line_start":26,"line_end":26,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":77},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":21085,"byte_end":21092,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"rsar_a3","qualname":"::peripheral::mpu::RegisterBlock::rsar_a3","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":66},"children":[],"decl_id":null,"docs":" Alias 3 of RSAR\n","sig":null,"attributes":[{"value":"/ Alias 3 of RSAR","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mpu.rs","byte_start":21057,"byte_end":21076,"line_start":28,"line_end":28,"column_start":5,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":78},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nvic","qualname":"::peripheral::nvic","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":111}],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21106,"byte_end":21144,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21324,"byte_end":21337,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::nvic::RegisterBlock","value":"RegisterBlock { iser, icer, ispr, icpr, iabr, ipr, stir }","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21283,"byte_end":21301,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21302,"byte_end":21312,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":86},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21377,"byte_end":21381,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"iser","qualname":"::peripheral::nvic::RegisterBlock::iser","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Interrupt Set-Enable\n","sig":null,"attributes":[{"value":"/ Interrupt Set-Enable","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21344,"byte_end":21368,"line_start":13,"line_end":13,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":90},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21466,"byte_end":21470,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"icer","qualname":"::peripheral::nvic::RegisterBlock::icer","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Interrupt Clear-Enable\n","sig":null,"attributes":[{"value":"/ Interrupt Clear-Enable","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21431,"byte_end":21457,"line_start":18,"line_end":18,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":94},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21554,"byte_end":21558,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"ispr","qualname":"::peripheral::nvic::RegisterBlock::ispr","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Interrupt Set-Pending\n","sig":null,"attributes":[{"value":"/ Interrupt Set-Pending","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21520,"byte_end":21545,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":98},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21644,"byte_end":21648,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"icpr","qualname":"::peripheral::nvic::RegisterBlock::icpr","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Interrupt Clear-Pending\n","sig":null,"attributes":[{"value":"/ Interrupt Clear-Pending","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21608,"byte_end":21635,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":102},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21791,"byte_end":21795,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"name":"iabr","qualname":"::peripheral::nvic::RegisterBlock::iabr","value":"[volatile_register::RO<u32>; 16]","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Interrupt Active Bit (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Interrupt Active Bit (not present on Cortex-M0 variants)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21698,"byte_end":21758,"line_start":33,"line_end":33,"column_start":5,"column_end":65}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21763,"byte_end":21782,"line_start":34,"line_end":34,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":106},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":22473,"byte_end":22476,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"name":"ipr","qualname":"::peripheral::nvic::RegisterBlock::ipr","value":"[volatile_register::RW<u8>; 496]","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Interrupt Priority","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21891,"byte_end":21910,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/ Interrupt Priority","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21915,"byte_end":21937,"line_start":42,"line_end":42,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21942,"byte_end":21945,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ On ARMv7-M, 124 word-sized registers are available. Each of those","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":21950,"byte_end":22019,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ contains of 4 interrupt priorities of 8 byte each.The architecture","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":22024,"byte_end":22094,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ specifically allows accessing those along byte boundaries, so they are","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":22099,"byte_end":22173,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ represented as 496 byte-sized registers, for convenience, and to allow","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":22178,"byte_end":22252,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ atomic priority updates.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":22257,"byte_end":22285,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":22290,"byte_end":22293,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, the registers must only be accessed along word boundaries,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":22298,"byte_end":22372,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ so convenient byte-sized representation wouldn't work on that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":22377,"byte_end":22442,"line_start":51,"line_end":51,"column_start":5,"column_end":70}},{"value":"/ architecture.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":22447,"byte_end":22464,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":110},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23215,"byte_end":23219,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"stir","qualname":"::peripheral::nvic::RegisterBlock::stir","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":" Software Trigger Interrupt\n","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23152,"byte_end":23171,"line_start":72,"line_end":72,"column_start":5,"column_end":24}},{"value":"/ Software Trigger Interrupt","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23176,"byte_end":23206,"line_start":73,"line_end":73,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23619,"byte_end":23626,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"request","qualname":"<NVIC>::request","value":"pub fn request<I>(&mut Self, I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Request an IRQ in software","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23249,"byte_end":23268,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/ Request an IRQ in software","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23273,"byte_end":23303,"line_start":79,"line_end":79,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23308,"byte_end":23311,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Writing a value to the INTID field is the same as manually pending an interrupt by setting","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23316,"byte_end":23410,"line_start":81,"line_end":81,"column_start":5,"column_end":99}},{"value":"/ the corresponding interrupt bit in an Interrupt Set Pending Register. This is similar to","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23415,"byte_end":23507,"line_start":82,"line_end":82,"column_start":5,"column_end":97}},{"value":"/ `set_pending`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23512,"byte_end":23530,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23535,"byte_end":23538,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This method is not available on ARMv6-M chips.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23543,"byte_end":23593,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23598,"byte_end":23607,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23930,"byte_end":23943,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"clear_pending","qualname":"<NVIC>::clear_pending","value":"pub fn clear_pending<I>(&mut Self, I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Clears `interrupt`'s pending state\n","sig":null,"attributes":[{"value":"/ Clears `interrupt`'s pending state","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23802,"byte_end":23840,"line_start":98,"line_end":98,"column_start":5,"column_end":43}},{"value":"deprecated(since = \"0.5.8\", note = \"Use `NVIC::unpend`\")","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23845,"byte_end":23904,"line_start":99,"line_end":99,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23909,"byte_end":23918,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24096,"byte_end":24100,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"mask","qualname":"<NVIC>::mask","value":"pub fn mask<I>(I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Disables `interrupt`\n","sig":null,"attributes":[{"value":"/ Disables `interrupt`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24046,"byte_end":24070,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24075,"byte_end":24084,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24488,"byte_end":24494,"line_start":123,"line_end":123,"column_start":19,"column_end":25},"name":"unmask","qualname":"<NVIC>::unmask","value":"pub unsafe fn unmask<I>(I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Enables `interrupt`","sig":null,"attributes":[{"value":"/ Enables `interrupt`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24340,"byte_end":24363,"line_start":119,"line_end":119,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24368,"byte_end":24371,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function is `unsafe` because it can break mask-based critical sections","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24376,"byte_end":24455,"line_start":121,"line_end":121,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24460,"byte_end":24469,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24832,"byte_end":24839,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"disable","qualname":"<NVIC>::disable","value":"pub fn disable<I>(&mut Self, I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Disables `interrupt`\n","sig":null,"attributes":[{"value":"/ Disables `interrupt`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24720,"byte_end":24744,"line_start":132,"line_end":132,"column_start":5,"column_end":29}},{"value":"deprecated(since = \"0.6.1\", note = \"Use `NVIC::mask`\")","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24749,"byte_end":24806,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24811,"byte_end":24820,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25190,"byte_end":25196,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"enable","qualname":"<NVIC>::enable","value":"pub fn enable<I>(&mut Self, I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" **WARNING** This method is a soundness hole in the API; it should actually be an `unsafe`\n function. Use `NVIC::unmask` which has the right unsafety.\n","sig":null,"attributes":[{"value":"/ **WARNING** This method is a soundness hole in the API; it should actually be an `unsafe`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":24940,"byte_end":25033,"line_start":142,"line_end":142,"column_start":5,"column_end":98}},{"value":"/ function. Use `NVIC::unmask` which has the right unsafety.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25038,"byte_end":25100,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"deprecated(since = \"0.6.1\", note = \"Use `NVIC::unmask`\")","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25105,"byte_end":25164,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25169,"byte_end":25178,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25639,"byte_end":25651,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"get_priority","qualname":"<NVIC>::get_priority","value":"pub fn get_priority<I>(I) -> u8 where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Returns the NVIC priority of `interrupt`","sig":null,"attributes":[{"value":"/ Returns the NVIC priority of `interrupt`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25310,"byte_end":25354,"line_start":153,"line_end":153,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25359,"byte_end":25362,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ *NOTE* NVIC encodes priority in the highest bits of a byte so values like `1` and `2` map","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25367,"byte_end":25460,"line_start":155,"line_end":155,"column_start":5,"column_end":98}},{"value":"/ to the same priority. Also for NVIC priorities, a lower value (e.g. `16`) has higher","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25465,"byte_end":25553,"line_start":156,"line_end":156,"column_start":5,"column_end":93}},{"value":"/ priority (urgency) than a larger value (e.g. `32`).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25558,"byte_end":25613,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":25618,"byte_end":25627,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":26326,"byte_end":26335,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"is_active","qualname":"<NVIC>::is_active","value":"pub fn is_active<I>(I) -> bool where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Is `interrupt` active or pre-empted and stacked\n","sig":null,"attributes":[{"value":"/ Is `interrupt` active or pre-empted and stacked","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":26225,"byte_end":26276,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":26281,"byte_end":26300,"line_start":180,"line_end":180,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":26305,"byte_end":26314,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":26676,"byte_end":26686,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<NVIC>::is_enabled","value":"pub fn is_enabled<I>(I) -> bool where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Checks if `interrupt` is enabled\n","sig":null,"attributes":[{"value":"/ Checks if `interrupt` is enabled","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":26614,"byte_end":26650,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":26655,"byte_end":26664,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27027,"byte_end":27037,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"is_pending","qualname":"<NVIC>::is_pending","value":"pub fn is_pending<I>(I) -> bool where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Checks if `interrupt` is pending\n","sig":null,"attributes":[{"value":"/ Checks if `interrupt` is pending","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":26965,"byte_end":27001,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27006,"byte_end":27015,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27383,"byte_end":27387,"line_start":221,"line_end":221,"column_start":12,"column_end":16},"name":"pend","qualname":"<NVIC>::pend","value":"pub fn pend<I>(I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Forces `interrupt` into pending state\n","sig":null,"attributes":[{"value":"/ Forces `interrupt` into pending state","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27316,"byte_end":27357,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27362,"byte_end":27371,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27770,"byte_end":27781,"line_start":234,"line_end":234,"column_start":12,"column_end":23},"name":"set_pending","qualname":"<NVIC>::set_pending","value":"pub fn set_pending<I>(&mut Self, I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Forces `interrupt` into pending state\n","sig":null,"attributes":[{"value":"/ Forces `interrupt` into pending state","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27641,"byte_end":27682,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"deprecated(since = \"0.5.8\", note = \"Use `NVIC::pend`\")","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27687,"byte_end":27744,"line_start":232,"line_end":232,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27749,"byte_end":27758,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28499,"byte_end":28511,"line_start":254,"line_end":254,"column_start":19,"column_end":31},"name":"set_priority","qualname":"<NVIC>::set_priority","value":"pub unsafe fn set_priority<I>(&mut Self, I, u8) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Sets the \"priority\" of `interrupt` to `prio`","sig":null,"attributes":[{"value":"/ Sets the \"priority\" of `interrupt` to `prio`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27882,"byte_end":27930,"line_start":241,"line_end":241,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27935,"byte_end":27938,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ *NOTE* See [`get_priority`](struct.NVIC.html#method.get_priority) method for an explanation","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":27943,"byte_end":28038,"line_start":243,"line_end":243,"column_start":5,"column_end":100}},{"value":"/ of how NVIC priorities work.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28043,"byte_end":28075,"line_start":244,"line_end":244,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28080,"byte_end":28083,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, updating an interrupt priority requires a read-modify-write operation. On","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28088,"byte_end":28177,"line_start":246,"line_end":246,"column_start":5,"column_end":94}},{"value":"/ ARMv7-M, the operation is performed in a single atomic write operation.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28182,"byte_end":28257,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28262,"byte_end":28265,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28270,"byte_end":28284,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28289,"byte_end":28292,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Changing priority levels can break priority-based critical sections (see","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28297,"byte_end":28373,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ [`register::basepri`](../register/basepri/index.html)) and compromise memory safety.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28378,"byte_end":28466,"line_start":252,"line_end":252,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":28471,"byte_end":28480,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":29103,"byte_end":29109,"line_start":277,"line_end":277,"column_start":12,"column_end":18},"name":"unpend","qualname":"<NVIC>::unpend","value":"pub fn unpend<I>(I) where I: Nr","parent":null,"children":[],"decl_id":null,"docs":" Clears `interrupt`'s pending state\n","sig":null,"attributes":[{"value":"/ Clears `interrupt`'s pending state","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":29039,"byte_end":29077,"line_start":275,"line_end":275,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":29082,"byte_end":29091,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":140},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scb","qualname":"::peripheral::scb","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":312},{"krate":0,"index":336},{"krate":0,"index":335},{"krate":0,"index":333},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":222},{"krate":0,"index":224}],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":29677,"byte_end":29701,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30378,"byte_end":30389,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"disable_fpu","qualname":"<SCB>::disable_fpu","value":"pub fn disable_fpu(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `set_fpu_access_mode(FpuAccessMode::Disabled)`\n","sig":null,"attributes":[{"value":"/ Shorthand for `set_fpu_access_mode(FpuAccessMode::Disabled)`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30288,"byte_end":30352,"line_start":30,"line_end":30,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30357,"byte_end":30366,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30561,"byte_end":30571,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"enable_fpu","qualname":"<SCB>::enable_fpu","value":"pub fn enable_fpu(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `set_fpu_access_mode(FpuAccessMode::Enabled)`\n","sig":null,"attributes":[{"value":"/ Shorthand for `set_fpu_access_mode(FpuAccessMode::Enabled)`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30472,"byte_end":30535,"line_start":36,"line_end":36,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30540,"byte_end":30549,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30703,"byte_end":30718,"line_start":44,"line_end":44,"column_start":12,"column_end":27},"name":"fpu_access_mode","qualname":"<SCB>::fpu_access_mode","value":"pub fn fpu_access_mode() -> FpuAccessMode","parent":null,"children":[],"decl_id":null,"docs":" Gets FPU access mode\n","sig":null,"attributes":[{"value":"/ Gets FPU access mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30653,"byte_end":30677,"line_start":42,"line_end":42,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30682,"byte_end":30691,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":31597,"byte_end":31616,"line_start":64,"line_end":64,"column_start":12,"column_end":31},"name":"set_fpu_access_mode","qualname":"<SCB>::set_fpu_access_mode","value":"pub fn set_fpu_access_mode(&mut Self, FpuAccessMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets FPU access mode","sig":null,"attributes":[{"value":"/ Sets FPU access mode","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":31171,"byte_end":31195,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":31200,"byte_end":31203,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ *IMPORTANT* Any function that runs fully or partly with the FPU disabled must *not* take any","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":31208,"byte_end":31304,"line_start":59,"line_end":59,"column_start":5,"column_end":101}},{"value":"/ floating-point arguments or have any floating-point local variables. Because the compiler","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":31309,"byte_end":31402,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/ might inline such a function into a caller that does have floating-point arguments or","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":31407,"byte_end":31496,"line_start":61,"line_end":61,"column_start":5,"column_end":94}},{"value":"/ variables, any such function must be also marked #[inline(never)].","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":31501,"byte_end":31571,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":31576,"byte_end":31585,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":32084,"byte_end":32095,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"vect_active","qualname":"<SCB>::vect_active","value":"pub fn vect_active() -> VectActive","parent":null,"children":[],"decl_id":null,"docs":" Returns the active exception number\n","sig":null,"attributes":[{"value":"/ Returns the active exception number","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":32019,"byte_end":32058,"line_start":76,"line_end":76,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":32063,"byte_end":32072,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":33515,"byte_end":33528,"line_start":118,"line_end":118,"column_start":12,"column_end":25},"name":"enable_icache","qualname":"<SCB>::enable_icache","value":"pub fn enable_icache(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables I-Cache if currently disabled\n","sig":null,"attributes":[{"value":"/ Enables I-Cache if currently disabled","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":33448,"byte_end":33489,"line_start":116,"line_end":116,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":33494,"byte_end":33503,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":34305,"byte_end":34319,"line_start":144,"line_end":144,"column_start":12,"column_end":26},"name":"disable_icache","qualname":"<SCB>::disable_icache","value":"pub fn disable_icache(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables I-Cache if currently enabled\n","sig":null,"attributes":[{"value":"/ Disables I-Cache if currently enabled","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":34238,"byte_end":34279,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":34284,"byte_end":34293,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":34864,"byte_end":34878,"line_start":165,"line_end":165,"column_start":12,"column_end":26},"name":"icache_enabled","qualname":"<SCB>::icache_enabled","value":"pub fn icache_enabled() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the I-Cache is currently enabled\n","sig":null,"attributes":[{"value":"/ Returns whether the I-Cache is currently enabled","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":34786,"byte_end":34838,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":34843,"byte_end":34852,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":35145,"byte_end":35162,"line_start":175,"line_end":175,"column_start":12,"column_end":29},"name":"invalidate_icache","qualname":"<SCB>::invalidate_icache","value":"pub fn invalidate_icache(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invalidates I-Cache\n","sig":null,"attributes":[{"value":"/ Invalidates I-Cache","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":35096,"byte_end":35119,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":35124,"byte_end":35133,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":35479,"byte_end":35492,"line_start":188,"line_end":188,"column_start":12,"column_end":25},"name":"enable_dcache","qualname":"<SCB>::enable_dcache","value":"pub fn enable_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Enables D-cache if currently disabled\n","sig":null,"attributes":[{"value":"/ Enables D-cache if currently disabled","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":35412,"byte_end":35453,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":35458,"byte_end":35467,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":36221,"byte_end":36235,"line_start":211,"line_end":211,"column_start":12,"column_end":26},"name":"disable_dcache","qualname":"<SCB>::disable_dcache","value":"pub fn disable_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Disables D-cache if currently enabled\n","sig":null,"attributes":[{"value":"/ Disables D-cache if currently enabled","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":36154,"byte_end":36195,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":36200,"byte_end":36209,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":36679,"byte_end":36693,"line_start":226,"line_end":226,"column_start":12,"column_end":26},"name":"dcache_enabled","qualname":"<SCB>::dcache_enabled","value":"pub fn dcache_enabled() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the D-Cache is currently enabled\n","sig":null,"attributes":[{"value":"/ Returns whether the D-Cache is currently enabled","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":36601,"byte_end":36653,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":36658,"byte_end":36667,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":37784,"byte_end":37796,"line_start":260,"line_end":260,"column_start":12,"column_end":24},"name":"clean_dcache","qualname":"<SCB>::clean_dcache","value":"pub fn clean_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Cleans D-cache\n","sig":null,"attributes":[{"value":"/ Cleans D-cache","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":37740,"byte_end":37758,"line_start":258,"line_end":258,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":37763,"byte_end":37772,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":38325,"byte_end":38348,"line_start":279,"line_end":279,"column_start":12,"column_end":35},"name":"clean_invalidate_dcache","qualname":"<SCB>::clean_invalidate_dcache","value":"pub fn clean_invalidate_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Cleans and invalidates D-cache\n","sig":null,"attributes":[{"value":"/ Cleans and invalidates D-cache","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":38265,"byte_end":38299,"line_start":277,"line_end":277,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":38304,"byte_end":38313,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":39176,"byte_end":39204,"line_start":304,"line_end":304,"column_start":12,"column_end":40},"name":"invalidate_dcache_by_address","qualname":"<SCB>::invalidate_dcache_by_address","value":"pub fn invalidate_dcache_by_address(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Invalidates D-cache by address","sig":null,"attributes":[{"value":"/ Invalidates D-cache by address","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":38818,"byte_end":38852,"line_start":296,"line_end":296,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":38857,"byte_end":38860,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ `addr`: the address to invalidate","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":38865,"byte_end":38902,"line_start":298,"line_end":298,"column_start":5,"column_end":42}},{"value":"/ `size`: size of the memory block, in number of bytes","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":38907,"byte_end":38963,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":38968,"byte_end":38971,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Invalidates cache starting from the lowest 32-byte aligned address represented by `addr`,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":38976,"byte_end":39069,"line_start":301,"line_end":301,"column_start":5,"column_end":98}},{"value":"/ in blocks of 32 bytes until at least `size` bytes have been invalidated.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":39074,"byte_end":39150,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":39155,"byte_end":39164,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":40223,"byte_end":40246,"line_start":338,"line_end":338,"column_start":12,"column_end":35},"name":"clean_dcache_by_address","qualname":"<SCB>::clean_dcache_by_address","value":"pub fn clean_dcache_by_address(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Cleans D-cache by address","sig":null,"attributes":[{"value":"/ Cleans D-cache by address","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":39884,"byte_end":39913,"line_start":330,"line_end":330,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":39918,"byte_end":39921,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ `addr`: the address to clean","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":39926,"byte_end":39958,"line_start":332,"line_end":332,"column_start":5,"column_end":37}},{"value":"/ `size`: size of the memory block, in number of bytes","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":39963,"byte_end":40019,"line_start":333,"line_end":333,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":40024,"byte_end":40027,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Cleans cache starting from the lowest 32-byte aligned address represented by `addr`,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":40032,"byte_end":40120,"line_start":335,"line_end":335,"column_start":5,"column_end":93}},{"value":"/ in blocks of 32 bytes until at least `size` bytes have been cleaned.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":40125,"byte_end":40197,"line_start":336,"line_end":336,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":40202,"byte_end":40211,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":41336,"byte_end":41370,"line_start":373,"line_end":373,"column_start":12,"column_end":46},"name":"clean_invalidate_dcache_by_address","qualname":"<SCB>::clean_invalidate_dcache_by_address","value":"pub fn clean_invalidate_dcache_by_address(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Cleans and invalidates D-cache by address","sig":null,"attributes":[{"value":"/ Cleans and invalidates D-cache by address","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":40926,"byte_end":40971,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":40976,"byte_end":40979,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ `addr`: the address to clean and invalidate","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":40984,"byte_end":41031,"line_start":366,"line_end":366,"column_start":5,"column_end":52}},{"value":"/ `size`: size of the memory block, in number of bytes","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":41036,"byte_end":41092,"line_start":367,"line_end":367,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":41097,"byte_end":41100,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ Cleans and invalidates cache starting from the lowest 32-byte aligned address represented","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":41105,"byte_end":41198,"line_start":369,"line_end":369,"column_start":5,"column_end":98}},{"value":"/ by `addr`, in blocks of 32 bytes until at least `size` bytes have been cleaned and","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":41203,"byte_end":41289,"line_start":370,"line_end":370,"column_start":5,"column_end":91}},{"value":"/ invalidated.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":41294,"byte_end":41310,"line_start":371,"line_end":371,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":41315,"byte_end":41324,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42177,"byte_end":42190,"line_start":405,"line_end":405,"column_start":12,"column_end":25},"name":"set_sleepdeep","qualname":"<SCB>::set_sleepdeep","value":"pub fn set_sleepdeep(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the SLEEPDEEP bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Set the SLEEPDEEP bit in the SCR register","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42106,"byte_end":42151,"line_start":403,"line_end":403,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42156,"byte_end":42165,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42375,"byte_end":42390,"line_start":413,"line_end":413,"column_start":12,"column_end":27},"name":"clear_sleepdeep","qualname":"<SCB>::clear_sleepdeep","value":"pub fn clear_sleepdeep(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the SLEEPDEEP bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Clear the SLEEPDEEP bit in the SCR register","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42302,"byte_end":42349,"line_start":411,"line_end":411,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42354,"byte_end":42363,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42633,"byte_end":42648,"line_start":425,"line_end":425,"column_start":12,"column_end":27},"name":"set_sleeponexit","qualname":"<SCB>::set_sleeponexit","value":"pub fn set_sleeponexit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the SLEEPONEXIT bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Set the SLEEPONEXIT bit in the SCR register","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42560,"byte_end":42607,"line_start":423,"line_end":423,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42612,"byte_end":42621,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42837,"byte_end":42854,"line_start":433,"line_end":433,"column_start":12,"column_end":29},"name":"clear_sleeponexit","qualname":"<SCB>::clear_sleeponexit","value":"pub fn clear_sleeponexit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the SLEEPONEXIT bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Clear the SLEEPONEXIT bit in the SCR register","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42762,"byte_end":42811,"line_start":431,"line_end":431,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42816,"byte_end":42825,"line_start":432,"line_end":432,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":43262,"byte_end":43274,"line_start":448,"line_end":448,"column_start":12,"column_end":24},"name":"system_reset","qualname":"<SCB>::system_reset","value":"pub fn system_reset(&mut Self) -> !","parent":null,"children":[],"decl_id":null,"docs":" Initiate a system reset request to reset the MCU\n","sig":null,"attributes":[{"value":"/ Initiate a system reset request to reset the MCU","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":43118,"byte_end":43170,"line_start":445,"line_end":445,"column_start":5,"column_end":57}},{"value":"deprecated(since = \"0.6.1\", note = \"Use `SCB::sys_reset`\")","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":43175,"byte_end":43236,"line_start":446,"line_end":446,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":43241,"byte_end":43250,"line_start":447,"line_end":447,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":43868,"byte_end":43877,"line_start":468,"line_end":468,"column_start":12,"column_end":21},"name":"sys_reset","qualname":"<SCB>::sys_reset","value":"pub fn sys_reset() -> !","parent":null,"children":[],"decl_id":null,"docs":" Initiate a system reset request to reset the MCU\n","sig":null,"attributes":[{"value":"/ Initiate a system reset request to reset the MCU","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":43790,"byte_end":43842,"line_start":466,"line_end":466,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":43847,"byte_end":43856,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":44682,"byte_end":44692,"line_start":496,"line_end":496,"column_start":12,"column_end":22},"name":"set_pendsv","qualname":"<SCB>::set_pendsv","value":"pub fn set_pendsv()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSVSET bit in the ICSR register which will pend the PendSV interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSVSET bit in the ICSR register which will pend the PendSV interrupt","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":44573,"byte_end":44656,"line_start":494,"line_end":494,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":44661,"byte_end":44670,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":44910,"byte_end":44927,"line_start":504,"line_end":504,"column_start":12,"column_end":29},"name":"is_pendsv_pending","qualname":"<SCB>::is_pendsv_pending","value":"pub fn is_pendsv_pending() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if PENDSVSET bit in the ICSR register is set meaning PendSV interrupt is pending\n","sig":null,"attributes":[{"value":"/ Check if PENDSVSET bit in the ICSR register is set meaning PendSV interrupt is pending","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":44794,"byte_end":44884,"line_start":502,"line_end":502,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":44889,"byte_end":44898,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45156,"byte_end":45168,"line_start":510,"line_end":510,"column_start":12,"column_end":24},"name":"clear_pendsv","qualname":"<SCB>::clear_pendsv","value":"pub fn clear_pendsv()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSVCLR bit in the ICSR register which will clear a pending PendSV interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSVCLR bit in the ICSR register which will clear a pending PendSV interrupt","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45040,"byte_end":45130,"line_start":508,"line_end":508,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45135,"byte_end":45144,"line_start":509,"line_end":509,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45378,"byte_end":45388,"line_start":518,"line_end":518,"column_start":12,"column_end":22},"name":"set_pendst","qualname":"<SCB>::set_pendst","value":"pub fn set_pendst()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSTSET bit in the ICSR register which will pend a SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSTSET bit in the ICSR register which will pend a SysTick interrupt","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45270,"byte_end":45352,"line_start":516,"line_end":516,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45357,"byte_end":45366,"line_start":517,"line_end":517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45607,"byte_end":45624,"line_start":526,"line_end":526,"column_start":12,"column_end":29},"name":"is_pendst_pending","qualname":"<SCB>::is_pendst_pending","value":"pub fn is_pendst_pending() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if PENDSTSET bit in the ICSR register is set meaning SysTick interrupt is pending\n","sig":null,"attributes":[{"value":"/ Check if PENDSTSET bit in the ICSR register is set meaning SysTick interrupt is pending","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45490,"byte_end":45581,"line_start":524,"line_end":524,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45586,"byte_end":45595,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45854,"byte_end":45866,"line_start":532,"line_end":532,"column_start":12,"column_end":24},"name":"clear_pendst","qualname":"<SCB>::clear_pendst","value":"pub fn clear_pendst()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSTCLR bit in the ICSR register which will clear a pending SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSTCLR bit in the ICSR register which will clear a pending SysTick interrupt","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45737,"byte_end":45828,"line_start":530,"line_end":530,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45833,"byte_end":45842,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":313},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46327,"byte_end":46343,"line_start":547,"line_end":547,"column_start":5,"column_end":21},"name":"MemoryManagement","qualname":"::peripheral::scb::SystemHandler::MemoryManagement","value":"SystemHandler::MemoryManagement","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Memory management interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Memory management interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46231,"byte_end":46298,"line_start":545,"line_end":545,"column_start":5,"column_end":72}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46303,"byte_end":46322,"line_start":546,"line_end":546,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":315},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46438,"byte_end":46446,"line_start":551,"line_end":551,"column_start":5,"column_end":13},"name":"BusFault","qualname":"::peripheral::scb::SystemHandler::BusFault","value":"SystemHandler::BusFault","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Bus fault interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Bus fault interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46350,"byte_end":46409,"line_start":549,"line_end":549,"column_start":5,"column_end":64}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46414,"byte_end":46433,"line_start":550,"line_end":550,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":317},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46543,"byte_end":46553,"line_start":555,"line_end":555,"column_start":5,"column_end":15},"name":"UsageFault","qualname":"::peripheral::scb::SystemHandler::UsageFault","value":"SystemHandler::UsageFault","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Usage fault interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Usage fault interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46453,"byte_end":46514,"line_start":553,"line_end":553,"column_start":5,"column_end":66}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46519,"byte_end":46538,"line_start":554,"line_end":554,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":319},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46701,"byte_end":46707,"line_start":562,"line_end":562,"column_start":5,"column_end":11},"name":"SVCall","qualname":"::peripheral::scb::SystemHandler::SVCall","value":"SystemHandler::SVCall","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" SV call interrupt\n","sig":null,"attributes":[{"value":"/ SV call interrupt","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46675,"byte_end":46696,"line_start":561,"line_end":561,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":321},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46806,"byte_end":46818,"line_start":566,"line_end":566,"column_start":5,"column_end":17},"name":"DebugMonitor","qualname":"::peripheral::scb::SystemHandler::DebugMonitor","value":"SystemHandler::DebugMonitor","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Debug monitor interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Debug monitor interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46714,"byte_end":46777,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46782,"byte_end":46801,"line_start":565,"line_end":565,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":323},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46851,"byte_end":46857,"line_start":569,"line_end":569,"column_start":5,"column_end":11},"name":"PendSV","qualname":"::peripheral::scb::SystemHandler::PendSV","value":"SystemHandler::PendSV","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Pend SV interrupt\n","sig":null,"attributes":[{"value":"/ Pend SV interrupt","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46825,"byte_end":46846,"line_start":568,"line_end":568,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":325},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46894,"byte_end":46901,"line_start":572,"line_end":572,"column_start":5,"column_end":12},"name":"SysTick","qualname":"::peripheral::scb::SystemHandler::SysTick","value":"SystemHandler::SysTick","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" System Tick interrupt\n","sig":null,"attributes":[{"value":"/ System Tick interrupt","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46864,"byte_end":46889,"line_start":571,"line_end":571,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":312},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46128,"byte_end":46141,"line_start":542,"line_end":542,"column_start":10,"column_end":23},"name":"SystemHandler","qualname":"::peripheral::scb::SystemHandler","value":"pub enum SystemHandler {\n\n    /// Memory management interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    MemoryManagement,\n\n    /// Bus fault interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    BusFault,\n\n    /// Usage fault interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    UsageFault,\n\n    /// SV call interrupt\n    SVCall,\n\n    /// Debug monitor interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    DebugMonitor,\n\n    /// Pend SV interrupt\n    PendSV,\n\n    /// System Tick interrupt\n    SysTick,\n}","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325}],"decl_id":null,"docs":" System handlers, exceptions with configurable priority\n","sig":null,"attributes":[{"value":"/ System handlers, exceptions with configurable priority","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":45966,"byte_end":46024,"line_start":539,"line_end":539,"column_start":1,"column_end":59}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46025,"byte_end":46073,"line_start":540,"line_end":540,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":47804,"byte_end":47816,"line_start":601,"line_end":601,"column_start":12,"column_end":24},"name":"get_priority","qualname":"<SCB>::get_priority","value":"pub fn get_priority(SystemHandler) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the hardware priority of `system_handler`","sig":null,"attributes":[{"value":"/ Returns the hardware priority of `system_handler`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":47545,"byte_end":47598,"line_start":596,"line_end":596,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":47603,"byte_end":47606,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ *NOTE*: Hardware priority does not exactly match logical priority levels. See","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":47611,"byte_end":47692,"line_start":598,"line_end":598,"column_start":5,"column_end":86}},{"value":"/ [`NVIC.get_priority`](struct.NVIC.html#method.get_priority) for more details.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":47697,"byte_end":47778,"line_start":599,"line_end":599,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":47783,"byte_end":47792,"line_start":600,"line_end":600,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":49050,"byte_end":49062,"line_start":632,"line_end":632,"column_start":19,"column_end":31},"name":"set_priority","qualname":"<SCB>::set_priority","value":"pub unsafe fn set_priority(&mut Self, SystemHandler, u8)","parent":null,"children":[],"decl_id":null,"docs":" Sets the hardware priority of `system_handler` to `prio`","sig":null,"attributes":[{"value":"/ Sets the hardware priority of `system_handler` to `prio`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48381,"byte_end":48441,"line_start":619,"line_end":619,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48446,"byte_end":48449,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ *NOTE*: Hardware priority does not exactly match logical priority levels. See","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48454,"byte_end":48535,"line_start":621,"line_end":621,"column_start":5,"column_end":86}},{"value":"/ [`NVIC.get_priority`](struct.NVIC.html#method.get_priority) for more details.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48540,"byte_end":48621,"line_start":622,"line_end":622,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48626,"byte_end":48629,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, updating a system handler priority requires a read-modify-write operation. On","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48634,"byte_end":48727,"line_start":624,"line_end":624,"column_start":5,"column_end":98}},{"value":"/ ARMv7-M, the operation is performed in a single, atomic write operation.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48732,"byte_end":48808,"line_start":625,"line_end":625,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48813,"byte_end":48816,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48821,"byte_end":48835,"line_start":627,"line_end":627,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48840,"byte_end":48843,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Changing priority levels can break priority-based critical sections (see","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48848,"byte_end":48924,"line_start":629,"line_end":629,"column_start":5,"column_end":81}},{"value":"/ [`register::basepri`](../register/basepri/index.html)) and compromise memory safety.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":48929,"byte_end":49017,"line_start":630,"line_end":630,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":49022,"byte_end":49031,"line_start":631,"line_end":631,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50624,"byte_end":50630,"line_start":679,"line_end":679,"column_start":12,"column_end":18},"name":"enable","qualname":"<SCB>::enable","value":"pub fn enable(&mut Self, Exception)","parent":null,"children":[],"decl_id":null,"docs":" Enable the exception","sig":null,"attributes":[{"value":"/ Enable the exception","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50089,"byte_end":50113,"line_start":666,"line_end":666,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50118,"byte_end":50121,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If the exception is enabled, when the exception is triggered, the exception handler will be executed instead of the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50126,"byte_end":50245,"line_start":668,"line_end":668,"column_start":5,"column_end":124}},{"value":"/ HardFault handler.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50250,"byte_end":50272,"line_start":669,"line_end":669,"column_start":5,"column_end":27}},{"value":"/ This function is only allowed on the following exceptions:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50277,"byte_end":50339,"line_start":670,"line_end":670,"column_start":5,"column_end":67}},{"value":"/ * `MemoryManagement`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50344,"byte_end":50368,"line_start":671,"line_end":671,"column_start":5,"column_end":29}},{"value":"/ * `BusFault`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50373,"byte_end":50389,"line_start":672,"line_end":672,"column_start":5,"column_end":21}},{"value":"/ * `UsageFault`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50394,"byte_end":50412,"line_start":673,"line_end":673,"column_start":5,"column_end":23}},{"value":"/ * `SecureFault` (can only be enabled from Secure state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50417,"byte_end":50476,"line_start":674,"line_end":674,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50481,"byte_end":50484,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Calling this function with any other exception will do nothing.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50489,"byte_end":50556,"line_start":676,"line_end":676,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50561,"byte_end":50570,"line_start":677,"line_end":677,"column_start":5,"column_end":14}},{"value":"cfg(not(any(armv6m, armv8m_base)))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50575,"byte_end":50612,"line_start":678,"line_end":678,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51491,"byte_end":51498,"line_start":700,"line_end":700,"column_start":12,"column_end":19},"name":"disable","qualname":"<SCB>::disable","value":"pub fn disable(&mut Self, Exception)","parent":null,"children":[],"decl_id":null,"docs":" Disable the exception","sig":null,"attributes":[{"value":"/ Disable the exception","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50951,"byte_end":50976,"line_start":687,"line_end":687,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50981,"byte_end":50984,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ If the exception is disabled, when the exception is triggered, the HardFault handler will be executed instead of the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":50989,"byte_end":51109,"line_start":689,"line_end":689,"column_start":5,"column_end":125}},{"value":"/ exception handler.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51114,"byte_end":51136,"line_start":690,"line_end":690,"column_start":5,"column_end":27}},{"value":"/ This function is only allowed on the following exceptions:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51141,"byte_end":51203,"line_start":691,"line_end":691,"column_start":5,"column_end":67}},{"value":"/ * `MemoryManagement`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51208,"byte_end":51232,"line_start":692,"line_end":692,"column_start":5,"column_end":29}},{"value":"/ * `BusFault`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51237,"byte_end":51253,"line_start":693,"line_end":693,"column_start":5,"column_end":21}},{"value":"/ * `UsageFault`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51258,"byte_end":51276,"line_start":694,"line_end":694,"column_start":5,"column_end":23}},{"value":"/ * `SecureFault` (can not be changed from Non-secure state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51281,"byte_end":51343,"line_start":695,"line_end":695,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51348,"byte_end":51351,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ Calling this function with any other exception will do nothing.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51356,"byte_end":51423,"line_start":697,"line_end":697,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51428,"byte_end":51437,"line_start":698,"line_end":698,"column_start":5,"column_end":14}},{"value":"cfg(not(any(armv6m, armv8m_base)))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51442,"byte_end":51479,"line_start":699,"line_end":699,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":52217,"byte_end":52227,"line_start":719,"line_end":719,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<SCB>::is_enabled","value":"pub fn is_enabled(&Self, Exception) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if an exception is enabled","sig":null,"attributes":[{"value":"/ Check if an exception is enabled","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51820,"byte_end":51856,"line_start":708,"line_end":708,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51861,"byte_end":51864,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This function is only allowed on the following exception:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51869,"byte_end":51930,"line_start":710,"line_end":710,"column_start":5,"column_end":66}},{"value":"/ * `MemoryManagement`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51935,"byte_end":51959,"line_start":711,"line_end":711,"column_start":5,"column_end":29}},{"value":"/ * `BusFault`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51964,"byte_end":51980,"line_start":712,"line_end":712,"column_start":5,"column_end":21}},{"value":"/ * `UsageFault`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":51985,"byte_end":52003,"line_start":713,"line_end":713,"column_start":5,"column_end":23}},{"value":"/ * `SecureFault` (can not be read from Non-secure state)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":52008,"byte_end":52067,"line_start":714,"line_end":714,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":52072,"byte_end":52075,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ Calling this function with any other exception will read `false`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":52080,"byte_end":52149,"line_start":716,"line_end":716,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":52154,"byte_end":52163,"line_start":717,"line_end":717,"column_start":5,"column_end":14}},{"value":"cfg(not(any(armv6m, armv8m_base)))","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":52168,"byte_end":52205,"line_start":718,"line_end":718,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":243},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11947,"byte_end":11958,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"Peripherals","qualname":"::peripheral::Peripherals","value":"Peripherals { CBP, CPUID, DCB, DWT, FPB, FPU, ITM, MPU, NVIC, SCB, SYST, TPIU }","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255}],"decl_id":null,"docs":" Core peripherals\n","sig":null,"attributes":[{"value":"/ Core peripherals","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11890,"byte_end":11910,"line_start":101,"line_end":101,"column_start":1,"column_end":21}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11911,"byte_end":11935,"line_start":102,"line_end":102,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":244},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12063,"byte_end":12066,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"name":"CBP","qualname":"::peripheral::Peripherals::CBP","value":"peripheral::CBP","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Cache and branch predictor maintenance operations (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Cache and branch predictor maintenance operations (not present on Cortex-M0 variants)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11965,"byte_end":12054,"line_start":104,"line_end":104,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":245},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12096,"byte_end":12101,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"CPUID","qualname":"::peripheral::Peripherals::CPUID","value":"cortex_m_0_7::peripheral::CPUID","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" CPUID\n","sig":null,"attributes":[{"value":"/ CPUID","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12078,"byte_end":12087,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":246},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12147,"byte_end":12150,"line_start":111,"line_end":111,"column_start":9,"column_end":12},"name":"DCB","qualname":"::peripheral::Peripherals::DCB","value":"cortex_m_0_7::peripheral::DCB","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Debug Control Block\n","sig":null,"attributes":[{"value":"/ Debug Control Block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12115,"byte_end":12138,"line_start":110,"line_end":110,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":247},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12205,"byte_end":12208,"line_start":114,"line_end":114,"column_start":9,"column_end":12},"name":"DWT","qualname":"::peripheral::Peripherals::DWT","value":"cortex_m_0_7::peripheral::DWT","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Data Watchpoint and Trace unit\n","sig":null,"attributes":[{"value":"/ Data Watchpoint and Trace unit","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12162,"byte_end":12196,"line_start":113,"line_end":113,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":248},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12300,"byte_end":12303,"line_start":117,"line_end":117,"column_start":9,"column_end":12},"name":"FPB","qualname":"::peripheral::Peripherals::FPB","value":"cortex_m_0_7::peripheral::FPB","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Flash Patch and Breakpoint unit (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Flash Patch and Breakpoint unit (not present on Cortex-M0 variants)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12220,"byte_end":12291,"line_start":116,"line_end":116,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":249},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12389,"byte_end":12392,"line_start":120,"line_end":120,"column_start":9,"column_end":12},"name":"FPU","qualname":"::peripheral::Peripherals::FPU","value":"cortex_m_0_7::peripheral::FPU","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Floating Point Unit (only present on `thumbv7em-none-eabihf`)\n","sig":null,"attributes":[{"value":"/ Floating Point Unit (only present on `thumbv7em-none-eabihf`)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12315,"byte_end":12380,"line_start":119,"line_end":119,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":250},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12484,"byte_end":12487,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"name":"ITM","qualname":"::peripheral::Peripherals::ITM","value":"cortex_m_0_7::peripheral::ITM","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Instrumentation Trace Macrocell (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Instrumentation Trace Macrocell (not present on Cortex-M0 variants)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12404,"byte_end":12475,"line_start":122,"line_end":122,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":251},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12534,"byte_end":12537,"line_start":126,"line_end":126,"column_start":9,"column_end":12},"name":"MPU","qualname":"::peripheral::Peripherals::MPU","value":"peripheral::MPU","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12499,"byte_end":12525,"line_start":125,"line_end":125,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":252},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12596,"byte_end":12600,"line_start":129,"line_end":129,"column_start":9,"column_end":13},"name":"NVIC","qualname":"::peripheral::Peripherals::NVIC","value":"peripheral::NVIC","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12549,"byte_end":12587,"line_start":128,"line_end":128,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":253},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12646,"byte_end":12649,"line_start":132,"line_end":132,"column_start":9,"column_end":12},"name":"SCB","qualname":"::peripheral::Peripherals::SCB","value":"peripheral::SCB","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12613,"byte_end":12637,"line_start":131,"line_end":131,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":254},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12695,"byte_end":12699,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"name":"SYST","qualname":"::peripheral::Peripherals::SYST","value":"cortex_m_0_7::peripheral::SYST","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" SysTick: System Timer\n","sig":null,"attributes":[{"value":"/ SysTick: System Timer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12661,"byte_end":12686,"line_start":134,"line_end":134,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":255},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12786,"byte_end":12790,"line_start":138,"line_end":138,"column_start":9,"column_end":13},"name":"TPIU","qualname":"::peripheral::Peripherals::TPIU","value":"cortex_m_0_7::peripheral::TPIU","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Trace Port Interface Unit (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Trace Port Interface Unit (not present on Cortex-M0 variants)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":12712,"byte_end":12777,"line_start":137,"line_end":137,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13143,"byte_end":13147,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"take","qualname":"<Peripherals>::take","value":"pub fn take() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the core peripherals *once*\n","sig":null,"attributes":[{"value":"/ Returns all the core peripherals *once*","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13074,"byte_end":13117,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13122,"byte_end":13131,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13444,"byte_end":13449,"line_start":157,"line_end":157,"column_start":19,"column_end":24},"name":"steal","qualname":"<Peripherals>::steal","value":"pub unsafe fn steal() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unchecked version of `Peripherals::take`\n","sig":null,"attributes":[{"value":"/ Unchecked version of `Peripherals::take`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13367,"byte_end":13411,"line_start":155,"line_end":155,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13416,"byte_end":13425,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":260},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13901,"byte_end":13904,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"CBP","qualname":"::peripheral::CBP","value":"CBP {  }","parent":null,"children":[{"krate":0,"index":261}],"decl_id":null,"docs":" Cache and branch predictor maintenance operations\n","sig":null,"attributes":[{"value":"/ Cache and branch predictor maintenance operations","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13836,"byte_end":13889,"line_start":169,"line_end":169,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14216,"byte_end":14219,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"ptr","qualname":"<CBP>::ptr","value":"pub fn ptr() -> *const self::cbp::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14139,"byte_end":14182,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14187,"byte_end":14204,"line_start":186,"line_end":186,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":278},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15383,"byte_end":15386,"line_start":244,"line_end":244,"column_start":12,"column_end":15},"name":"MPU","qualname":"::peripheral::MPU","value":"MPU {  }","parent":null,"children":[{"krate":0,"index":279}],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15345,"byte_end":15371,"line_start":243,"line_end":243,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15550,"byte_end":15553,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"ptr","qualname":"<MPU>::ptr","value":"pub fn ptr() -> *const mpu::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15473,"byte_end":15516,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15521,"byte_end":15538,"line_start":252,"line_end":252,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15852,"byte_end":15856,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"NVIC","qualname":"::peripheral::NVIC","value":"NVIC {  }","parent":null,"children":[{"krate":0,"index":287}],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15802,"byte_end":15840,"line_start":267,"line_end":267,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16022,"byte_end":16025,"line_start":277,"line_end":277,"column_start":12,"column_end":15},"name":"ptr","qualname":"<NVIC>::ptr","value":"pub fn ptr() -> *const nvic::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15945,"byte_end":15988,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15993,"byte_end":16010,"line_start":276,"line_end":276,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":294},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16313,"byte_end":16316,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"SCB","qualname":"::peripheral::SCB","value":"SCB {  }","parent":null,"children":[{"krate":0,"index":295}],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16277,"byte_end":16301,"line_start":291,"line_end":291,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16480,"byte_end":16483,"line_start":301,"line_end":301,"column_start":12,"column_end":15},"name":"ptr","qualname":"<SCB>::ptr","value":"pub fn ptr() -> *const scb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16403,"byte_end":16446,"line_start":299,"line_end":299,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16451,"byte_end":16468,"line_start":300,"line_end":300,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":302},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"register","qualname":"::register","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" Processor core registers","sig":null,"attributes":[{"value":"/ Processor core registers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52438,"byte_end":52466,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52467,"byte_end":52470,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The following registers can only be accessed in PRIVILEGED mode:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52471,"byte_end":52539,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52540,"byte_end":52543,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - BASEPRI","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52544,"byte_end":52557,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/ - CONTROL","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52558,"byte_end":52571,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"/ - FAULTMASK","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52572,"byte_end":52587,"line_start":7,"line_end":7,"column_start":1,"column_end":16}},{"value":"/ - MSP","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52588,"byte_end":52597,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/ - PRIMASK","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52598,"byte_end":52611,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52612,"byte_end":52615,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The rest of registers (see list below) can be accessed in either, PRIVILEGED","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52616,"byte_end":52696,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ or UNPRIVILEGED, mode.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52697,"byte_end":52723,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52724,"byte_end":52727,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ - APSR","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52728,"byte_end":52738,"line_start":14,"line_end":14,"column_start":1,"column_end":11}},{"value":"/ - LR","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52739,"byte_end":52747,"line_start":15,"line_end":15,"column_start":1,"column_end":9}},{"value":"/ - PC","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52748,"byte_end":52756,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ - PSP","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52757,"byte_end":52766,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52767,"byte_end":52770,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The following registers are NOT available on ARMv6-M devices","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52771,"byte_end":52835,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ (`thumbv6m-none-eabi`):","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52836,"byte_end":52863,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52864,"byte_end":52867,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - BASEPRI","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52868,"byte_end":52881,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ - FAULTMASK","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52882,"byte_end":52897,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52898,"byte_end":52901,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52902,"byte_end":52918,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52919,"byte_end":52922,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - Cortex-M* Devices Generic User Guide - Section 2.1.3 Core registers","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/register/mod.rs","byte_start":52923,"byte_end":52996,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":5800,"byte_end":5804,"line_start":27,"line_end":27,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17112,"byte_end":17115,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23238,"byte_end":23242,"line_start":77,"line_end":77,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30278,"byte_end":30281,"line_start":29,"line_end":29,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":32009,"byte_end":32012,"line_start":75,"line_end":75,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":33438,"byte_end":33441,"line_start":115,"line_end":115,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42096,"byte_end":42099,"line_start":402,"line_end":402,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42550,"byte_end":42553,"line_start":422,"line_end":422,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":43108,"byte_end":43111,"line_start":444,"line_end":444,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":44563,"byte_end":44566,"line_start":493,"line_end":493,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46911,"byte_end":46924,"line_start":575,"line_end":575,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":47535,"byte_end":47538,"line_start":595,"line_end":595,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13056,"byte_end":13067,"line_start":145,"line_end":145,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13968,"byte_end":13971,"line_start":174,"line_end":174,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14001,"byte_end":14004,"line_start":177,"line_end":177,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14340,"byte_end":14343,"line_start":193,"line_end":193,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15450,"byte_end":15453,"line_start":248,"line_end":248,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15463,"byte_end":15466,"line_start":250,"line_end":250,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15648,"byte_end":15651,"line_start":258,"line_end":258,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15920,"byte_end":15924,"line_start":272,"line_end":272,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15934,"byte_end":15938,"line_start":274,"line_end":274,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16121,"byte_end":16125,"line_start":282,"line_end":282,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16380,"byte_end":16383,"line_start":296,"line_end":296,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16393,"byte_end":16396,"line_start":298,"line_end":298,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16578,"byte_end":16581,"line_start":306,"line_end":306,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":2313,"byte_end":2316,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":2327,"byte_end":2337,"line_start":68,"line_end":68,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":40}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11398,"byte_end":11401,"line_start":80,"line_end":80,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":44}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11444,"byte_end":11447,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":62}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11457,"byte_end":11461,"line_start":84,"line_end":84,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":78}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":11471,"byte_end":11474,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":140}},{"kind":"Mod","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/lib.rs","byte_start":2347,"byte_end":2355,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":302}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/itm.rs","byte_start":5800,"byte_end":5804,"line_start":27,"line_end":27,"column_start":25,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":28},"to":{"krate":1,"index":6918}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/cbp.rs","byte_start":17112,"byte_end":17115,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/nvic.rs","byte_start":23238,"byte_end":23242,"line_start":77,"line_end":77,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":30278,"byte_end":30281,"line_start":29,"line_end":29,"column_start":6,"column_end":9},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":32009,"byte_end":32012,"line_start":75,"line_end":75,"column_start":6,"column_end":9},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":33438,"byte_end":33441,"line_start":115,"line_end":115,"column_start":6,"column_end":9},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42096,"byte_end":42099,"line_start":402,"line_end":402,"column_start":6,"column_end":9},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":42550,"byte_end":42553,"line_start":422,"line_end":422,"column_start":6,"column_end":9},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":43108,"byte_end":43111,"line_start":444,"line_end":444,"column_start":6,"column_end":9},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":44563,"byte_end":44566,"line_start":493,"line_end":493,"column_start":6,"column_end":9},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":46911,"byte_end":46924,"line_start":575,"line_end":575,"column_start":6,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/scb.rs","byte_start":47535,"byte_end":47538,"line_start":595,"line_end":595,"column_start":6,"column_end":9},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13056,"byte_end":13067,"line_start":145,"line_end":145,"column_start":6,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":13968,"byte_end":13971,"line_start":174,"line_end":174,"column_start":22,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":260},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14001,"byte_end":14004,"line_start":177,"line_end":177,"column_start":6,"column_end":9},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":14340,"byte_end":14343,"line_start":193,"line_end":193,"column_start":21,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":260},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15450,"byte_end":15453,"line_start":248,"line_end":248,"column_start":22,"column_end":25},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15463,"byte_end":15466,"line_start":250,"line_end":250,"column_start":6,"column_end":9},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15648,"byte_end":15651,"line_start":258,"line_end":258,"column_start":21,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":278},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15920,"byte_end":15924,"line_start":272,"line_end":272,"column_start":22,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":286},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":15934,"byte_end":15938,"line_start":274,"line_end":274,"column_start":6,"column_end":10},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16121,"byte_end":16125,"line_start":282,"line_end":282,"column_start":21,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":286},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16380,"byte_end":16383,"line_start":296,"line_end":296,"column_start":22,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":294},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16393,"byte_end":16396,"line_start":298,"line_end":298,"column_start":6,"column_end":9},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.6.7/src/peripheral/mod.rs","byte_start":16578,"byte_end":16581,"line_start":306,"line_end":306,"column_start":21,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":294},"to":{"krate":1,"index":2281}}]}