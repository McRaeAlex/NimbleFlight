{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2","program":"/home/mcrae/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","embedded_dma","--edition=2018","/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=90e62ab1da4257a0","-C","extra-filename=-90e62ab1da4257a0","--out-dir","/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/mcrae/Code/hermes/target/rls/debug/deps","--extern","stable_deref_trait=/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libstable_deref_trait-2aea8fdb5ea659e7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mcrae/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/mcrae/Code/hermes/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_dma-90e62ab1da4257a0.rmeta"},"prelude":{"crate_id":{"name":"embedded_dma","disambiguator":[1169727006816391080,11883246111035132504]},"crate_root":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src","external_crates":[{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2184632775997829466,18026496178680965583]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3726307931522043477,4911878782996857177]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8506066526834043935,2338947288633172727]}},{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","num":4,"id":{"name":"stable_deref_trait","disambiguator":[2666301955834542947,8649774218890581719]}}],"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":0,"byte_end":13070,"line_start":1,"line_end":390,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":0,"byte_end":13070,"line_start":1,"line_end":390,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":23},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":73},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":85},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":105},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":121},{"krate":0,"index":125},{"krate":0,"index":129},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":181},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":193},{"krate":0,"index":197},{"krate":0,"index":201},{"krate":0,"index":205},{"krate":0,"index":209},{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":265},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":277},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":301},{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":313},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":325},{"krate":0,"index":329},{"krate":0,"index":333},{"krate":0,"index":337},{"krate":0,"index":341},{"krate":0,"index":345},{"krate":0,"index":349},{"krate":0,"index":353},{"krate":0,"index":357},{"krate":0,"index":361},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":373},{"krate":0,"index":377},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":393},{"krate":0,"index":397},{"krate":0,"index":401},{"krate":0,"index":405},{"krate":0,"index":409},{"krate":0,"index":413},{"krate":0,"index":417},{"krate":0,"index":421},{"krate":0,"index":425},{"krate":0,"index":429},{"krate":0,"index":433},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":445},{"krate":0,"index":449},{"krate":0,"index":453},{"krate":0,"index":457},{"krate":0,"index":461},{"krate":0,"index":465},{"krate":0,"index":469},{"krate":0,"index":473},{"krate":0,"index":477},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":493},{"krate":0,"index":497},{"krate":0,"index":501},{"krate":0,"index":505},{"krate":0,"index":509},{"krate":0,"index":513},{"krate":0,"index":517},{"krate":0,"index":521},{"krate":0,"index":525},{"krate":0,"index":529},{"krate":0,"index":533},{"krate":0,"index":537},{"krate":0,"index":541},{"krate":0,"index":545},{"krate":0,"index":549},{"krate":0,"index":553},{"krate":0,"index":557},{"krate":0,"index":561},{"krate":0,"index":565},{"krate":0,"index":569},{"krate":0,"index":573},{"krate":0,"index":577},{"krate":0,"index":581},{"krate":0,"index":585},{"krate":0,"index":589},{"krate":0,"index":593},{"krate":0,"index":597},{"krate":0,"index":601},{"krate":0,"index":605},{"krate":0,"index":609},{"krate":0,"index":613},{"krate":0,"index":617},{"krate":0,"index":621},{"krate":0,"index":625},{"krate":0,"index":629},{"krate":0,"index":633},{"krate":0,"index":637},{"krate":0,"index":641},{"krate":0,"index":645},{"krate":0,"index":649},{"krate":0,"index":653},{"krate":0,"index":657},{"krate":0,"index":661},{"krate":0,"index":665},{"krate":0,"index":669},{"krate":0,"index":673},{"krate":0,"index":677},{"krate":0,"index":681},{"krate":0,"index":685},{"krate":0,"index":689},{"krate":0,"index":693},{"krate":0,"index":697},{"krate":0,"index":701},{"krate":0,"index":705},{"krate":0,"index":709},{"krate":0,"index":713},{"krate":0,"index":717},{"krate":0,"index":721},{"krate":0,"index":725},{"krate":0,"index":729},{"krate":0,"index":733},{"krate":0,"index":737},{"krate":0,"index":741},{"krate":0,"index":745},{"krate":0,"index":749},{"krate":0,"index":753},{"krate":0,"index":757},{"krate":0,"index":761},{"krate":0,"index":765},{"krate":0,"index":769},{"krate":0,"index":773},{"krate":0,"index":777},{"krate":0,"index":781},{"krate":0,"index":785},{"krate":0,"index":789},{"krate":0,"index":793},{"krate":0,"index":797},{"krate":0,"index":801},{"krate":0,"index":805},{"krate":0,"index":809},{"krate":0,"index":813},{"krate":0,"index":817},{"krate":0,"index":821},{"krate":0,"index":825},{"krate":0,"index":829},{"krate":0,"index":833},{"krate":0,"index":837},{"krate":0,"index":841},{"krate":0,"index":845},{"krate":0,"index":849},{"krate":0,"index":853},{"krate":0,"index":857},{"krate":0,"index":861},{"krate":0,"index":865},{"krate":0,"index":869},{"krate":0,"index":873},{"krate":0,"index":877},{"krate":0,"index":881},{"krate":0,"index":885},{"krate":0,"index":889},{"krate":0,"index":893},{"krate":0,"index":897},{"krate":0,"index":901},{"krate":0,"index":905},{"krate":0,"index":909},{"krate":0,"index":913},{"krate":0,"index":917},{"krate":0,"index":921},{"krate":0,"index":925},{"krate":0,"index":929},{"krate":0,"index":933},{"krate":0,"index":937},{"krate":0,"index":941},{"krate":0,"index":945},{"krate":0,"index":949},{"krate":0,"index":953},{"krate":0,"index":957},{"krate":0,"index":961},{"krate":0,"index":965},{"krate":0,"index":969},{"krate":0,"index":973},{"krate":0,"index":977},{"krate":0,"index":981},{"krate":0,"index":985},{"krate":0,"index":989},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":1001},{"krate":0,"index":1005},{"krate":0,"index":1009},{"krate":0,"index":1013},{"krate":0,"index":1017},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1029},{"krate":0,"index":1033},{"krate":0,"index":1037},{"krate":0,"index":1041},{"krate":0,"index":1045},{"krate":0,"index":1049},{"krate":0,"index":1053},{"krate":0,"index":1057},{"krate":0,"index":1061},{"krate":0,"index":1065},{"krate":0,"index":1069},{"krate":0,"index":1073},{"krate":0,"index":1077},{"krate":0,"index":1081},{"krate":0,"index":1085},{"krate":0,"index":1089},{"krate":0,"index":1093},{"krate":0,"index":1097},{"krate":0,"index":1101},{"krate":0,"index":1105},{"krate":0,"index":1109},{"krate":0,"index":1113},{"krate":0,"index":1117},{"krate":0,"index":1121},{"krate":0,"index":1125},{"krate":0,"index":1129},{"krate":0,"index":1133},{"krate":0,"index":1137},{"krate":0,"index":1141},{"krate":0,"index":1145},{"krate":0,"index":1149},{"krate":0,"index":1153},{"krate":0,"index":1157},{"krate":0,"index":1161},{"krate":0,"index":1165},{"krate":0,"index":1169},{"krate":0,"index":1173},{"krate":0,"index":1177},{"krate":0,"index":1181},{"krate":0,"index":1185},{"krate":0,"index":1189},{"krate":0,"index":1193},{"krate":0,"index":1197},{"krate":0,"index":1201},{"krate":0,"index":1205},{"krate":0,"index":1209},{"krate":0,"index":1213},{"krate":0,"index":1217},{"krate":0,"index":1221},{"krate":0,"index":1225},{"krate":0,"index":1229},{"krate":0,"index":1233},{"krate":0,"index":1237},{"krate":0,"index":1241},{"krate":0,"index":1245},{"krate":0,"index":1249},{"krate":0,"index":1253},{"krate":0,"index":1257},{"krate":0,"index":1261},{"krate":0,"index":1265},{"krate":0,"index":1269},{"krate":0,"index":1273},{"krate":0,"index":1277},{"krate":0,"index":1281},{"krate":0,"index":1285},{"krate":0,"index":1289},{"krate":0,"index":1293},{"krate":0,"index":1297},{"krate":0,"index":1301},{"krate":0,"index":1305},{"krate":0,"index":1309},{"krate":0,"index":1313},{"krate":0,"index":1317},{"krate":0,"index":1321},{"krate":0,"index":1325},{"krate":0,"index":1329},{"krate":0,"index":1333},{"krate":0,"index":1337},{"krate":0,"index":1341},{"krate":0,"index":1345},{"krate":0,"index":1349},{"krate":0,"index":1353},{"krate":0,"index":1357},{"krate":0,"index":1361},{"krate":0,"index":1365},{"krate":0,"index":1369},{"krate":0,"index":1373},{"krate":0,"index":1377},{"krate":0,"index":1381},{"krate":0,"index":1385},{"krate":0,"index":1389},{"krate":0,"index":1393},{"krate":0,"index":1397},{"krate":0,"index":1401},{"krate":0,"index":1405},{"krate":0,"index":1409},{"krate":0,"index":1413},{"krate":0,"index":1417},{"krate":0,"index":1421},{"krate":0,"index":1425},{"krate":0,"index":1429},{"krate":0,"index":1433},{"krate":0,"index":1437},{"krate":0,"index":1441},{"krate":0,"index":1445},{"krate":0,"index":1449},{"krate":0,"index":1453},{"krate":0,"index":1457},{"krate":0,"index":1461},{"krate":0,"index":1465},{"krate":0,"index":1469},{"krate":0,"index":1473},{"krate":0,"index":1477},{"krate":0,"index":1481},{"krate":0,"index":1485},{"krate":0,"index":1489},{"krate":0,"index":1493},{"krate":0,"index":1497},{"krate":0,"index":1501},{"krate":0,"index":1505},{"krate":0,"index":1509},{"krate":0,"index":1513},{"krate":0,"index":1517},{"krate":0,"index":1521},{"krate":0,"index":1525},{"krate":0,"index":1529},{"krate":0,"index":1533},{"krate":0,"index":1537},{"krate":0,"index":1541},{"krate":0,"index":1545},{"krate":0,"index":1549},{"krate":0,"index":1553},{"krate":0,"index":1557},{"krate":0,"index":1561},{"krate":0,"index":1565},{"krate":0,"index":1569},{"krate":0,"index":1573},{"krate":0,"index":1577},{"krate":0,"index":1581},{"krate":0,"index":1585},{"krate":0,"index":1589},{"krate":0,"index":1593},{"krate":0,"index":1597},{"krate":0,"index":1601},{"krate":0,"index":1605},{"krate":0,"index":1609},{"krate":0,"index":1613},{"krate":0,"index":1617},{"krate":0,"index":1621},{"krate":0,"index":1625},{"krate":0,"index":1629},{"krate":0,"index":1633},{"krate":0,"index":1637},{"krate":0,"index":1641},{"krate":0,"index":1645},{"krate":0,"index":1649},{"krate":0,"index":1653},{"krate":0,"index":1657},{"krate":0,"index":1661},{"krate":0,"index":1665},{"krate":0,"index":1669},{"krate":0,"index":1673},{"krate":0,"index":1677},{"krate":0,"index":1681},{"krate":0,"index":1685},{"krate":0,"index":1689},{"krate":0,"index":1693},{"krate":0,"index":1697},{"krate":0,"index":1701},{"krate":0,"index":1705},{"krate":0,"index":1709},{"krate":0,"index":1713},{"krate":0,"index":1717},{"krate":0,"index":1721},{"krate":0,"index":1725},{"krate":0,"index":1729},{"krate":0,"index":1733},{"krate":0,"index":1737},{"krate":0,"index":1741},{"krate":0,"index":1745},{"krate":0,"index":1749},{"krate":0,"index":1753},{"krate":0,"index":1757},{"krate":0,"index":1761},{"krate":0,"index":1765},{"krate":0,"index":1769},{"krate":0,"index":1773},{"krate":0,"index":1777},{"krate":0,"index":1781},{"krate":0,"index":1785},{"krate":0,"index":1789},{"krate":0,"index":1793},{"krate":0,"index":1797},{"krate":0,"index":1801},{"krate":0,"index":1805},{"krate":0,"index":1809},{"krate":0,"index":1813},{"krate":0,"index":1817},{"krate":0,"index":1821},{"krate":0,"index":1825},{"krate":0,"index":1829},{"krate":0,"index":1833},{"krate":0,"index":1837},{"krate":0,"index":1841},{"krate":0,"index":1845},{"krate":0,"index":1849},{"krate":0,"index":1853},{"krate":0,"index":1857},{"krate":0,"index":1861},{"krate":0,"index":1865},{"krate":0,"index":1869},{"krate":0,"index":1873},{"krate":0,"index":1877},{"krate":0,"index":1881},{"krate":0,"index":1885},{"krate":0,"index":1889},{"krate":0,"index":1893},{"krate":0,"index":1897},{"krate":0,"index":1901},{"krate":0,"index":1905},{"krate":0,"index":1909},{"krate":0,"index":1913},{"krate":0,"index":1917},{"krate":0,"index":1921},{"krate":0,"index":1925},{"krate":0,"index":1929},{"krate":0,"index":1933},{"krate":0,"index":1937},{"krate":0,"index":1941},{"krate":0,"index":1945},{"krate":0,"index":1949},{"krate":0,"index":1953},{"krate":0,"index":1957},{"krate":0,"index":1961},{"krate":0,"index":1965},{"krate":0,"index":1969},{"krate":0,"index":1973},{"krate":0,"index":1977},{"krate":0,"index":1981},{"krate":0,"index":1985},{"krate":0,"index":1989},{"krate":0,"index":1993},{"krate":0,"index":1997},{"krate":0,"index":2001},{"krate":0,"index":2005},{"krate":0,"index":2009},{"krate":0,"index":2013},{"krate":0,"index":2017},{"krate":0,"index":2021},{"krate":0,"index":2025},{"krate":0,"index":2029},{"krate":0,"index":2033},{"krate":0,"index":2037},{"krate":0,"index":2041},{"krate":0,"index":2045},{"krate":0,"index":2049},{"krate":0,"index":2053},{"krate":0,"index":2057},{"krate":0,"index":2061},{"krate":0,"index":2065},{"krate":0,"index":2069},{"krate":0,"index":2073},{"krate":0,"index":2077},{"krate":0,"index":2081},{"krate":0,"index":2085},{"krate":0,"index":2089},{"krate":0,"index":2093},{"krate":0,"index":2097},{"krate":0,"index":2101},{"krate":0,"index":2105},{"krate":0,"index":2109},{"krate":0,"index":2113},{"krate":0,"index":2117},{"krate":0,"index":2121},{"krate":0,"index":2125},{"krate":0,"index":2129},{"krate":0,"index":2133},{"krate":0,"index":2137},{"krate":0,"index":2141},{"krate":0,"index":2145},{"krate":0,"index":2149},{"krate":0,"index":2153},{"krate":0,"index":2157},{"krate":0,"index":2161},{"krate":0,"index":2165},{"krate":0,"index":2169},{"krate":0,"index":2173},{"krate":0,"index":2177},{"krate":0,"index":2181},{"krate":0,"index":2185},{"krate":0,"index":2189},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":69}],"decl_id":null,"docs":" Traits to aid the correct use of buffers in DMA abstractions.","sig":null,"attributes":[{"value":"/ Traits to aid the correct use of buffers in DMA abstractions.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":66,"byte_end":69,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library provides the `ReadBuffer` and `WriteBuffer` unsafe traits to be used as bounds to","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":70,"byte_end":168,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ buffers types used in DMA operations.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":169,"byte_end":210,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":211,"byte_end":214,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are some subtleties to the extent of the guarantees provided by these traits, all of these","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":215,"byte_end":315,"line_start":6,"line_end":6,"column_start":1,"column_end":101}},{"value":"/ subtleties are properly documented in the safety requirements in this crate. However, as a","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":316,"byte_end":410,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ measure of redundancy, some are listed below:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":411,"byte_end":460,"line_start":8,"line_end":8,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":461,"byte_end":464,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * The traits only guarantee a stable location while no `&mut self` methods are called upon","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":465,"byte_end":559,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ `Self` (with the exception of [`write_buffer`](trait.WriteBuffer.html#tymethod.write_buffer) in","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":560,"byte_end":659,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ our case). This is to allow types like `Vec`, this restriction doesn't apply to `Self::Target`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":660,"byte_end":759,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":760,"byte_end":763,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * The location is only guaranteed to be stable for the duration of `Self`, that means that","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":764,"byte_end":858,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ `Self` doesn't need to be `'static`, i.e. `&'a [u8]` is valid. This can be a bit subtle for","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":859,"byte_end":954,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ most DMA abstractions, because they almost always require `'static`, given the intrinsics of","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":955,"byte_end":1051,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ `mem::forget` and the Rust language itself. Those APIs must also bound to `'static` and not only","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1052,"byte_end":1152,"line_start":17,"line_end":17,"column_start":1,"column_end":101}},{"value":"/ `WriteBuffer`/`ReadBuffer`. The reason we don't require `'static` in the traits themselves is","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1153,"byte_end":1250,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ because it would block implementations that can deal with stack allocated buffers, like APIs","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1251,"byte_end":1347,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ that use closures to prevent memory corruption.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1348,"byte_end":1399,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1400,"byte_end":1403,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If your API also needs a `'static` bound, prefer the use of [StaticReadBuffer] and","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1404,"byte_end":1490,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/ [StaticWriteBuffer]. They are a stricter version that requires a `'static` lifetime invariant,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1491,"byte_end":1589,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ while also allowing end users to __unsafely__ bypass it.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1590,"byte_end":1650,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1651,"byte_end":1654,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ If you are not sure which version of the traits you should be bounding to in your DMA","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1655,"byte_end":1744,"line_start":26,"line_end":26,"column_start":1,"column_end":90}},{"value":"/ implementations, prefer the \"Static\" versions, they are sound for a bigger number of techniques","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1745,"byte_end":1844,"line_start":27,"line_end":27,"column_start":1,"column_end":100}},{"value":"/ that deal with DMA.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1845,"byte_end":1868,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1869,"byte_end":1872,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The above list is not exhaustive, for a complete set of requirements and guarantees, the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1873,"byte_end":1965,"line_start":30,"line_end":30,"column_start":1,"column_end":93}},{"value":"/ documentation of each trait and method should be analyzed.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":1966,"byte_end":2028,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2029,"byte_end":2032,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [StaticReadBuffer]: trait.StaticReadBuffer.html","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2033,"byte_end":2084,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/ [StaticWriteBuffer]: trait.StaticWriteBuffer.html","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2085,"byte_end":2138,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"no_std","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2139,"byte_end":2149,"line_start":35,"line_end":35,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2806,"byte_end":2816,"line_start":55,"line_end":55,"column_start":18,"column_end":28},"name":"ReadBuffer","qualname":"::ReadBuffer","value":"ReadBuffer","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for reading.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for reading.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2262,"byte_end":2321,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2322,"byte_end":2325,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2326,"byte_end":2338,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2339,"byte_end":2342,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The implementing type must be safe to use for DMA reads. This means:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2343,"byte_end":2415,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2416,"byte_end":2419,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - It must be a pointer that references the actual buffer.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2420,"byte_end":2481,"line_start":49,"line_end":49,"column_start":1,"column_end":62}},{"value":"/ - As long as no `&mut self` method is called on the implementing object:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2482,"byte_end":2558,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/   - `read_buffer` must always return the same value, if called multiple","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2559,"byte_end":2634,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/     times.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2635,"byte_end":2649,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/   - The memory specified by the pointer and size returned by `read_buffer`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2650,"byte_end":2728,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/     must not be freed as long as `self` is not dropped.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2729,"byte_end":2788,"line_start":54,"line_end":54,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":13},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2828,"byte_end":2832,"line_start":56,"line_end":56,"column_start":10,"column_end":14},"name":"Word","qualname":"::ReadBuffer::Word","value":"type Word;","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3210,"byte_end":3221,"line_start":69,"line_end":69,"column_start":15,"column_end":26},"name":"read_buffer","qualname":"::ReadBuffer::read_buffer","value":"pub unsafe fn read_buffer(&Self) -> (*const Self::Word, usize)","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA reads.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA reads.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2839,"byte_end":2881,"line_start":58,"line_end":58,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2886,"byte_end":2889,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2894,"byte_end":2918,"line_start":60,"line_end":60,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2923,"byte_end":2926,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2931,"byte_end":2971,"line_start":62,"line_end":62,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":2976,"byte_end":3002,"line_start":63,"line_end":63,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3007,"byte_end":3010,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3015,"byte_end":3027,"line_start":65,"line_end":65,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3032,"byte_end":3035,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3040,"byte_end":3114,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ methods on this object as long as the returned value is in use (by DMA).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3119,"byte_end":3195,"line_start":68,"line_end":68,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3919,"byte_end":3930,"line_start":86,"line_end":86,"column_start":18,"column_end":29},"name":"WriteBuffer","qualname":"::WriteBuffer","value":"WriteBuffer","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for writing.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for writing.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3263,"byte_end":3322,"line_start":72,"line_end":72,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3323,"byte_end":3326,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3327,"byte_end":3339,"line_start":74,"line_end":74,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3340,"byte_end":3343,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The implementing type must be safe to use for DMA writes. This means:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3344,"byte_end":3417,"line_start":76,"line_end":76,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3418,"byte_end":3421,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - It must be a pointer that references the actual buffer.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3422,"byte_end":3483,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"/ - `Target` must be a type that is valid for any possible byte pattern.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3484,"byte_end":3558,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ - As long as no `&mut self` method, except for `write_buffer`, is called on","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3559,"byte_end":3638,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/   the implementing object:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3639,"byte_end":3669,"line_start":81,"line_end":81,"column_start":1,"column_end":31}},{"value":"/   - `write_buffer` must always return the same value, if called multiple","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3670,"byte_end":3746,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/     times.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3747,"byte_end":3761,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/   - The memory specified by the pointer and size returned by `write_buffer`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3762,"byte_end":3841,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/     must not be freed as long as `self` is not dropped.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3842,"byte_end":3901,"line_start":85,"line_end":85,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":16},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3942,"byte_end":3946,"line_start":87,"line_end":87,"column_start":10,"column_end":14},"name":"Word","qualname":"::WriteBuffer::Word","value":"type Word;","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4361,"byte_end":4373,"line_start":101,"line_end":101,"column_start":15,"column_end":27},"name":"write_buffer","qualname":"::WriteBuffer::write_buffer","value":"pub unsafe fn write_buffer(&mut Self) -> (*mut Self::Word, usize)","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA writes.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA writes.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":3953,"byte_end":3996,"line_start":89,"line_end":89,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4001,"byte_end":4004,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4009,"byte_end":4033,"line_start":91,"line_end":91,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4038,"byte_end":4041,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4046,"byte_end":4086,"line_start":93,"line_end":93,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4091,"byte_end":4117,"line_start":94,"line_end":94,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4122,"byte_end":4125,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4130,"byte_end":4142,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4147,"byte_end":4150,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4155,"byte_end":4229,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/ methods, except for `write_buffer`, on this object as long as the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4234,"byte_end":4303,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/ returned value is in use (by DMA).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4308,"byte_end":4346,"line_start":100,"line_end":100,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5261,"byte_end":5265,"line_start":137,"line_end":137,"column_start":18,"column_end":22},"name":"Word","qualname":"::Word","value":"Word","parent":null,"children":[],"decl_id":null,"docs":" Trait for DMA word types used by the blanket DMA buffer impls.","sig":null,"attributes":[{"value":"/ Trait for DMA word types used by the blanket DMA buffer impls.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4965,"byte_end":5031,"line_start":130,"line_end":130,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5032,"byte_end":5035,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5036,"byte_end":5048,"line_start":132,"line_end":132,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5049,"byte_end":5052,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Types that implement this trait must be valid for every possible byte","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5053,"byte_end":5126,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/ pattern. This is to ensure that, whatever DMA writes into the buffer,","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5127,"byte_end":5200,"line_start":135,"line_end":135,"column_start":1,"column_end":74}},{"value":"/ we won't get UB due to invalid values.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5201,"byte_end":5243,"line_start":136,"line_end":136,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":37},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5820,"byte_end":5830,"line_start":157,"line_end":157,"column_start":18,"column_end":28},"name":"ReadTarget","qualname":"::ReadTarget","value":"ReadTarget","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" Trait for `Deref` targets used by the blanket `DmaReadBuffer` impl.","sig":null,"attributes":[{"value":"/ Trait for `Deref` targets used by the blanket `DmaReadBuffer` impl.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5493,"byte_end":5564,"line_start":148,"line_end":148,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5565,"byte_end":5568,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ This trait exists solely to work around","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5569,"byte_end":5612,"line_start":150,"line_end":150,"column_start":1,"column_end":44}},{"value":"/ https://github.com/rust-lang/rust/issues/20400.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5613,"byte_end":5664,"line_start":151,"line_end":151,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5665,"byte_end":5668,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5669,"byte_end":5681,"line_start":153,"line_end":153,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5682,"byte_end":5685,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ - `as_read_buffer` must adhere to the safety requirements","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5686,"byte_end":5747,"line_start":155,"line_end":155,"column_start":1,"column_end":62}},{"value":"/   documented for `DmaReadBuffer::dma_read_buffer`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5748,"byte_end":5802,"line_start":156,"line_end":156,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":38},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5842,"byte_end":5846,"line_start":158,"line_end":158,"column_start":10,"column_end":14},"name":"Word","qualname":"::ReadTarget::Word","value":"type Word: Word;","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":5862,"byte_end":5876,"line_start":160,"line_end":160,"column_start":8,"column_end":22},"name":"as_read_buffer","qualname":"::ReadTarget::as_read_buffer","value":"pub fn as_read_buffer(&Self) -> (*const Self::Word, usize)","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6408,"byte_end":6419,"line_start":176,"line_end":176,"column_start":18,"column_end":29},"name":"WriteTarget","qualname":"::WriteTarget","value":"WriteTarget","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" Trait for `DerefMut` targets used by the blanket `DmaWriteBuffer` impl.","sig":null,"attributes":[{"value":"/ Trait for `DerefMut` targets used by the blanket `DmaWriteBuffer` impl.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6074,"byte_end":6149,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6150,"byte_end":6153,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ This trait exists solely to work around","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6154,"byte_end":6197,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ https://github.com/rust-lang/rust/issues/20400.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6198,"byte_end":6249,"line_start":170,"line_end":170,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6250,"byte_end":6253,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6254,"byte_end":6266,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6267,"byte_end":6270,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ - `as_write_buffer` must adhere to the safety requirements","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6271,"byte_end":6333,"line_start":174,"line_end":174,"column_start":1,"column_end":63}},{"value":"/   documented for `DmaWriteBuffer::dma_write_buffer`.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6334,"byte_end":6390,"line_start":175,"line_end":175,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6431,"byte_end":6435,"line_start":177,"line_end":177,"column_start":10,"column_end":14},"name":"Word","qualname":"::WriteTarget::Word","value":"type Word: Word;","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6451,"byte_end":6466,"line_start":179,"line_end":179,"column_start":8,"column_end":23},"name":"as_write_buffer","qualname":"::WriteTarget::as_write_buffer","value":"pub fn as_write_buffer(&mut Self) -> (*mut Self::Word, usize)","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":59},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9364,"byte_end":9380,"line_start":268,"line_end":268,"column_start":18,"column_end":34},"name":"StaticReadBuffer","qualname":"::StaticReadBuffer","value":"StaticReadBuffer: ReadBuffer","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for reading. This is a more strict version of\n [ReadBuffer](trait.ReadBuffer.html), if you are not sure about which one to use on your safe\n API, prefer this one. This trait also allows end users to __unsafely__ bypass the `'static`\n invariant.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for reading. This is a more strict version of","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":8867,"byte_end":8959,"line_start":259,"line_end":259,"column_start":1,"column_end":93}},{"value":"/ [ReadBuffer](trait.ReadBuffer.html), if you are not sure about which one to use on your safe","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":8960,"byte_end":9056,"line_start":260,"line_end":260,"column_start":1,"column_end":97}},{"value":"/ API, prefer this one. This trait also allows end users to __unsafely__ bypass the `'static`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9057,"byte_end":9152,"line_start":261,"line_end":261,"column_start":1,"column_end":96}},{"value":"/ invariant.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9153,"byte_end":9167,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9168,"byte_end":9171,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9172,"byte_end":9184,"line_start":264,"line_end":264,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9185,"byte_end":9188,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ This has the same invariants as [ReadBuffer](trait.ReadBuffer.html) with the additional","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9189,"byte_end":9280,"line_start":266,"line_end":266,"column_start":1,"column_end":92}},{"value":"/ requirement that the buffer should have a `'static` lifetime.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9281,"byte_end":9346,"line_start":267,"line_end":267,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9404,"byte_end":9408,"line_start":269,"line_end":269,"column_start":10,"column_end":14},"name":"Word","qualname":"::StaticReadBuffer::Word","value":"type Word;","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9786,"byte_end":9804,"line_start":282,"line_end":282,"column_start":15,"column_end":33},"name":"static_read_buffer","qualname":"::StaticReadBuffer::static_read_buffer","value":"pub unsafe fn static_read_buffer(&Self)\n-> (*const <Self as StaticReadBuffer>::Word, usize)","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA reads.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA reads.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9415,"byte_end":9457,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9462,"byte_end":9465,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9470,"byte_end":9494,"line_start":273,"line_end":273,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9499,"byte_end":9502,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9507,"byte_end":9547,"line_start":275,"line_end":275,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9552,"byte_end":9578,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9583,"byte_end":9586,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9591,"byte_end":9603,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9608,"byte_end":9611,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9616,"byte_end":9690,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ methods on this object as long as the returned value is in use (by DMA).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9695,"byte_end":9771,"line_start":281,"line_end":281,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10369,"byte_end":10386,"line_start":294,"line_end":294,"column_start":18,"column_end":35},"name":"StaticWriteBuffer","qualname":"::StaticWriteBuffer","value":"StaticWriteBuffer: WriteBuffer","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" Trait for buffers that can be given to DMA for writing. This is a more strict version of\n [WriteBuffer](trait.WriteBuffer.html), if you are not sure about which one to use on your safe\n API, prefer this one. This trait also allows end users to __unsafely__ bypass the `'static`\n invariant.","sig":null,"attributes":[{"value":"/ Trait for buffers that can be given to DMA for writing. This is a more strict version of","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9868,"byte_end":9960,"line_start":285,"line_end":285,"column_start":1,"column_end":93}},{"value":"/ [WriteBuffer](trait.WriteBuffer.html), if you are not sure about which one to use on your safe","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9961,"byte_end":10059,"line_start":286,"line_end":286,"column_start":1,"column_end":99}},{"value":"/ API, prefer this one. This trait also allows end users to __unsafely__ bypass the `'static`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10060,"byte_end":10155,"line_start":287,"line_end":287,"column_start":1,"column_end":96}},{"value":"/ invariant.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10156,"byte_end":10170,"line_start":288,"line_end":288,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10171,"byte_end":10174,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10175,"byte_end":10187,"line_start":290,"line_end":290,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10188,"byte_end":10191,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ This has the same invariants as [WriteBuffer](trait.WriteBuffer.html) with the additional","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10192,"byte_end":10285,"line_start":292,"line_end":292,"column_start":1,"column_end":94}},{"value":"/ requirement that the buffer should have a `'static` lifetime.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10286,"byte_end":10351,"line_start":293,"line_end":293,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":63},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10411,"byte_end":10415,"line_start":295,"line_end":295,"column_start":10,"column_end":14},"name":"Word","qualname":"::StaticWriteBuffer::Word","value":"type Word;","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10830,"byte_end":10849,"line_start":309,"line_end":309,"column_start":15,"column_end":34},"name":"static_write_buffer","qualname":"::StaticWriteBuffer::static_write_buffer","value":"pub unsafe fn static_write_buffer(&mut Self)\n-> (*mut <Self as StaticWriteBuffer>::Word, usize)","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Provide a buffer usable for DMA writes.","sig":null,"attributes":[{"value":"/ Provide a buffer usable for DMA writes.","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10422,"byte_end":10465,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10470,"byte_end":10473,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The return value is:","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10478,"byte_end":10502,"line_start":299,"line_end":299,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10507,"byte_end":10510,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ - pointer to the start of the buffer","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10515,"byte_end":10555,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ - buffer size in words","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10560,"byte_end":10586,"line_start":302,"line_end":302,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10591,"byte_end":10594,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10599,"byte_end":10611,"line_start":304,"line_end":304,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10616,"byte_end":10619,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ Once this method has been called, it is unsafe to call any `&mut self`","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10624,"byte_end":10698,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ methods, except for `write_buffer`, on this object as long as the","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10703,"byte_end":10772,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ returned value is in use (by DMA).","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10777,"byte_end":10815,"line_start":308,"line_end":308,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4507,"byte_end":4508,"line_start":106,"line_end":106,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4749,"byte_end":4750,"line_start":118,"line_end":118,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6698,"byte_end":6699,"line_start":186,"line_end":186,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6761,"byte_end":6762,"line_start":190,"line_end":190,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":8822,"byte_end":8833,"line_start":255,"line_end":255,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10974,"byte_end":10975,"line_start":312,"line_end":312,"column_start":59,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":11213,"byte_end":11214,"line_start":320,"line_end":320,"column_start":61,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4507,"byte_end":4508,"line_start":106,"line_end":106,"column_start":34,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":19},"to":{"krate":0,"index":12}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":4749,"byte_end":4750,"line_start":118,"line_end":118,"column_start":35,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":24},"to":{"krate":0,"index":15}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6698,"byte_end":6699,"line_start":186,"line_end":186,"column_start":37,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":44},"to":{"krate":0,"index":37}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":6761,"byte_end":6762,"line_start":190,"line_end":190,"column_start":38,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":47},"to":{"krate":0,"index":40}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":8822,"byte_end":8833,"line_start":255,"line_end":255,"column_start":45,"column_end":56},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":15671},"to":{"krate":0,"index":40}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":9382,"byte_end":9392,"line_start":268,"line_end":268,"column_start":36,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":12},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10388,"byte_end":10399,"line_start":294,"line_end":294,"column_start":37,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":15},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":10974,"byte_end":10975,"line_start":312,"line_end":312,"column_start":59,"column_end":60},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":66},"to":{"krate":0,"index":59}},{"span":{"file_name":"/home/mcrae/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-dma-0.1.2/src/lib.rs","byte_start":11213,"byte_end":11214,"line_start":320,"line_end":320,"column_start":61,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":70},"to":{"krate":0,"index":62}}]}